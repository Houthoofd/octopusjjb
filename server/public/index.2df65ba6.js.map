{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,S,I,G,E,E,O,C,O,I,I,E,E,O,C,e,I,I,E,E,O,C,gB,I,A,E,S,a,E,I,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,S,E,C,C,C,E,O,O,I,C,G,O,C,S,C,E,Y,G,A,e,G,O,S,C,c,C,I,C,E,I,O,c,C,E,E,C,W,C,E,I,W,O,C,C,E,A,C,E,G,C,C,I,E,C,E,E,E,uB,I,G,E,E,S,I,EKEO,OAAMwiC,UAAyEniC,OAEpF,OAAOiB,KAAgDyC,CAAiC,CAAE,CAExF,OAAOC,AADS,IAAIw+B,EAAiCz+B,GACpCE,WAAW,EAC9B,CAIAC,YAAaH,CAAiC,CAAE,CAC9C,KAAK,GAAG,IAAA,CAHVI,KAAK,CAA0B,CAAC,EAAC,IAAA,CAWjC3D,GAAG,CAAG,CAAyBiD,EAAUW,KAEvC,IAAI,CAACD,KAAK,CAAC,CAAA,CAAA,EAAIV,EAAG,CAAE,CAAC,CAAGW,EACxBC,AAAAA,CAAAA,EAAAA,EAAAA,UAAAA,AAAAA,EAAW/D,cAAc,CAAE,IAAI,CAAC6D,KAAK,CAAEV,GAChC,IAAI,CAACU,KAAK,CAACV,EAAI,EAVtBpD,OAAOkD,IAAI,CAAEQ,GAAgBP,OAAO,CAAC,AAAEC,IACrC,IAAI,CAACjD,GAAG,CAAEiD,EAAMM,CAAa,CAACN,EAAK,CACrC,EAEF,CAUA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","sources":["<anon>","ui/node_modules/@lithium-framework/core/dist/module.js","ui/node_modules/@lithium-framework/core/dist/src/index.ts","ui/node_modules/@lithium-framework/core/dist/src/dom/index.ts","ui/node_modules/@lithium-framework/core/dist/src/utils/observable-object/index.ts","ui/node_modules/@lithium-framework/core/dist/src/utils/observable-object/models.ts","ui/node_modules/@lithium-framework/core/dist/src/decorators/index.ts","ui/node_modules/@lithium-framework/core/dist/src/decorators/attributeState.ts","ui/node_modules/@lithium-framework/core/dist/src/decorators/state.ts","ui/node_modules/@lithium-framework/core/dist/src/directives/index.ts","ui/node_modules/@lithium-framework/core/dist/src/directives/assyncAppend.ts","ui/node_modules/@lithium-framework/core/dist/src/directives/ref.ts","ui/node_modules/@lithium-framework/core/dist/src/directives/state.ts","ui/node_modules/@lithium-framework/core/dist/src/directives/style.ts","ui/node_modules/@lithium-framework/core/dist/src/directives/until.ts","ui/node_modules/@lithium-framework/core/dist/src/utils/index.ts","ui/node_modules/@lithium-framework/core/dist/src/webComponent/index.ts","ui/node_modules/@lithium-framework/core/dist/src/webComponent/model.ts","ui/node_modules/@microsoft/fast-element/dist/esm/observation/observable.js","ui/node_modules/@microsoft/fast-element/dist/esm/interfaces.js","ui/node_modules/@microsoft/fast-element/dist/esm/platform.js","ui/node_modules/@microsoft/fast-element/dist/esm/polyfills.js","ui/node_modules/@microsoft/fast-element/dist/esm/observation/update-queue.js","ui/node_modules/@microsoft/fast-element/dist/esm/observation/notifier.js","ui/node_modules/@microsoft/fast-element/dist/esm/components/attributes.js","ui/node_modules/@microsoft/fast-element/dist/esm/dom.js","ui/node_modules/@microsoft/fast-element/dist/esm/binding/binding.js","ui/node_modules/@microsoft/fast-element/dist/esm/templating/children.js","ui/node_modules/@microsoft/fast-element/dist/esm/templating/html-directive.js","ui/node_modules/@microsoft/fast-element/dist/esm/templating/markup.js","ui/node_modules/@microsoft/fast-element/dist/esm/templating/node-observation.js","ui/node_modules/@microsoft/fast-element/dist/esm/styles/css.js","ui/node_modules/@microsoft/fast-element/dist/esm/binding/one-way.js","ui/node_modules/@microsoft/fast-element/dist/esm/styles/css-directive.js","ui/node_modules/@microsoft/fast-element/dist/esm/styles/element-styles.js","ui/node_modules/@microsoft/fast-element/dist/esm/styles/css-binding-directive.js","ui/node_modules/@microsoft/fast-element/dist/esm/components/fast-element.js","ui/node_modules/@microsoft/fast-element/dist/esm/components/element-controller.js","ui/node_modules/@microsoft/fast-element/dist/esm/utilities.js","ui/node_modules/@microsoft/fast-element/dist/esm/components/fast-definitions.js","ui/node_modules/@microsoft/fast-element/dist/esm/components/hydration.js","ui/node_modules/@microsoft/fast-element/dist/esm/templating/template.js","ui/node_modules/@microsoft/fast-element/dist/esm/binding/one-time.js","ui/node_modules/@microsoft/fast-element/dist/esm/templating/html-binding-directive.js","ui/node_modules/@microsoft/fast-element/dist/esm/templating/view.js","ui/node_modules/@microsoft/fast-element/dist/esm/hydration/target-builder.js","ui/node_modules/@microsoft/fast-element/dist/esm/templating/compiler.js","ui/node_modules/@microsoft/fast-element/dist/esm/templating/repeat.js","ui/node_modules/@microsoft/fast-element/dist/esm/observation/arrays.js","ui/node_modules/@microsoft/fast-element/dist/esm/binding/normalize.js","ui/node_modules/@microsoft/fast-element/dist/esm/templating/slotted.js","ui/node_modules/@microsoft/fast-element/dist/esm/templating/when.js","ui/node_modules/@lithium-framework/state/dist/module.js","ui/node_modules/@lithium-framework/state/dist/src/index.ts","ui/node_modules/@lithium-framework/state/dist/src/models/state.ts","ui/node_modules/@lithium-framework/state/dist/src/createState.ts","ui/node_modules/@lithium-framework/context/dist/module.js","ui/node_modules/@lithium-framework/context/dist/src/index.ts","ui/node_modules/@lithium-framework/context/dist/src/create-storage.ts","ui/node_modules/@lithium-framework/context/dist/src/models/storage.ts","ui/node_modules/@lithium-framework/huid/dist/module.js","ui/node_modules/@lithium-framework/huid/dist/src/index.ts","ui/node_modules/get-random-values/index.js","ui/node_modules/global/window.js","node_modules/@parcel/node-resolver-core/lib/_empty.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirec605\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirec605\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"1BF7I\", function(module, exports) {\n\n$parcel$export(module.exports, \"render\", () => $12b925683b720d81$export$b3890eb0ae9dca99);\n$parcel$export(module.exports, \"html\", () => $12b925683b720d81$export$c0bb0b647f701bb5);\n$parcel$export(module.exports, \"WebComponent\", () => $12b925683b720d81$export$7f8b9f308979d41d);\n$parcel$export(module.exports, \"customElement\", () => (parcelRequire(\"cTUOC\")).customElement);\n\nvar $kyf8E = parcelRequire(\"kyf8E\");\n\nvar $hIJMY = parcelRequire(\"hIJMY\");\nvar $7v8l6 = parcelRequire(\"7v8l6\");\nvar $d4xDP = parcelRequire(\"d4xDP\");\nvar $23el4 = parcelRequire(\"23el4\");\nvar $cTUOC = parcelRequire(\"cTUOC\");\nvar $d8FOX = parcelRequire(\"d8FOX\");\nvar $lhgTg = parcelRequire(\"lhgTg\");\nvar $4VObL = parcelRequire(\"4VObL\");\nvar $dgoyj = parcelRequire(\"dgoyj\");\nvar $TMf7M = parcelRequire(\"TMf7M\");\nvar $kyf8E = parcelRequire(\"kyf8E\");\nvar $dLl2P = parcelRequire(\"dLl2P\");\nvar $ipcC9 = parcelRequire(\"ipcC9\");\nvar $juDPm = parcelRequire(\"juDPm\");\n\nvar $6iBHo = parcelRequire(\"6iBHo\");\n\nvar $jbBC9 = parcelRequire(\"jbBC9\");\n\nvar $bdZ6n = parcelRequire(\"bdZ6n\");\nfunction $12b925683b720d81$var$$parcel$export(e, n, v, s) {\n    Object.defineProperty(e, n, {\n        get: v,\n        set: s,\n        enumerable: true,\n        configurable: true\n    });\n}\nfunction $12b925683b720d81$var$$parcel$exportWildcard(dest, source) {\n    Object.keys(source).forEach(function(key) {\n        if (key === \"default\" || key === \"__esModule\" || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function get() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n}\nvar $12b925683b720d81$var$$ed2a677aa7485959$exports = {};\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$ed2a677aa7485959$exports, \"ViewExecutionContext\", ()=>$12b925683b720d81$export$1053a9be1bcefef9);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$ed2a677aa7485959$exports, \"render\", ()=>$12b925683b720d81$export$b3890eb0ae9dca99);\nclass $12b925683b720d81$export$b176171395436676 extends Object {\n    static init(initialObject) {\n        let observabe = new $12b925683b720d81$export$b176171395436676(initialObject);\n        return observabe.createProxy();\n    }\n    constructor(initialObject){\n        super();\n        this.$data = {};\n        this.set = (key, value)=>{\n            this.$data[`_${key}`] = value;\n            (0, $kyf8E.Observable).defineProperty(this.$data, key);\n            return this.$data[key];\n        };\n        Object.keys(initialObject).forEach((key)=>{\n            this.set(key, initialObject[key]);\n        });\n    }\n    createProxy() {\n        return new Proxy(this.$data, {\n            get (store, propKey) {\n                let result = undefined;\n                try {\n                    result = store[propKey];\n                } catch (error) {\n                    console.error(error);\n                } finally{\n                    return result;\n                }\n            },\n            set (store, propKey, value) {\n                if (store[propKey]) store[propKey] = value;\n                else {\n                    store[`_${propKey}`] = value;\n                    (0, $kyf8E.Observable).defineProperty(store, propKey);\n                }\n                return true;\n            }\n        });\n    }\n}\nfunction $12b925683b720d81$export$dcc5cf24d8fb3b41(initialObject) {\n    return $12b925683b720d81$export$b176171395436676.init(initialObject);\n}\nvar $12b925683b720d81$var$$535bb7ac3b1a1d6d$exports = {};\nvar $12b925683b720d81$var$$b1b98f19caab25c2$exports = {};\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$b1b98f19caab25c2$exports, \"attrState\", ()=>$12b925683b720d81$export$683a0e8baad8b9c3);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$b1b98f19caab25c2$exports, \"attr\", ()=>(0, $hIJMY.attr));\nvar $12b925683b720d81$var$$a1f8df21dd3b8ee9$exports = {};\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$a1f8df21dd3b8ee9$exports, \"state\", ()=>$12b925683b720d81$export$ca000e230c0caa3e);\nfunction $12b925683b720d81$export$ca000e230c0caa3e(target, propertyKey, value = null, constructible = false) {\n    if (constructible) target.constructor.states = target.constructor.states || {};\n    Object.defineProperty(target, propertyKey, {\n        get () {\n            return target.$states[propertyKey];\n        },\n        set (newValue) {\n            target.$states[propertyKey] = newValue;\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    (0, $kyf8E.observable)(target, propertyKey);\n    if (value) target[propertyKey] = value;\n}\nfunction $12b925683b720d81$export$683a0e8baad8b9c3(options = {}) {\n    return (target, propertyKey)=>{\n        (0, $hIJMY.attr)(options)(target, propertyKey);\n        $12b925683b720d81$export$ca000e230c0caa3e(target, propertyKey);\n    };\n}\n$12b925683b720d81$var$$parcel$exportWildcard($12b925683b720d81$var$$535bb7ac3b1a1d6d$exports, $12b925683b720d81$var$$b1b98f19caab25c2$exports);\n$12b925683b720d81$var$$parcel$exportWildcard($12b925683b720d81$var$$535bb7ac3b1a1d6d$exports, $12b925683b720d81$var$$a1f8df21dd3b8ee9$exports);\nfunction $12b925683b720d81$var$$ed2a677aa7485959$var$_classPrivateFieldLooseBase(e, t) {\n    if (!({}).hasOwnProperty.call(e, t)) throw new TypeError(\"attempted to use private field on non-instance\");\n    return e;\n}\nvar $12b925683b720d81$var$$ed2a677aa7485959$var$id = 0;\nfunction $12b925683b720d81$var$$ed2a677aa7485959$var$_classPrivateFieldLooseKey(e) {\n    return \"__private_\" + $12b925683b720d81$var$$ed2a677aa7485959$var$id++ + \"_\" + e;\n}\nvar $12b925683b720d81$var$$ed2a677aa7485959$var$_state_keys = /*#__PURE__*/ $12b925683b720d81$var$$ed2a677aa7485959$var$_classPrivateFieldLooseKey(\"_state_keys\");\nclass $12b925683b720d81$export$1053a9be1bcefef9 {\n    get states() {\n        return this.$states;\n    }\n    constructor(data){\n        this.$states = $12b925683b720d81$export$b176171395436676.init({});\n        Object.defineProperty(this, $12b925683b720d81$var$$ed2a677aa7485959$var$_state_keys, {\n            writable: true,\n            value: []\n        });\n        this.createState = (key, value)=>{\n            if ($12b925683b720d81$var$$ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $12b925683b720d81$var$$ed2a677aa7485959$var$_state_keys)[$12b925683b720d81$var$$ed2a677aa7485959$var$_state_keys].includes(key)) return this.useState(key);\n            Object.defineProperty(this, key, {\n                get () {\n                    return JSON.parse(this.states[key]);\n                },\n                set (value) {\n                    if (!$12b925683b720d81$var$$ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $12b925683b720d81$var$$ed2a677aa7485959$var$_state_keys)[$12b925683b720d81$var$$ed2a677aa7485959$var$_state_keys].includes(key)) {\n                        $12b925683b720d81$var$$ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $12b925683b720d81$var$$ed2a677aa7485959$var$_state_keys)[$12b925683b720d81$var$$ed2a677aa7485959$var$_state_keys].push(key);\n                        this.$states = $12b925683b720d81$export$b176171395436676.init({\n                            [key]: JSON.stringify(value),\n                            ...Object.fromEntries(new Map(Array.from($12b925683b720d81$var$$ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $12b925683b720d81$var$$ed2a677aa7485959$var$_state_keys)[$12b925683b720d81$var$$ed2a677aa7485959$var$_state_keys], (key)=>{\n                                return [\n                                    key,\n                                    this.$states[`${key}`]\n                                ];\n                            })))\n                        });\n                    }\n                    this.$states[key] = JSON.stringify(value);\n                }\n            });\n            this[key] = value;\n            return this.useState(key);\n        };\n        this.useState = (key)=>{\n            return [\n                this[key],\n                (newValue)=>{\n                    console.log({\n                        newValue: newValue\n                    });\n                    this[key] = newValue;\n                }\n            ];\n        };\n        this.createConsumable = (key, value)=>{\n            $12b925683b720d81$export$ca000e230c0caa3e(this, key, value, false);\n        };\n        Object.assign(this, data);\n    }\n    static init(data) {\n        return new $12b925683b720d81$export$1053a9be1bcefef9(data);\n    }\n}\nfunction $12b925683b720d81$export$b3890eb0ae9dca99(template, container = document.body, data = {}) {\n    let context = $12b925683b720d81$export$1053a9be1bcefef9.init(data);\n    return template.render(context, container);\n}\nvar $12b925683b720d81$var$$5193209399721411$exports = {};\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$5193209399721411$exports, \"when\", ()=>(0, $juDPm.when));\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$5193209399721411$exports, \"repeat\", ()=>(0, $dLl2P.repeat));\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$5193209399721411$exports, \"children\", ()=>(0, $d4xDP.children));\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$5193209399721411$exports, \"elements\", ()=>(0, $d8FOX.elements));\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$5193209399721411$exports, \"slotted\", ()=>(0, $ipcC9.slotted));\nvar $12b925683b720d81$var$$21522158c10703ef$exports = {};\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$21522158c10703ef$exports, \"AsyncAppendBindig\", ()=>$12b925683b720d81$export$ca3487b83ec6860a);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$21522158c10703ef$exports, \"AsyncAppendDirective\", ()=>$12b925683b720d81$export$5761d9f85430a54b);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$21522158c10703ef$exports, \"asyncAppend\", ()=>$12b925683b720d81$export$eaa89ade56b7c0c1);\nclass $12b925683b720d81$export$ca3487b83ec6860a extends (0, $7v8l6.Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $12b925683b720d81$export$5761d9f85430a54b extends (0, $4VObL.HTMLBindingDirective) {\n    constructor(fn, callback){\n        super(new $12b925683b720d81$export$ca3487b83ec6860a((x)=>null));\n        this.fn = null;\n        this.callback = null;\n        Object.assign(this, {\n            fn: fn,\n            callback: callback\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                this.fn.then((result)=>{\n                    this.callback(result).render(source, target instanceof HTMLElement ? target : target.parentElement);\n                }).catch((error)=>{\n                    console.error(error);\n                    (0, $lhgTg.html)`<span>Error: ${error}</span>`.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                });\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(fn, callback) {\n        return new $12b925683b720d81$export$5761d9f85430a54b(fn, callback);\n    }\n}\n(0, $dgoyj.HTMLDirective).define($12b925683b720d81$export$5761d9f85430a54b);\nconst $12b925683b720d81$export$eaa89ade56b7c0c1 = (fn, callback)=>$12b925683b720d81$export$5761d9f85430a54b.use(fn, callback);\nvar $12b925683b720d81$var$$f6651d38d609160e$exports = {};\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$f6651d38d609160e$exports, \"createRef\", ()=>$12b925683b720d81$export$7d1e3a5e95ceca43);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$f6651d38d609160e$exports, \"RefDirective\", ()=>$12b925683b720d81$export$1ef8aea9a6de98d);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$f6651d38d609160e$exports, \"ref\", ()=>$12b925683b720d81$export$eff4d24c3ff7876e);\nfunction $12b925683b720d81$export$7d1e3a5e95ceca43() {\n    return {\n        value: null\n    };\n}\nclass $12b925683b720d81$export$1ef8aea9a6de98d extends (0, $dgoyj.StatelessAttachedAttributeDirective) {\n    constructor(options){\n        super(options);\n        this.options = null;\n        Object.assign(this, {\n            options: options\n        });\n    }\n    bind(controller) {\n        let { lastChild: target } = controller;\n        this.options.value = target;\n    }\n    static use(options) {\n        return new $12b925683b720d81$export$1ef8aea9a6de98d(options);\n    }\n}\n(0, $dgoyj.HTMLDirective).define($12b925683b720d81$export$1ef8aea9a6de98d);\nconst $12b925683b720d81$export$eff4d24c3ff7876e = (options)=>$12b925683b720d81$export$1ef8aea9a6de98d.use(options);\nvar $12b925683b720d81$var$$c66c6ea353620255$exports = {};\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$c66c6ea353620255$exports, \"StateBindig\", ()=>$12b925683b720d81$export$28205fa712822499);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$c66c6ea353620255$exports, \"StateDirective\", ()=>$12b925683b720d81$export$792c882b75ca2192);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$c66c6ea353620255$exports, \"useState\", ()=>$12b925683b720d81$export$60241385465d0a34);\n// import { ViewTemplate, HTMLBindingDirective, ExecutionContext } from '@microsoft/fast-element';\nclass $12b925683b720d81$export$28205fa712822499 extends (0, $7v8l6.Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $12b925683b720d81$export$792c882b75ca2192 extends (0, $4VObL.HTMLBindingDirective) {\n    get state() {\n        return this._state.mutator[0];\n    }\n    set state(value) {\n        this._state.mutator[1](value);\n    }\n    constructor(state, callback){\n        super(new $12b925683b720d81$export$28205fa712822499((x)=>null));\n        this._state = null;\n        this._callback = null;\n        this._state = state;\n        this._callback = callback;\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        let view = null;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                if (this._callback) {\n                    this._state.subscribe(()=>{\n                        view.dispose();\n                        view = this._callback(this.state).render(source, target.parentElement);\n                    });\n                    view = this._callback(this.state).render(source, target.parentElement);\n                } else {\n                    this._state.subscribe(()=>{\n                        if (\"textContent\" in target) target.textContent = `${this.state}`;\n                    });\n                    if (\"textContent\" in target) target.textContent = `${this.state}`;\n                }\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(state, callback) {\n        return new $12b925683b720d81$export$792c882b75ca2192(state, callback);\n    }\n}\n(0, $dgoyj.HTMLDirective).define($12b925683b720d81$export$792c882b75ca2192);\nconst $12b925683b720d81$export$60241385465d0a34 = (state, callback)=>$12b925683b720d81$export$792c882b75ca2192.use(state, callback);\nvar $12b925683b720d81$var$$6e530dd7df9f7fe5$exports = {};\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$6e530dd7df9f7fe5$exports, \"StyleBindig\", ()=>$12b925683b720d81$export$81053cd05d55c9d8);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$6e530dd7df9f7fe5$exports, \"StyleDirective\", ()=>$12b925683b720d81$export$18211b6e76035cfa);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$6e530dd7df9f7fe5$exports, \"style\", ()=>$12b925683b720d81$export$1d567c320f4763bc);\nclass $12b925683b720d81$export$81053cd05d55c9d8 extends (0, $7v8l6.Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $12b925683b720d81$export$18211b6e76035cfa extends (0, $4VObL.HTMLBindingDirective) {\n    constructor(css){\n        super(new $12b925683b720d81$export$81053cd05d55c9d8((x)=>null));\n        this.css = null;\n        Object.assign(this, {\n            css: css\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        let view = null;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                if (target instanceof HTMLElement) Object.assign(target.style, this.css);\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(css) {\n        return new $12b925683b720d81$export$18211b6e76035cfa(css);\n    }\n}\n(0, $dgoyj.HTMLDirective).define($12b925683b720d81$export$18211b6e76035cfa);\nconst $12b925683b720d81$export$1d567c320f4763bc = (css)=>$12b925683b720d81$export$18211b6e76035cfa.use(css);\nvar $12b925683b720d81$var$$15db1e855f042fe6$exports = {};\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$15db1e855f042fe6$exports, \"UntilBindig\", ()=>$12b925683b720d81$export$f36d8f10294685f8);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$15db1e855f042fe6$exports, \"UntilDirective\", ()=>$12b925683b720d81$export$51c6edf8ee19b71a);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$15db1e855f042fe6$exports, \"until\", ()=>$12b925683b720d81$export$a40009bd2c363351);\nclass $12b925683b720d81$export$f36d8f10294685f8 extends (0, $7v8l6.Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $12b925683b720d81$export$51c6edf8ee19b71a extends (0, $4VObL.HTMLBindingDirective) {\n    constructor(fn, template){\n        super(new $12b925683b720d81$export$f36d8f10294685f8((x)=>null));\n        this.fn = null;\n        this.template = null;\n        Object.assign(this, {\n            fn: fn,\n            template: template\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                let loading = this.template.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                this.fn.then((result)=>{\n                    loading.dispose();\n                    result.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                }).catch((error)=>{\n                    console.error(error);\n                    loading.dispose();\n                    (0, $lhgTg.html)`<span>Error: ${error}</span>`.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                });\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(fn, template) {\n        return new $12b925683b720d81$export$51c6edf8ee19b71a(fn, template);\n    }\n}\n(0, $dgoyj.HTMLDirective).define($12b925683b720d81$export$51c6edf8ee19b71a);\nconst $12b925683b720d81$export$a40009bd2c363351 = (fn, template)=>$12b925683b720d81$export$51c6edf8ee19b71a.use(fn, template);\n$12b925683b720d81$var$$parcel$exportWildcard($12b925683b720d81$var$$5193209399721411$exports, $12b925683b720d81$var$$21522158c10703ef$exports);\n$12b925683b720d81$var$$parcel$exportWildcard($12b925683b720d81$var$$5193209399721411$exports, $12b925683b720d81$var$$f6651d38d609160e$exports);\n$12b925683b720d81$var$$parcel$exportWildcard($12b925683b720d81$var$$5193209399721411$exports, $12b925683b720d81$var$$c66c6ea353620255$exports);\n$12b925683b720d81$var$$parcel$exportWildcard($12b925683b720d81$var$$5193209399721411$exports, $12b925683b720d81$var$$6e530dd7df9f7fe5$exports);\n$12b925683b720d81$var$$parcel$exportWildcard($12b925683b720d81$var$$5193209399721411$exports, $12b925683b720d81$var$$15db1e855f042fe6$exports);\nvar $12b925683b720d81$var$$fde9406d76ec24a9$exports = {};\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$fde9406d76ec24a9$exports, \"Observable\", ()=>$12b925683b720d81$export$77cea355fa80b5f4);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$fde9406d76ec24a9$exports, \"createObservableObject\", ()=>$12b925683b720d81$export$dcc5cf24d8fb3b41);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$fde9406d76ec24a9$exports, \"ObservableObject\", ()=>$12b925683b720d81$export$b176171395436676);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$fde9406d76ec24a9$exports, \"State\", ()=>(0, $6iBHo.State));\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$fde9406d76ec24a9$exports, \"createState\", ()=>(0, $6iBHo.createState));\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$fde9406d76ec24a9$exports, \"createStorage\", ()=>(0, $jbBC9.createStorage));\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$fde9406d76ec24a9$exports, \"uuid\", ()=>(0, $bdZ6n.uuid));\n// export{\n//   Observable,\n//   volatile,\n// State,\n// createState,\n// createStorage,\n// Storage, \n// StorageKeys, \n// StorageValues, \n// StateValidator,\n// ComponentId,\n// Segment,\n// ParentSegementId,\n// CollectionId,\n// HUID,\n// HierarchicalUUIDOptions,\n// uuid\n// }\nvar $12b925683b720d81$var$$c5a7ff2cef84a00c$exports = {};\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$c5a7ff2cef84a00c$exports, \"html\", ()=>$12b925683b720d81$export$c0bb0b647f701bb5);\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$c5a7ff2cef84a00c$exports, \"customElement\", ()=>(0, $cTUOC.customElement));\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$c5a7ff2cef84a00c$exports, \"css\", ()=>(0, $23el4.css));\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$c5a7ff2cef84a00c$exports, \"ViewTemplate\", ()=>(0, $lhgTg.ViewTemplate));\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$c5a7ff2cef84a00c$exports, \"HTMLView\", ()=>(0, $TMf7M.HTMLView));\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$c5a7ff2cef84a00c$exports, \"volatile\", ()=>(0, $kyf8E.volatile));\n$12b925683b720d81$var$$parcel$export($12b925683b720d81$var$$c5a7ff2cef84a00c$exports, \"WebComponent\", ()=>$12b925683b720d81$export$7f8b9f308979d41d);\nclass $12b925683b720d81$export$7f8b9f308979d41d extends (0, $cTUOC.FASTElement) {\n    constructor(){\n        super();\n        /* The line ` = ObservableObject.init( this.constructor[\"states\"] );` is initializing an\n    instance property named `` on the `WebComponent` class. This property is being set to the\n    result of calling the `init` method of the `ObservableObject` class, passing in the initial state\n    values defined in the `states` static property of the `WebComponent` class\n    (`this.constructor[\"states\"]`). */ this.$states = $12b925683b720d81$export$b176171395436676.init(this.constructor[\"states\"]);\n        Object.keys(this.constructor[\"states\"]).forEach((key)=>{\n            // delete this[key];\n            Object.defineProperty(this, key, {\n                get () {\n                    return this.$states[key];\n                },\n                set (value) {\n                    this.$states[key] = value;\n                }\n            });\n        });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n    }\n}\n/* The `static states = {};` line is declaring a static property named `states` on the `WebComponent`\nclass and initializing it as an empty object `{}`. This property is intended to hold the initial\nstate values for the component. By defining it as a static property, it is shared among all\ninstances of the `WebComponent` class rather than being specific to individual instances. This\nallows all instances of the class to access and modify the same set of state values. */ $12b925683b720d81$export$7f8b9f308979d41d.states = {};\n$12b925683b720d81$export$7f8b9f308979d41d.define = (0, $cTUOC.FASTElement).define;\nconst $12b925683b720d81$export$c0bb0b647f701bb5 = (0, $lhgTg.html);\n\n});\nparcelRegister(\"kyf8E\", function(module, exports) {\n\n$parcel$export(module.exports, \"SourceLifetime\", () => $ef62b9d3f31c76fb$export$9a9eae009eb8780f);\n$parcel$export(module.exports, \"Observable\", () => $ef62b9d3f31c76fb$export$77cea355fa80b5f4);\n$parcel$export(module.exports, \"observable\", () => $ef62b9d3f31c76fb$export$5ab46cbf6120b33a);\n$parcel$export(module.exports, \"volatile\", () => $ef62b9d3f31c76fb$export$e338fff42eed603a);\n$parcel$export(module.exports, \"ExecutionContext\", () => $ef62b9d3f31c76fb$export$f7c638676c8af91d);\n\nvar $gAsSx = parcelRequire(\"gAsSx\");\n\nvar $c22v8 = parcelRequire(\"c22v8\");\n\nvar $igor1 = parcelRequire(\"igor1\");\n\nvar $aEJPD = parcelRequire(\"aEJPD\");\nconst $ef62b9d3f31c76fb$export$9a9eae009eb8780f = Object.freeze({\n    /**\n     * The source to controller lifetime relationship is unknown.\n     */ unknown: void 0,\n    /**\n     * The source and controller lifetimes are coupled to one another.\n     * They can/will be GC'd together.\n     */ coupled: 1\n});\nconst $ef62b9d3f31c76fb$export$77cea355fa80b5f4 = (0, $c22v8.FAST).getById((0, $gAsSx.KernelServiceId).observable, ()=>{\n    const queueUpdate = (0, $igor1.Updates).enqueue;\n    const volatileRegex = /(:|&&|\\|\\||if|\\?\\.)/;\n    const notifierLookup = new WeakMap();\n    let watcher = void 0;\n    let createArrayObserver = (array)=>{\n        throw (0, $c22v8.FAST).error(1101 /* Message.needsArrayObservation */ );\n    };\n    function getNotifier(source) {\n        var _a;\n        let found = (_a = source.$fastController) !== null && _a !== void 0 ? _a : notifierLookup.get(source);\n        if (found === void 0) Array.isArray(source) ? found = createArrayObserver(source) : notifierLookup.set(source, found = new (0, $aEJPD.PropertyChangeNotifier)(source));\n        return found;\n    }\n    const getAccessors = (0, $c22v8.createMetadataLocator)();\n    class DefaultObservableAccessor {\n        constructor(name){\n            this.name = name;\n            this.field = `_${name}`;\n            this.callback = `${name}Changed`;\n        }\n        getValue(source) {\n            if (watcher !== void 0) watcher.watch(source, this.name);\n            return source[this.field];\n        }\n        setValue(source, newValue) {\n            const field = this.field;\n            const oldValue = source[field];\n            if (oldValue !== newValue) {\n                source[field] = newValue;\n                const callback = source[this.callback];\n                if ((0, $gAsSx.isFunction)(callback)) callback.call(source, oldValue, newValue);\n                getNotifier(source).notify(this.name);\n            }\n        }\n    }\n    class ExpressionNotifierImplementation extends (0, $aEJPD.SubscriberSet) {\n        constructor(expression, initialSubscriber, isVolatileBinding = false){\n            super(expression, initialSubscriber);\n            this.expression = expression;\n            this.isVolatileBinding = isVolatileBinding;\n            this.needsRefresh = true;\n            this.needsQueue = true;\n            this.isAsync = true;\n            this.first = this;\n            this.last = null;\n            this.propertySource = void 0;\n            this.propertyName = void 0;\n            this.notifier = void 0;\n            this.next = void 0;\n        }\n        setMode(isAsync) {\n            this.isAsync = this.needsQueue = isAsync;\n        }\n        bind(controller) {\n            this.controller = controller;\n            const value = this.observe(controller.source, controller.context);\n            if (!controller.isBound && this.requiresUnbind(controller)) controller.onUnbind(this);\n            return value;\n        }\n        requiresUnbind(controller) {\n            return controller.sourceLifetime !== $ef62b9d3f31c76fb$export$9a9eae009eb8780f.coupled || this.first !== this.last || this.first.propertySource !== controller.source;\n        }\n        unbind(controller) {\n            this.dispose();\n        }\n        observe(source, context) {\n            if (this.needsRefresh && this.last !== null) this.dispose();\n            const previousWatcher = watcher;\n            watcher = this.needsRefresh ? this : void 0;\n            this.needsRefresh = this.isVolatileBinding;\n            let result;\n            try {\n                result = this.expression(source, context);\n            } finally{\n                watcher = previousWatcher;\n            }\n            return result;\n        }\n        // backwards compat with v1 kernel\n        disconnect() {\n            this.dispose();\n        }\n        dispose() {\n            if (this.last !== null) {\n                let current = this.first;\n                while(current !== void 0){\n                    current.notifier.unsubscribe(this, current.propertyName);\n                    current = current.next;\n                }\n                this.last = null;\n                this.needsRefresh = this.needsQueue = this.isAsync;\n            }\n        }\n        watch(propertySource, propertyName) {\n            const prev = this.last;\n            const notifier = getNotifier(propertySource);\n            const current = prev === null ? this.first : {};\n            current.propertySource = propertySource;\n            current.propertyName = propertyName;\n            current.notifier = notifier;\n            notifier.subscribe(this, propertyName);\n            if (prev !== null) {\n                if (!this.needsRefresh) {\n                    // Declaring the variable prior to assignment below circumvents\n                    // a bug in Angular's optimization process causing infinite recursion\n                    // of this watch() method. Details https://github.com/microsoft/fast/issues/4969\n                    let prevValue;\n                    watcher = void 0;\n                    /* eslint-disable-next-line */ prevValue = prev.propertySource[prev.propertyName];\n                    /* eslint-disable-next-line */ watcher = this;\n                    if (propertySource === prevValue) this.needsRefresh = true;\n                }\n                prev.next = current;\n            }\n            this.last = current;\n        }\n        handleChange() {\n            if (this.needsQueue) {\n                this.needsQueue = false;\n                queueUpdate(this);\n            } else if (!this.isAsync) this.call();\n        }\n        call() {\n            if (this.last !== null) {\n                this.needsQueue = this.isAsync;\n                this.notify(this);\n            }\n        }\n        *records() {\n            let next = this.first;\n            while(next !== void 0){\n                yield next;\n                next = next.next;\n            }\n        }\n    }\n    (0, $c22v8.makeSerializationNoop)(ExpressionNotifierImplementation);\n    return Object.freeze({\n        /**\n         * @internal\n         * @param factory - The factory used to create array observers.\n         */ setArrayObserverFactory (factory) {\n            createArrayObserver = factory;\n        },\n        getNotifier: /**\n         * Gets a notifier for an object or Array.\n         * @param source - The object or Array to get the notifier for.\n         */ getNotifier,\n        /**\n         * Records a property change for a source object.\n         * @param source - The object to record the change against.\n         * @param propertyName - The property to track as changed.\n         */ track (source, propertyName) {\n            watcher && watcher.watch(source, propertyName);\n        },\n        /**\n         * Notifies watchers that the currently executing property getter or function is volatile\n         * with respect to its observable dependencies.\n         */ trackVolatile () {\n            watcher && (watcher.needsRefresh = true);\n        },\n        /**\n         * Notifies subscribers of a source object of changes.\n         * @param source - the object to notify of changes.\n         * @param args - The change args to pass to subscribers.\n         */ notify (source, args) {\n            /* eslint-disable-next-line @typescript-eslint/no-use-before-define */ getNotifier(source).notify(args);\n        },\n        /**\n         * Defines an observable property on an object or prototype.\n         * @param target - The target object to define the observable on.\n         * @param nameOrAccessor - The name of the property to define as observable;\n         * or a custom accessor that specifies the property name and accessor implementation.\n         */ defineProperty (target, nameOrAccessor) {\n            if ((0, $gAsSx.isString)(nameOrAccessor)) nameOrAccessor = new DefaultObservableAccessor(nameOrAccessor);\n            getAccessors(target).push(nameOrAccessor);\n            Reflect.defineProperty(target, nameOrAccessor.name, {\n                enumerable: true,\n                get () {\n                    return nameOrAccessor.getValue(this);\n                },\n                set (newValue) {\n                    nameOrAccessor.setValue(this, newValue);\n                }\n            });\n        },\n        getAccessors: /**\n         * Finds all the observable accessors defined on the target,\n         * including its prototype chain.\n         * @param target - The target object to search for accessor on.\n         */ getAccessors,\n        /**\n         * Creates a {@link ExpressionNotifier} that can watch the\n         * provided {@link Expression} for changes.\n         * @param expression - The binding to observe.\n         * @param initialSubscriber - An initial subscriber to changes in the binding value.\n         * @param isVolatileBinding - Indicates whether the binding's dependency list must be re-evaluated on every value evaluation.\n         */ binding (expression, initialSubscriber, isVolatileBinding = this.isVolatileBinding(expression)) {\n            return new ExpressionNotifierImplementation(expression, initialSubscriber, isVolatileBinding);\n        },\n        /**\n         * Determines whether a binding expression is volatile and needs to have its dependency list re-evaluated\n         * on every evaluation of the value.\n         * @param expression - The binding to inspect.\n         */ isVolatileBinding (expression) {\n            return volatileRegex.test(expression.toString());\n        }\n    });\n});\nfunction $ef62b9d3f31c76fb$export$5ab46cbf6120b33a(target, nameOrAccessor) {\n    $ef62b9d3f31c76fb$export$77cea355fa80b5f4.defineProperty(target, nameOrAccessor);\n}\nfunction $ef62b9d3f31c76fb$export$e338fff42eed603a(target, name, descriptor) {\n    return Object.assign({}, descriptor, {\n        get () {\n            $ef62b9d3f31c76fb$export$77cea355fa80b5f4.trackVolatile();\n            return descriptor.get.apply(this);\n        }\n    });\n}\nconst $ef62b9d3f31c76fb$var$contextEvent = (0, $c22v8.FAST).getById((0, $gAsSx.KernelServiceId).contextEvent, ()=>{\n    let current = null;\n    return {\n        get () {\n            return current;\n        },\n        set (event) {\n            current = event;\n        }\n    };\n});\nconst $ef62b9d3f31c76fb$export$f7c638676c8af91d = Object.freeze({\n    /**\n     * A default execution context.\n     */ default: {\n        index: 0,\n        length: 0,\n        get event () {\n            return $ef62b9d3f31c76fb$export$f7c638676c8af91d.getEvent();\n        },\n        eventDetail () {\n            return this.event.detail;\n        },\n        eventTarget () {\n            return this.event.target;\n        }\n    },\n    /**\n     * Gets the current event.\n     * @returns An event object.\n     */ getEvent () {\n        return $ef62b9d3f31c76fb$var$contextEvent.get();\n    },\n    /**\n     * Sets the current event.\n     * @param event - An event object.\n     */ setEvent (event) {\n        $ef62b9d3f31c76fb$var$contextEvent.set(event);\n    }\n});\n\n});\nparcelRegister(\"gAsSx\", function(module, exports) {\n\n$parcel$export(module.exports, \"KernelServiceId\", () => $c13668d379adbe73$export$f2080b9a9a32b8d3);\n$parcel$export(module.exports, \"isFunction\", () => $c13668d379adbe73$export$f6e2535fb5126e54);\n$parcel$export(module.exports, \"isString\", () => $c13668d379adbe73$export$844ec244b1367d54);\n$parcel$export(module.exports, \"noop\", () => $c13668d379adbe73$export$8793edee2d425525);\nlet $c13668d379adbe73$var$kernelMode;\nconst $c13668d379adbe73$var$kernelAttr = \"fast-kernel\";\ntry {\n    if (document.currentScript) $c13668d379adbe73$var$kernelMode = document.currentScript.getAttribute($c13668d379adbe73$var$kernelAttr);\n    else {\n        const scripts = document.getElementsByTagName(\"script\");\n        const currentScript = scripts[scripts.length - 1];\n        $c13668d379adbe73$var$kernelMode = currentScript.getAttribute($c13668d379adbe73$var$kernelAttr);\n    }\n} catch (e) {\n    $c13668d379adbe73$var$kernelMode = \"isolate\";\n}\nlet $c13668d379adbe73$export$f2080b9a9a32b8d3;\nswitch($c13668d379adbe73$var$kernelMode){\n    case \"share\":\n        $c13668d379adbe73$export$f2080b9a9a32b8d3 = Object.freeze({\n            updateQueue: 1,\n            observable: 2,\n            contextEvent: 3,\n            elementRegistry: 4\n        });\n        break;\n    case \"share-v2\":\n        $c13668d379adbe73$export$f2080b9a9a32b8d3 = Object.freeze({\n            updateQueue: 1.2,\n            observable: 2.2,\n            contextEvent: 3.2,\n            elementRegistry: 4.2\n        });\n        break;\n    default:\n        // fully isolate the kernel from all other FAST instances\n        const postfix = `-${Math.random().toString(36).substring(2, 8)}`;\n        $c13668d379adbe73$export$f2080b9a9a32b8d3 = Object.freeze({\n            updateQueue: `1.2${postfix}`,\n            observable: `2.2${postfix}`,\n            contextEvent: `3.2${postfix}`,\n            elementRegistry: `4.2${postfix}`\n        });\n        break;\n}\nconst $c13668d379adbe73$export$f6e2535fb5126e54 = (object)=>typeof object === \"function\";\nconst $c13668d379adbe73$export$844ec244b1367d54 = (object)=>typeof object === \"string\";\nconst $c13668d379adbe73$export$8793edee2d425525 = ()=>void 0;\n\n});\n\nparcelRegister(\"c22v8\", function(module, exports) {\n\n$parcel$export(module.exports, \"FAST\", () => $8c279ca4e9142d99$export$360e186c37756536);\n$parcel$export(module.exports, \"emptyArray\", () => $8c279ca4e9142d99$export$d3ae4127996a91af);\n$parcel$export(module.exports, \"createTypeRegistry\", () => $8c279ca4e9142d99$export$a31396a98752ddb5);\n$parcel$export(module.exports, \"createMetadataLocator\", () => $8c279ca4e9142d99$export$df500aa24c905daf);\n$parcel$export(module.exports, \"makeSerializationNoop\", () => $8c279ca4e9142d99$export$997c5e5ecebc1b61);\n\nvar $gAsSx = parcelRequire(\"gAsSx\");\nparcelRequire(\"gSsr7\");\n// ensure FAST global - duplicated debug.ts\nconst $8c279ca4e9142d99$var$propConfig = {\n    configurable: false,\n    enumerable: false,\n    writable: false\n};\nif (globalThis.FAST === void 0) Reflect.defineProperty(globalThis, \"FAST\", Object.assign({\n    value: Object.create(null)\n}, $8c279ca4e9142d99$var$propConfig));\nconst $8c279ca4e9142d99$export$360e186c37756536 = globalThis.FAST;\nif ($8c279ca4e9142d99$export$360e186c37756536.getById === void 0) {\n    const storage = Object.create(null);\n    Reflect.defineProperty($8c279ca4e9142d99$export$360e186c37756536, \"getById\", Object.assign({\n        value (id, initialize) {\n            let found = storage[id];\n            if (found === void 0) found = initialize ? storage[id] = initialize() : null;\n            return found;\n        }\n    }, $8c279ca4e9142d99$var$propConfig));\n}\nif ($8c279ca4e9142d99$export$360e186c37756536.error === void 0) Object.assign($8c279ca4e9142d99$export$360e186c37756536, {\n    warn () {},\n    error (code) {\n        return new Error(`Error ${code}`);\n    },\n    addMessages () {}\n});\nconst $8c279ca4e9142d99$export$d3ae4127996a91af = Object.freeze([]);\nfunction $8c279ca4e9142d99$export$a31396a98752ddb5() {\n    const typeToDefinition = new Map();\n    return Object.freeze({\n        register (definition) {\n            if (typeToDefinition.has(definition.type)) return false;\n            typeToDefinition.set(definition.type, definition);\n            return true;\n        },\n        getByType (key) {\n            return typeToDefinition.get(key);\n        },\n        getForInstance (object) {\n            if (object === null || object === void 0) return void 0;\n            return typeToDefinition.get(object.constructor);\n        }\n    });\n}\nfunction $8c279ca4e9142d99$export$df500aa24c905daf() {\n    const metadataLookup = new WeakMap();\n    return function(target) {\n        let metadata = metadataLookup.get(target);\n        if (metadata === void 0) {\n            let currentTarget = Reflect.getPrototypeOf(target);\n            while(metadata === void 0 && currentTarget !== null){\n                metadata = metadataLookup.get(currentTarget);\n                currentTarget = Reflect.getPrototypeOf(currentTarget);\n            }\n            metadata = metadata === void 0 ? [] : metadata.slice(0);\n            metadataLookup.set(target, metadata);\n        }\n        return metadata;\n    };\n}\nfunction $8c279ca4e9142d99$export$997c5e5ecebc1b61(type) {\n    type.prototype.toJSON = (0, $gAsSx.noop);\n}\n\n});\nparcelRegister(\"gSsr7\", function(module, exports) {\n/* eslint-disable @typescript-eslint/ban-ts-comment */ (function ensureGlobalThis() {\n    if (typeof globalThis !== \"undefined\") // We're running in a modern environment.\n    return;\n    // @ts-ignore\n    if (typeof $parcel$global !== \"undefined\") // We're running in NodeJS\n    // @ts-ignore\n    $parcel$global.globalThis = $parcel$global;\n    else if (typeof self !== \"undefined\") self.globalThis = self;\n    else if (typeof window !== \"undefined\") // We're running in the browser's main thread.\n    window.globalThis = window;\n    else {\n        // Hopefully we never get here...\n        // Not all environments allow eval and Function. Use only as a last resort:\n        // eslint-disable-next-line no-new-func\n        const result = new Function(\"return this\")();\n        result.globalThis = result;\n    }\n})();\n\n});\n\n\nparcelRegister(\"igor1\", function(module, exports) {\n\n$parcel$export(module.exports, \"Updates\", () => $d4bcacde05b75881$export$26ef613a0934aa5f);\n\nvar $gAsSx = parcelRequire(\"gAsSx\");\n\nvar $c22v8 = parcelRequire(\"c22v8\");\nconst $d4bcacde05b75881$export$26ef613a0934aa5f = (0, $c22v8.FAST).getById((0, $gAsSx.KernelServiceId).updateQueue, ()=>{\n    const tasks = [];\n    const pendingErrors = [];\n    const rAF = globalThis.requestAnimationFrame;\n    let updateAsync = true;\n    function throwFirstError() {\n        if (pendingErrors.length) throw pendingErrors.shift();\n    }\n    function tryRunTask(task) {\n        try {\n            task.call();\n        } catch (error) {\n            if (updateAsync) {\n                pendingErrors.push(error);\n                setTimeout(throwFirstError, 0);\n            } else {\n                tasks.length = 0;\n                throw error;\n            }\n        }\n    }\n    function process() {\n        const capacity = 1024;\n        let index = 0;\n        while(index < tasks.length){\n            tryRunTask(tasks[index]);\n            index++;\n            // Prevent leaking memory for long chains of recursive calls to `enqueue`.\n            // If we call `enqueue` within a task scheduled by `enqueue`, the queue will\n            // grow, but to avoid an O(n) walk for every task we execute, we don't\n            // shift tasks off the queue after they have been executed.\n            // Instead, we periodically shift 1024 tasks off the queue.\n            if (index > capacity) {\n                // Manually shift all values starting at the index back to the\n                // beginning of the queue.\n                for(let scan = 0, newLength = tasks.length - index; scan < newLength; scan++)tasks[scan] = tasks[scan + index];\n                tasks.length -= index;\n                index = 0;\n            }\n        }\n        tasks.length = 0;\n    }\n    function enqueue(callable) {\n        tasks.push(callable);\n        if (tasks.length < 2) updateAsync ? rAF(process) : process();\n    }\n    return Object.freeze({\n        enqueue: enqueue,\n        next: ()=>new Promise(enqueue),\n        process: process,\n        setMode: (isAsync)=>updateAsync = isAsync\n    });\n});\n\n});\n\nparcelRegister(\"aEJPD\", function(module, exports) {\n\n$parcel$export(module.exports, \"SubscriberSet\", () => $7c21311213c59972$export$f35d03caf9a2ecdf);\n$parcel$export(module.exports, \"PropertyChangeNotifier\", () => $7c21311213c59972$export$af6e57f0938b1389);\n/**\n * An implementation of {@link Notifier} that efficiently keeps track of\n * subscribers interested in a specific change notification on an\n * observable subject.\n *\n * @remarks\n * This set is optimized for the most common scenario of 1 or 2 subscribers.\n * With this in mind, it can store a subscriber in an internal field, allowing it to avoid Array#push operations.\n * If the set ever exceeds two subscribers, it upgrades to an array automatically.\n * @public\n */ class $7c21311213c59972$export$f35d03caf9a2ecdf {\n    /**\n     * Creates an instance of SubscriberSet for the specified subject.\n     * @param subject - The subject that subscribers will receive notifications from.\n     * @param initialSubscriber - An initial subscriber to changes.\n     */ constructor(subject, initialSubscriber){\n        this.sub1 = void 0;\n        this.sub2 = void 0;\n        this.spillover = void 0;\n        this.subject = subject;\n        this.sub1 = initialSubscriber;\n    }\n    /**\n     * Checks whether the provided subscriber has been added to this set.\n     * @param subscriber - The subscriber to test for inclusion in this set.\n     */ has(subscriber) {\n        return this.spillover === void 0 ? this.sub1 === subscriber || this.sub2 === subscriber : this.spillover.indexOf(subscriber) !== -1;\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     */ subscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.has(subscriber)) return;\n            if (this.sub1 === void 0) {\n                this.sub1 = subscriber;\n                return;\n            }\n            if (this.sub2 === void 0) {\n                this.sub2 = subscriber;\n                return;\n            }\n            this.spillover = [\n                this.sub1,\n                this.sub2,\n                subscriber\n            ];\n            this.sub1 = void 0;\n            this.sub2 = void 0;\n        } else {\n            const index = spillover.indexOf(subscriber);\n            if (index === -1) spillover.push(subscriber);\n        }\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     */ unsubscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.sub1 === subscriber) this.sub1 = void 0;\n            else if (this.sub2 === subscriber) this.sub2 = void 0;\n        } else {\n            const index = spillover.indexOf(subscriber);\n            if (index !== -1) spillover.splice(index, 1);\n        }\n    }\n    /**\n     * Notifies all subscribers.\n     * @param args - Data passed along to subscribers during notification.\n     */ notify(args) {\n        const spillover = this.spillover;\n        const subject = this.subject;\n        if (spillover === void 0) {\n            const sub1 = this.sub1;\n            const sub2 = this.sub2;\n            if (sub1 !== void 0) sub1.handleChange(subject, args);\n            if (sub2 !== void 0) sub2.handleChange(subject, args);\n        } else for(let i = 0, ii = spillover.length; i < ii; ++i)spillover[i].handleChange(subject, args);\n    }\n}\nclass $7c21311213c59972$export$af6e57f0938b1389 {\n    /**\n     * Creates an instance of PropertyChangeNotifier for the specified subject.\n     * @param subject - The object that subscribers will receive notifications for.\n     */ constructor(subject){\n        this.subscribers = {};\n        this.subjectSubscribers = null;\n        this.subject = subject;\n    }\n    /**\n     * Notifies all subscribers, based on the specified property.\n     * @param propertyName - The property name, passed along to subscribers during notification.\n     */ notify(propertyName) {\n        var _a, _b;\n        (_a = this.subscribers[propertyName]) === null || _a === void 0 || _a.notify(propertyName);\n        (_b = this.subjectSubscribers) === null || _b === void 0 || _b.notify(propertyName);\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     * @param propertyToWatch - The name of the property that the subscriber is interested in watching for changes.\n     */ subscribe(subscriber, propertyToWatch) {\n        var _a, _b;\n        let subscribers;\n        if (propertyToWatch) subscribers = (_a = this.subscribers[propertyToWatch]) !== null && _a !== void 0 ? _a : this.subscribers[propertyToWatch] = new $7c21311213c59972$export$f35d03caf9a2ecdf(this.subject);\n        else subscribers = (_b = this.subjectSubscribers) !== null && _b !== void 0 ? _b : this.subjectSubscribers = new $7c21311213c59972$export$f35d03caf9a2ecdf(this.subject);\n        subscribers.subscribe(subscriber);\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     * @param propertyToUnwatch - The name of the property that the subscriber is no longer interested in watching.\n     */ unsubscribe(subscriber, propertyToUnwatch) {\n        var _a, _b;\n        if (propertyToUnwatch) (_a = this.subscribers[propertyToUnwatch]) === null || _a === void 0 || _a.unsubscribe(subscriber);\n        else (_b = this.subjectSubscribers) === null || _b === void 0 || _b.unsubscribe(subscriber);\n    }\n}\n\n});\n\n\nparcelRegister(\"hIJMY\", function(module, exports) {\n\n$parcel$export(module.exports, \"AttributeDefinition\", () => $ce6a1072f08e6fbd$export$722ab06c0d846d74);\n$parcel$export(module.exports, \"attr\", () => $ce6a1072f08e6fbd$export$7aabe8b3a840d2fd);\n\nvar $kyf8E = parcelRequire(\"kyf8E\");\n\nvar $gAsSx = parcelRequire(\"gAsSx\");\n\nvar $igor1 = parcelRequire(\"igor1\");\n\nvar $1hYzh = parcelRequire(\"1hYzh\");\n\nvar $c22v8 = parcelRequire(\"c22v8\");\nconst $ce6a1072f08e6fbd$var$booleanMode = \"boolean\";\nconst $ce6a1072f08e6fbd$var$reflectMode = \"reflect\";\nconst $ce6a1072f08e6fbd$export$8b80b92e472f3c0a = Object.freeze({\n    /**\n     * Locates all attribute configurations associated with a type.\n     */ locate: (0, $c22v8.createMetadataLocator)()\n});\nconst $ce6a1072f08e6fbd$export$2aee1c8d7bab360b = {\n    toView (value) {\n        return value ? \"true\" : \"false\";\n    },\n    fromView (value) {\n        return value === null || value === void 0 || value === \"false\" || value === false || value === 0 ? false : true;\n    }\n};\nconst $ce6a1072f08e6fbd$export$c195e92e334d543a = {\n    toView (value) {\n        return typeof value === \"boolean\" ? value.toString() : \"\";\n    },\n    fromView (value) {\n        return [\n            null,\n            undefined,\n            void 0\n        ].includes(value) ? null : $ce6a1072f08e6fbd$export$2aee1c8d7bab360b.fromView(value);\n    }\n};\nfunction $ce6a1072f08e6fbd$var$toNumber(value) {\n    if (value === null || value === undefined) return null;\n    const number = value * 1;\n    return isNaN(number) ? null : number;\n}\nconst $ce6a1072f08e6fbd$export$b8946e3c7da4292e = {\n    toView (value) {\n        const output = $ce6a1072f08e6fbd$var$toNumber(value);\n        return output ? output.toString() : output;\n    },\n    fromView: $ce6a1072f08e6fbd$var$toNumber\n};\nclass $ce6a1072f08e6fbd$export$722ab06c0d846d74 {\n    /**\n     * Creates an instance of AttributeDefinition.\n     * @param Owner - The class constructor that owns this attribute.\n     * @param name - The name of the property associated with the attribute.\n     * @param attribute - The name of the attribute in HTML.\n     * @param mode - The {@link AttributeMode} that describes the behavior of this attribute.\n     * @param converter - A {@link ValueConverter} that integrates with the property getter/setter\n     * to convert values to and from a DOM string.\n     */ constructor(Owner, name, attribute = name.toLowerCase(), mode = $ce6a1072f08e6fbd$var$reflectMode, converter){\n        this.guards = new Set();\n        this.Owner = Owner;\n        this.name = name;\n        this.attribute = attribute;\n        this.mode = mode;\n        this.converter = converter;\n        this.fieldName = `_${name}`;\n        this.callbackName = `${name}Changed`;\n        this.hasCallback = this.callbackName in Owner.prototype;\n        if (mode === $ce6a1072f08e6fbd$var$booleanMode && converter === void 0) this.converter = $ce6a1072f08e6fbd$export$2aee1c8d7bab360b;\n    }\n    /**\n     * Sets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     * @param value - The value to set the attribute/property to.\n     */ setValue(source, newValue) {\n        const oldValue = source[this.fieldName];\n        const converter = this.converter;\n        if (converter !== void 0) newValue = converter.fromView(newValue);\n        if (oldValue !== newValue) {\n            source[this.fieldName] = newValue;\n            this.tryReflectToAttribute(source);\n            if (this.hasCallback) source[this.callbackName](oldValue, newValue);\n            source.$fastController.notify(this.name);\n        }\n    }\n    /**\n     * Gets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     */ getValue(source) {\n        (0, $kyf8E.Observable).track(source, this.name);\n        return source[this.fieldName];\n    }\n    /** @internal */ onAttributeChangedCallback(element, value) {\n        if (this.guards.has(element)) return;\n        this.guards.add(element);\n        this.setValue(element, value);\n        this.guards.delete(element);\n    }\n    tryReflectToAttribute(element) {\n        const mode = this.mode;\n        const guards = this.guards;\n        if (guards.has(element) || mode === \"fromView\") return;\n        (0, $igor1.Updates).enqueue(()=>{\n            guards.add(element);\n            const latestValue = element[this.fieldName];\n            switch(mode){\n                case $ce6a1072f08e6fbd$var$reflectMode:\n                    const converter = this.converter;\n                    (0, $1hYzh.DOM).setAttribute(element, this.attribute, converter !== void 0 ? converter.toView(latestValue) : latestValue);\n                    break;\n                case $ce6a1072f08e6fbd$var$booleanMode:\n                    (0, $1hYzh.DOM).setBooleanAttribute(element, this.attribute, latestValue);\n                    break;\n            }\n            guards.delete(element);\n        });\n    }\n    /**\n     * Collects all attribute definitions associated with the owner.\n     * @param Owner - The class constructor to collect attribute for.\n     * @param attributeLists - Any existing attributes to collect and merge with those associated with the owner.\n     * @internal\n     */ static collect(Owner, ...attributeLists) {\n        const attributes = [];\n        attributeLists.push($ce6a1072f08e6fbd$export$8b80b92e472f3c0a.locate(Owner));\n        for(let i = 0, ii = attributeLists.length; i < ii; ++i){\n            const list = attributeLists[i];\n            if (list === void 0) continue;\n            for(let j = 0, jj = list.length; j < jj; ++j){\n                const config = list[j];\n                if ((0, $gAsSx.isString)(config)) attributes.push(new $ce6a1072f08e6fbd$export$722ab06c0d846d74(Owner, config));\n                else attributes.push(new $ce6a1072f08e6fbd$export$722ab06c0d846d74(Owner, config.property, config.attribute, config.mode, config.converter));\n            }\n        }\n        return attributes;\n    }\n}\nfunction $ce6a1072f08e6fbd$export$7aabe8b3a840d2fd(configOrTarget, prop) {\n    let config;\n    function decorator($target, $prop) {\n        if (arguments.length > 1) // Non invocation:\n        // - @attr\n        // Invocation with or w/o opts:\n        // - @attr()\n        // - @attr({...opts})\n        config.property = $prop;\n        $ce6a1072f08e6fbd$export$8b80b92e472f3c0a.locate($target.constructor).push(config);\n    }\n    if (arguments.length > 1) {\n        // Non invocation:\n        // - @attr\n        config = {};\n        decorator(configOrTarget, prop);\n        return;\n    }\n    // Invocation with or w/o opts:\n    // - @attr()\n    // - @attr({...opts})\n    config = configOrTarget === void 0 ? {} : configOrTarget;\n    return decorator;\n}\n\n});\nparcelRegister(\"1hYzh\", function(module, exports) {\n\n$parcel$export(module.exports, \"DOMAspect\", () => $0f065c80a7a62032$export$b0076a1a9e24da9);\n$parcel$export(module.exports, \"DOM\", () => $0f065c80a7a62032$export$cb0933279c36a66b);\n\n\nvar $c22v8 = parcelRequire(\"c22v8\");\nconst $0f065c80a7a62032$export$b0076a1a9e24da9 = Object.freeze({\n    /**\n     * Not aspected.\n     */ none: 0,\n    /**\n     * An attribute.\n     */ attribute: 1,\n    /**\n     * A boolean attribute.\n     */ booleanAttribute: 2,\n    /**\n     * A property.\n     */ property: 3,\n    /**\n     * Content\n     */ content: 4,\n    /**\n     * A token list.\n     */ tokenList: 5,\n    /**\n     * An event.\n     */ event: 6\n});\nconst $0f065c80a7a62032$var$createHTML = (html)=>html;\nconst $0f065c80a7a62032$var$fastTrustedType = globalThis.trustedTypes ? globalThis.trustedTypes.createPolicy(\"fast-html\", {\n    createHTML: $0f065c80a7a62032$var$createHTML\n}) : {\n    createHTML: $0f065c80a7a62032$var$createHTML\n};\nlet $0f065c80a7a62032$var$defaultPolicy = Object.freeze({\n    createHTML (value) {\n        return $0f065c80a7a62032$var$fastTrustedType.createHTML(value);\n    },\n    protect (tagName, aspect, aspectName, sink) {\n        return sink;\n    }\n});\nconst $0f065c80a7a62032$var$fastPolicy = $0f065c80a7a62032$var$defaultPolicy;\nconst $0f065c80a7a62032$export$cb0933279c36a66b = Object.freeze({\n    /**\n     * Gets the dom policy used by the templating system.\n     */ get policy () {\n        return $0f065c80a7a62032$var$defaultPolicy;\n    },\n    /**\n     * Sets the dom policy used by the templating system.\n     * @param policy - The policy to set.\n     * @remarks\n     * This API can only be called once, for security reasons. It should be\n     * called by the application developer at the start of their program.\n     */ setPolicy (value) {\n        if ($0f065c80a7a62032$var$defaultPolicy !== $0f065c80a7a62032$var$fastPolicy) throw (0, $c22v8.FAST).error(1201 /* Message.onlySetDOMPolicyOnce */ );\n        $0f065c80a7a62032$var$defaultPolicy = value;\n    },\n    /**\n     * Sets an attribute value on an element.\n     * @param element - The element to set the attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is `null` or `undefined`, the attribute is removed, otherwise\n     * it is set to the provided value using the standard `setAttribute` API.\n     */ setAttribute (element, attributeName, value) {\n        value === null || value === undefined ? element.removeAttribute(attributeName) : element.setAttribute(attributeName, value);\n    },\n    /**\n     * Sets a boolean attribute value.\n     * @param element - The element to set the boolean attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is true, the attribute is added; otherwise it is removed.\n     */ setBooleanAttribute (element, attributeName, value) {\n        value ? element.setAttribute(attributeName, \"\") : element.removeAttribute(attributeName);\n    }\n});\n\n});\n\n\nparcelRegister(\"7v8l6\", function(module, exports) {\n\n$parcel$export(module.exports, \"Binding\", () => $5761e5ae35fd42b5$export$f4f50f872cf9bd86);\n/**\n * Captures a binding expression along with related information and capabilities.\n *\n * @public\n */ class $5761e5ae35fd42b5$export$f4f50f872cf9bd86 {\n    /**\n     * Creates a binding.\n     * @param evaluate - Evaluates the binding.\n     * @param policy - The security policy to associate with this binding.\n     * @param isVolatile - Indicates whether the binding is volatile.\n     */ constructor(evaluate, policy, isVolatile = false){\n        this.evaluate = evaluate;\n        this.policy = policy;\n        this.isVolatile = isVolatile;\n    }\n}\n\n});\n\nparcelRegister(\"d4xDP\", function(module, exports) {\n\n$parcel$export(module.exports, \"children\", () => $9845be8c3e2f80c3$export$bacb5cc5a11aef16);\n\nvar $gAsSx = parcelRequire(\"gAsSx\");\n\nvar $dgoyj = parcelRequire(\"dgoyj\");\n\nvar $d8FOX = parcelRequire(\"d8FOX\");\nclass $9845be8c3e2f80c3$export$8e0d942365449f1b extends (0, $d8FOX.NodeObservationDirective) {\n    /**\n     * Creates an instance of ChildrenDirective.\n     * @param options - The options to use in configuring the child observation behavior.\n     */ constructor(options){\n        super(options);\n        this.observerProperty = Symbol();\n        this.handleEvent = (mutations, observer)=>{\n            const target = observer.target;\n            this.updateTarget(this.getSource(target), this.computeNodes(target));\n        };\n        options.childList = true;\n    }\n    /**\n     * Begins observation of the nodes.\n     * @param target - The target to observe.\n     */ observe(target) {\n        let observer = target[this.observerProperty];\n        if (!observer) {\n            observer = new MutationObserver(this.handleEvent);\n            observer.toJSON = (0, $gAsSx.noop);\n            target[this.observerProperty] = observer;\n        }\n        observer.target = target;\n        observer.observe(target, this.options);\n    }\n    /**\n     * Disconnects observation of the nodes.\n     * @param target - The target to unobserve.\n     */ disconnect(target) {\n        const observer = target[this.observerProperty];\n        observer.target = null;\n        observer.disconnect();\n    }\n    /**\n     * Retrieves the raw nodes that should be assigned to the source property.\n     * @param target - The target to get the node to.\n     */ getNodes(target) {\n        if (\"selector\" in this.options) return Array.from(target.querySelectorAll(this.options.selector));\n        return Array.from(target.childNodes);\n    }\n}\n(0, $dgoyj.HTMLDirective).define($9845be8c3e2f80c3$export$8e0d942365449f1b);\nfunction $9845be8c3e2f80c3$export$bacb5cc5a11aef16(propertyOrOptions) {\n    if ((0, $gAsSx.isString)(propertyOrOptions)) propertyOrOptions = {\n        property: propertyOrOptions\n    };\n    return new $9845be8c3e2f80c3$export$8e0d942365449f1b(propertyOrOptions);\n}\n\n});\nparcelRegister(\"dgoyj\", function(module, exports) {\n\n$parcel$export(module.exports, \"HTMLDirective\", () => $9a7fd090e761b084$export$3b3d5ef3c555d599);\n$parcel$export(module.exports, \"StatelessAttachedAttributeDirective\", () => $9a7fd090e761b084$export$683728dd3b823b8d);\n\nvar $1hYzh = parcelRequire(\"1hYzh\");\n\nvar $c22v8 = parcelRequire(\"c22v8\");\n\nvar $lMiZS = parcelRequire(\"lMiZS\");\nconst $9a7fd090e761b084$var$registry = (0, $c22v8.createTypeRegistry)();\nconst $9a7fd090e761b084$export$3b3d5ef3c555d599 = Object.freeze({\n    /**\n     * Gets the directive definition associated with the instance.\n     * @param instance - The directive instance to retrieve the definition for.\n     */ getForInstance: $9a7fd090e761b084$var$registry.getForInstance,\n    /**\n     * Gets the directive definition associated with the specified type.\n     * @param type - The directive type to retrieve the definition for.\n     */ getByType: $9a7fd090e761b084$var$registry.getByType,\n    /**\n     * Defines an HTMLDirective based on the options.\n     * @param type - The type to define as a directive.\n     * @param options - Options that specify the directive's application.\n     */ define (type, options) {\n        options = options || {};\n        options.type = type;\n        $9a7fd090e761b084$var$registry.register(options);\n        return type;\n    },\n    /**\n     *\n     * @param directive - The directive to assign the aspect to.\n     * @param value - The value to base the aspect determination on.\n     * @remarks\n     * If a falsy value is provided, then the content aspect will be assigned.\n     */ assignAspect (directive, value) {\n        if (!value) {\n            directive.aspectType = (0, $1hYzh.DOMAspect).content;\n            return;\n        }\n        directive.sourceAspect = value;\n        switch(value[0]){\n            case \":\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = directive.targetAspect === \"classList\" ? (0, $1hYzh.DOMAspect).tokenList : (0, $1hYzh.DOMAspect).property;\n                break;\n            case \"?\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = (0, $1hYzh.DOMAspect).booleanAttribute;\n                break;\n            case \"@\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = (0, $1hYzh.DOMAspect).event;\n                break;\n            default:\n                directive.targetAspect = value;\n                directive.aspectType = (0, $1hYzh.DOMAspect).attribute;\n                break;\n        }\n    }\n});\nfunction $9a7fd090e761b084$export$9ec0abe690dab1c4(options) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */ return function(type) {\n        $9a7fd090e761b084$export$3b3d5ef3c555d599.define(type, options);\n    };\n}\nclass $9a7fd090e761b084$export$683728dd3b823b8d {\n    /**\n     * Creates an instance of RefDirective.\n     * @param options - The options to use in configuring the directive.\n     */ constructor(options){\n        this.options = options;\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     * @remarks\n     * Creates a custom attribute placeholder.\n     */ createHTML(add) {\n        return (0, $lMiZS.Markup).attribute(add(this));\n    }\n    /**\n     * Creates a behavior.\n     * @param targets - The targets available for behaviors to be attached to.\n     */ createBehavior() {\n        return this;\n    }\n}\n(0, $c22v8.makeSerializationNoop)($9a7fd090e761b084$export$683728dd3b823b8d);\n\n});\nparcelRegister(\"lMiZS\", function(module, exports) {\n\n$parcel$export(module.exports, \"nextId\", () => $fdacd11ac8a6d66d$export$79a1817568da084b);\n$parcel$export(module.exports, \"Markup\", () => $fdacd11ac8a6d66d$export$b925b7ba50a6200f);\n$parcel$export(module.exports, \"Parser\", () => $fdacd11ac8a6d66d$export$7acfa6ed01010e37);\nconst $fdacd11ac8a6d66d$var$marker = `fast-${Math.random().toString(36).substring(2, 8)}`;\nconst $fdacd11ac8a6d66d$var$interpolationStart = `${$fdacd11ac8a6d66d$var$marker}{`;\nconst $fdacd11ac8a6d66d$var$interpolationEnd = `}${$fdacd11ac8a6d66d$var$marker}`;\nconst $fdacd11ac8a6d66d$var$interpolationEndLength = $fdacd11ac8a6d66d$var$interpolationEnd.length;\nlet $fdacd11ac8a6d66d$var$id = 0;\nconst $fdacd11ac8a6d66d$export$79a1817568da084b = ()=>`${$fdacd11ac8a6d66d$var$marker}-${++$fdacd11ac8a6d66d$var$id}`;\nconst $fdacd11ac8a6d66d$export$b925b7ba50a6200f = Object.freeze({\n    /**\n     * Creates a placeholder string suitable for marking out a location *within*\n     * an attribute value or HTML content.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by binding directives.\n     */ interpolation: (id)=>`${$fdacd11ac8a6d66d$var$interpolationStart}${id}${$fdacd11ac8a6d66d$var$interpolationEnd}`,\n    /**\n     * Creates a placeholder that manifests itself as an attribute on an\n     * element.\n     * @param attributeName - The name of the custom attribute.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by attribute directives such as `ref`, `slotted`, and `children`.\n     */ attribute: (id)=>`${$fdacd11ac8a6d66d$export$79a1817568da084b()}=\"${$fdacd11ac8a6d66d$var$interpolationStart}${id}${$fdacd11ac8a6d66d$var$interpolationEnd}\"`,\n    /**\n     * Creates a placeholder that manifests itself as a marker within the DOM structure.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by structural directives such as `repeat`.\n     */ comment: (id)=>`<!--${$fdacd11ac8a6d66d$var$interpolationStart}${id}${$fdacd11ac8a6d66d$var$interpolationEnd}-->`\n});\nconst $fdacd11ac8a6d66d$export$7acfa6ed01010e37 = Object.freeze({\n    /**\n     * Parses text content or HTML attribute content, separating out the static strings\n     * from the directives.\n     * @param value - The content or attribute string to parse.\n     * @param factories - A list of directives to search for in the string.\n     * @returns A heterogeneous array of static strings interspersed with\n     * directives or null if no directives are found in the string.\n     */ parse (value, factories) {\n        const parts = value.split($fdacd11ac8a6d66d$var$interpolationStart);\n        if (parts.length === 1) return null;\n        const result = [];\n        for(let i = 0, ii = parts.length; i < ii; ++i){\n            const current = parts[i];\n            const index = current.indexOf($fdacd11ac8a6d66d$var$interpolationEnd);\n            let literal;\n            if (index === -1) literal = current;\n            else {\n                const factoryId = current.substring(0, index);\n                result.push(factories[factoryId]);\n                literal = current.substring(index + $fdacd11ac8a6d66d$var$interpolationEndLength);\n            }\n            if (literal !== \"\") result.push(literal);\n        }\n        return result;\n    }\n});\n\n});\n\n\nparcelRegister(\"d8FOX\", function(module, exports) {\n\n$parcel$export(module.exports, \"elements\", () => $990c767fbea0e9a3$export$7a5d735b2ab6389d);\n$parcel$export(module.exports, \"NodeObservationDirective\", () => $990c767fbea0e9a3$export$755ec928f38200a4);\n\nvar $c22v8 = parcelRequire(\"c22v8\");\n\nvar $dgoyj = parcelRequire(\"dgoyj\");\nconst $990c767fbea0e9a3$var$selectElements = (value)=>value.nodeType === 1;\nconst $990c767fbea0e9a3$export$7a5d735b2ab6389d = (selector)=>selector ? (value)=>value.nodeType === 1 && value.matches(selector) : $990c767fbea0e9a3$var$selectElements;\nclass $990c767fbea0e9a3$export$755ec928f38200a4 extends (0, $dgoyj.StatelessAttachedAttributeDirective) {\n    /**\n     * The unique id of the factory.\n     */ get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value;\n        this._controllerProperty = `${value}-c`;\n    }\n    /**\n     * Bind this behavior to the source.\n     * @param source - The source to bind to.\n     * @param context - The execution context that the binding is operating within.\n     * @param targets - The targets that behaviors in a view can attach to.\n     */ bind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        target[this._controllerProperty] = controller;\n        this.updateTarget(controller.source, this.computeNodes(target));\n        this.observe(target);\n        controller.onUnbind(this);\n    }\n    /**\n     * Unbinds this behavior from the source.\n     * @param source - The source to unbind from.\n     * @param context - The execution context that the binding is operating within.\n     * @param targets - The targets that behaviors in a view can attach to.\n     */ unbind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        this.updateTarget(controller.source, (0, $c22v8.emptyArray));\n        this.disconnect(target);\n        target[this._controllerProperty] = null;\n    }\n    /**\n     * Gets the data source for the target.\n     * @param target - The target to get the source for.\n     * @returns The source.\n     */ getSource(target) {\n        return target[this._controllerProperty].source;\n    }\n    /**\n     * Updates the source property with the computed nodes.\n     * @param source - The source object to assign the nodes property to.\n     * @param value - The nodes to assign to the source object property.\n     */ updateTarget(source, value) {\n        source[this.options.property] = value;\n    }\n    /**\n     * Computes the set of nodes that should be assigned to the source property.\n     * @param target - The target to compute the nodes for.\n     * @returns The computed nodes.\n     * @remarks\n     * Applies filters if provided.\n     */ computeNodes(target) {\n        let nodes = this.getNodes(target);\n        if (\"filter\" in this.options) nodes = nodes.filter(this.options.filter);\n        return nodes;\n    }\n}\n\n});\n\n\nparcelRegister(\"23el4\", function(module, exports) {\n\n$parcel$export(module.exports, \"css\", () => $17e6fc0171954cb0$export$dbf350e5966cf602);\n\nvar $gAsSx = parcelRequire(\"gAsSx\");\n\nvar $7v8l6 = parcelRequire(\"7v8l6\");\n\nvar $2m4Ni = parcelRequire(\"2m4Ni\");\n\nvar $iCh8k = parcelRequire(\"iCh8k\");\n\nvar $1Z57f = parcelRequire(\"1Z57f\");\n\nvar $d8Jf8 = parcelRequire(\"d8Jf8\");\nconst $17e6fc0171954cb0$var$marker = `${Math.random().toString(36).substring(2, 8)}`;\nlet $17e6fc0171954cb0$var$varId = 0;\nconst $17e6fc0171954cb0$var$nextCSSVariable = ()=>`--v${$17e6fc0171954cb0$var$marker}${++$17e6fc0171954cb0$var$varId}`;\nfunction $17e6fc0171954cb0$var$collectStyles(strings, values) {\n    const styles = [];\n    let cssString = \"\";\n    const behaviors = [];\n    const add = (behavior)=>{\n        behaviors.push(behavior);\n    };\n    for(let i = 0, ii = strings.length - 1; i < ii; ++i){\n        cssString += strings[i];\n        let value = values[i];\n        if ((0, $gAsSx.isFunction)(value)) value = new (0, $d8Jf8.CSSBindingDirective)((0, $2m4Ni.oneWay)(value), $17e6fc0171954cb0$var$nextCSSVariable()).createCSS(add);\n        else if (value instanceof (0, $7v8l6.Binding)) value = new (0, $d8Jf8.CSSBindingDirective)(value, $17e6fc0171954cb0$var$nextCSSVariable()).createCSS(add);\n        else if ((0, $iCh8k.CSSDirective).getForInstance(value) !== void 0) value = value.createCSS(add);\n        if (value instanceof (0, $1Z57f.ElementStyles) || value instanceof CSSStyleSheet) {\n            if (cssString.trim() !== \"\") {\n                styles.push(cssString);\n                cssString = \"\";\n            }\n            styles.push(value);\n        } else cssString += value;\n    }\n    cssString += strings[strings.length - 1];\n    if (cssString.trim() !== \"\") styles.push(cssString);\n    return {\n        styles: styles,\n        behaviors: behaviors\n    };\n}\nconst $17e6fc0171954cb0$export$dbf350e5966cf602 = (strings, ...values)=>{\n    const { styles: styles, behaviors: behaviors } = $17e6fc0171954cb0$var$collectStyles(strings, values);\n    const elementStyles = new (0, $1Z57f.ElementStyles)(styles);\n    return behaviors.length ? elementStyles.withBehaviors(...behaviors) : elementStyles;\n};\nclass $17e6fc0171954cb0$var$CSSPartial {\n    constructor(styles, behaviors){\n        this.behaviors = behaviors;\n        this.css = \"\";\n        const stylesheets = styles.reduce((accumulated, current)=>{\n            if ((0, $gAsSx.isString)(current)) this.css += current;\n            else accumulated.push(current);\n            return accumulated;\n        }, []);\n        if (stylesheets.length) this.styles = new (0, $1Z57f.ElementStyles)(stylesheets);\n    }\n    createCSS(add) {\n        this.behaviors.forEach(add);\n        if (this.styles) add(this);\n        return this.css;\n    }\n    addedCallback(controller) {\n        controller.addStyles(this.styles);\n    }\n    removedCallback(controller) {\n        controller.removeStyles(this.styles);\n    }\n}\n(0, $iCh8k.CSSDirective).define($17e6fc0171954cb0$var$CSSPartial);\n$17e6fc0171954cb0$export$dbf350e5966cf602.partial = (strings, ...values)=>{\n    const { styles: styles, behaviors: behaviors } = $17e6fc0171954cb0$var$collectStyles(strings, values);\n    return new $17e6fc0171954cb0$var$CSSPartial(styles, behaviors);\n};\n\n});\nparcelRegister(\"2m4Ni\", function(module, exports) {\n\n$parcel$export(module.exports, \"oneWay\", () => $1b715ad6d7c3a5da$export$d013c21e6c7cf47e);\n\nvar $kyf8E = parcelRequire(\"kyf8E\");\n\nvar $7v8l6 = parcelRequire(\"7v8l6\");\nclass $1b715ad6d7c3a5da$var$OneWayBinding extends (0, $7v8l6.Binding) {\n    createObserver(subscriber) {\n        return (0, $kyf8E.Observable).binding(this.evaluate, subscriber, this.isVolatile);\n    }\n}\nfunction $1b715ad6d7c3a5da$export$d013c21e6c7cf47e(expression, policy, isVolatile = (0, $kyf8E.Observable).isVolatileBinding(expression)) {\n    return new $1b715ad6d7c3a5da$var$OneWayBinding(expression, policy, isVolatile);\n}\nfunction $1b715ad6d7c3a5da$export$ef13bcb366f2e9af(expression, options) {\n    const config = new $1b715ad6d7c3a5da$var$OneWayBinding(expression);\n    config.options = options;\n    return config;\n}\n\n});\n\nparcelRegister(\"iCh8k\", function(module, exports) {\n\n$parcel$export(module.exports, \"CSSDirective\", () => $d8d910eea2a60f2c$export$c6882ecf5b9a1390);\n\nvar $c22v8 = parcelRequire(\"c22v8\");\nconst $d8d910eea2a60f2c$var$registry = (0, $c22v8.createTypeRegistry)();\nconst $d8d910eea2a60f2c$export$c6882ecf5b9a1390 = Object.freeze({\n    /**\n     * Gets the directive definition associated with the instance.\n     * @param instance - The directive instance to retrieve the definition for.\n     */ getForInstance: $d8d910eea2a60f2c$var$registry.getForInstance,\n    /**\n     * Gets the directive definition associated with the specified type.\n     * @param type - The directive type to retrieve the definition for.\n     */ getByType: $d8d910eea2a60f2c$var$registry.getByType,\n    /**\n     * Defines a CSSDirective.\n     * @param type - The type to define as a directive.\n     */ define (type) {\n        $d8d910eea2a60f2c$var$registry.register({\n            type: type\n        });\n        return type;\n    }\n});\nfunction $d8d910eea2a60f2c$export$1d63d97c95a198b2() {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */ return function(type) {\n        $d8d910eea2a60f2c$export$c6882ecf5b9a1390.define(type);\n    };\n}\n\n});\n\nparcelRegister(\"1Z57f\", function(module, exports) {\n\n$parcel$export(module.exports, \"ElementStyles\", () => $171f74d9f37122c1$export$5cb32fda821782e2);\nlet $171f74d9f37122c1$var$DefaultStyleStrategy;\nfunction $171f74d9f37122c1$var$reduceStyles(styles) {\n    return styles.map((x)=>x instanceof $171f74d9f37122c1$export$5cb32fda821782e2 ? $171f74d9f37122c1$var$reduceStyles(x.styles) : [\n            x\n        ]).reduce((prev, curr)=>prev.concat(curr), []);\n}\nclass $171f74d9f37122c1$export$5cb32fda821782e2 {\n    /**\n     * Creates an instance of ElementStyles.\n     * @param styles - The styles that will be associated with elements.\n     */ constructor(styles){\n        this.styles = styles;\n        this.targets = new WeakSet();\n        this._strategy = null;\n        this.behaviors = styles.map((x)=>x instanceof $171f74d9f37122c1$export$5cb32fda821782e2 ? x.behaviors : null).reduce((prev, curr)=>curr === null ? prev : prev === null ? curr : prev.concat(curr), null);\n    }\n    /**\n     * Gets the StyleStrategy associated with these element styles.\n     */ get strategy() {\n        if (this._strategy === null) this.withStrategy($171f74d9f37122c1$var$DefaultStyleStrategy);\n        return this._strategy;\n    }\n    /** @internal */ addStylesTo(target) {\n        this.strategy.addStylesTo(target);\n        this.targets.add(target);\n    }\n    /** @internal */ removeStylesFrom(target) {\n        this.strategy.removeStylesFrom(target);\n        this.targets.delete(target);\n    }\n    /** @internal */ isAttachedTo(target) {\n        return this.targets.has(target);\n    }\n    /**\n     * Associates behaviors with this set of styles.\n     * @param behaviors - The behaviors to associate.\n     */ withBehaviors(...behaviors) {\n        this.behaviors = this.behaviors === null ? behaviors : this.behaviors.concat(behaviors);\n        return this;\n    }\n    /**\n     * Sets the strategy that handles adding/removing these styles for an element.\n     * @param strategy - The strategy to use.\n     */ withStrategy(Strategy) {\n        this._strategy = new Strategy($171f74d9f37122c1$var$reduceStyles(this.styles));\n        return this;\n    }\n    /**\n     * Sets the default strategy type to use when creating style strategies.\n     * @param Strategy - The strategy type to construct.\n     */ static setDefaultStrategy(Strategy) {\n        $171f74d9f37122c1$var$DefaultStyleStrategy = Strategy;\n    }\n    /**\n     * Normalizes a set of composable style options.\n     * @param styles - The style options to normalize.\n     * @returns A singular ElementStyles instance or undefined.\n     */ static normalize(styles) {\n        return styles === void 0 ? void 0 : Array.isArray(styles) ? new $171f74d9f37122c1$export$5cb32fda821782e2(styles) : styles instanceof $171f74d9f37122c1$export$5cb32fda821782e2 ? styles : new $171f74d9f37122c1$export$5cb32fda821782e2([\n            styles\n        ]);\n    }\n}\n/**\n * Indicates whether the DOM supports the adoptedStyleSheets feature.\n */ $171f74d9f37122c1$export$5cb32fda821782e2.supportsAdoptedStyleSheets = Array.isArray(document.adoptedStyleSheets) && \"replace\" in CSSStyleSheet.prototype;\n\n});\n\nparcelRegister(\"d8Jf8\", function(module, exports) {\n\n$parcel$export(module.exports, \"CSSBindingDirective\", () => $990f1e0f523f32f7$export$a4f733160e5c8f6c);\n\nvar $iCh8k = parcelRequire(\"iCh8k\");\nfunction $990f1e0f523f32f7$var$handleChange(directive, controller, observer) {\n    controller.source.style.setProperty(directive.targetAspect, observer.bind(controller));\n}\nclass $990f1e0f523f32f7$export$a4f733160e5c8f6c {\n    /**\n     * Creates an instance of CSSBindingDirective.\n     * @param dataBinding - The binding to use in CSS.\n     * @param targetAspect - The CSS property to target.\n     */ constructor(dataBinding, targetAspect){\n        this.dataBinding = dataBinding;\n        this.targetAspect = targetAspect;\n    }\n    /**\n     * Creates a CSS fragment to interpolate into the CSS document.\n     * @returns - the string to interpolate into CSS\n     */ createCSS(add) {\n        add(this);\n        return `var(${this.targetAspect})`;\n    }\n    /**\n     * Executed when this behavior is attached to a controller.\n     * @param controller - Controls the behavior lifecycle.\n     */ addedCallback(controller) {\n        var _a;\n        const element = controller.source;\n        if (!element.$cssBindings) {\n            element.$cssBindings = new Map();\n            const setAttribute = element.setAttribute;\n            element.setAttribute = (attr, value)=>{\n                setAttribute.call(element, attr, value);\n                if (attr === \"style\") element.$cssBindings.forEach((v, k)=>$990f1e0f523f32f7$var$handleChange(k, v.controller, v.observer));\n            };\n        }\n        const observer = (_a = controller[this.targetAspect]) !== null && _a !== void 0 ? _a : controller[this.targetAspect] = this.dataBinding.createObserver(this, this);\n        observer.controller = controller;\n        controller.source.$cssBindings.set(this, {\n            controller: controller,\n            observer: observer\n        });\n    }\n    /**\n     * Executed when this behavior's host is connected.\n     * @param controller - Controls the behavior lifecycle.\n     */ connectedCallback(controller) {\n        $990f1e0f523f32f7$var$handleChange(this, controller, controller[this.targetAspect]);\n    }\n    /**\n     * Executed when this behavior is detached from a controller.\n     * @param controller - Controls the behavior lifecycle.\n     */ removedCallback(controller) {\n        if (controller.source.$cssBindings) controller.source.$cssBindings.delete(this);\n    }\n    /**\n     * Called when a subject this instance has subscribed to changes.\n     * @param subject - The subject of the change.\n     * @param args - The event args detailing the change that occurred.\n     *\n     * @internal\n     */ handleChange(_, observer) {\n        $990f1e0f523f32f7$var$handleChange(this, observer.controller, observer);\n    }\n}\n(0, $iCh8k.CSSDirective).define($990f1e0f523f32f7$export$a4f733160e5c8f6c);\n\n});\n\n\nparcelRegister(\"cTUOC\", function(module, exports) {\n\n$parcel$export(module.exports, \"FASTElement\", () => $026c7ebbac8e86db$export$904ba5187827962e);\n$parcel$export(module.exports, \"customElement\", () => $026c7ebbac8e86db$export$da64fc29f17f9d0e);\n\nvar $gAsSx = parcelRequire(\"gAsSx\");\n\nvar $z0YX2 = parcelRequire(\"z0YX2\");\n\nvar $4Xo4x = parcelRequire(\"4Xo4x\");\n/* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */ function $026c7ebbac8e86db$var$createFASTElement(BaseType) {\n    const type = class extends BaseType {\n        constructor(){\n            /* eslint-disable-next-line */ super();\n            (0, $z0YX2.ElementController).forCustomElement(this);\n        }\n        $emit(type, detail, options) {\n            return this.$fastController.emit(type, detail, options);\n        }\n        connectedCallback() {\n            this.$fastController.connect();\n        }\n        disconnectedCallback() {\n            this.$fastController.disconnect();\n        }\n        attributeChangedCallback(name, oldValue, newValue) {\n            this.$fastController.onAttributeChangedCallback(name, oldValue, newValue);\n        }\n    };\n    (0, $4Xo4x.FASTElementDefinition).registerBaseType(type);\n    return type;\n}\nfunction $026c7ebbac8e86db$var$compose(type, nameOrDef) {\n    if ((0, $gAsSx.isFunction)(type)) return (0, $4Xo4x.FASTElementDefinition).compose(type, nameOrDef);\n    return (0, $4Xo4x.FASTElementDefinition).compose(this, type);\n}\nfunction $026c7ebbac8e86db$var$define(type, nameOrDef) {\n    if ((0, $gAsSx.isFunction)(type)) return (0, $4Xo4x.FASTElementDefinition).compose(type, nameOrDef).define().type;\n    return (0, $4Xo4x.FASTElementDefinition).compose(this, type).define().type;\n}\nfunction $026c7ebbac8e86db$var$from(BaseType) {\n    return $026c7ebbac8e86db$var$createFASTElement(BaseType);\n}\nconst $026c7ebbac8e86db$export$904ba5187827962e = Object.assign($026c7ebbac8e86db$var$createFASTElement(HTMLElement), {\n    from: /**\n     * Creates a new FASTElement base class inherited from the\n     * provided base type.\n     * @param BaseType - The base element type to inherit from.\n     */ $026c7ebbac8e86db$var$from,\n    define: /**\n     * Defines a platform custom element based on the provided type and definition.\n     * @param type - The custom element type to define.\n     * @param nameOrDef - The name of the element to define or a definition object\n     * that describes the element to define.\n     */ $026c7ebbac8e86db$var$define,\n    compose: /**\n     * Defines metadata for a FASTElement which can be used to later define the element.\n     * @public\n     */ $026c7ebbac8e86db$var$compose\n});\nfunction $026c7ebbac8e86db$export$da64fc29f17f9d0e(nameOrDef) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */ return function(type) {\n        $026c7ebbac8e86db$var$define(type, nameOrDef);\n    };\n}\n\n});\nparcelRegister(\"z0YX2\", function(module, exports) {\n\n$parcel$export(module.exports, \"ElementController\", () => $069408055684e624$export$c72c0f72b4b26c7e);\n\n\nvar $aEJPD = parcelRequire(\"aEJPD\");\n\nvar $kyf8E = parcelRequire(\"kyf8E\");\n\nvar $c22v8 = parcelRequire(\"c22v8\");\n\nvar $1Z57f = parcelRequire(\"1Z57f\");\n\nvar $6qpMz = parcelRequire(\"6qpMz\");\n\nvar $4Xo4x = parcelRequire(\"4Xo4x\");\n\nvar $aWVYn = parcelRequire(\"aWVYn\");\nconst $069408055684e624$var$defaultEventOptions = {\n    bubbles: true,\n    composed: true,\n    cancelable: true\n};\nconst $069408055684e624$var$isConnectedPropertyName = \"isConnected\";\nconst $069408055684e624$var$shadowRoots = new WeakMap();\nfunction $069408055684e624$var$getShadowRoot(element) {\n    var _a, _b;\n    return (_b = (_a = element.shadowRoot) !== null && _a !== void 0 ? _a : $069408055684e624$var$shadowRoots.get(element)) !== null && _b !== void 0 ? _b : null;\n}\nlet $069408055684e624$var$elementControllerStrategy;\nclass $069408055684e624$export$c72c0f72b4b26c7e extends (0, $aEJPD.PropertyChangeNotifier) {\n    /**\n     * Creates a Controller to control the specified element.\n     * @param element - The element to be controlled by this controller.\n     * @param definition - The element definition metadata that instructs this\n     * controller in how to handle rendering and other platform integrations.\n     * @internal\n     */ constructor(element, definition){\n        super(element);\n        this.boundObservables = null;\n        this.needsInitialization = true;\n        this.hasExistingShadowRoot = false;\n        this._template = null;\n        this.stage = 3 /* Stages.disconnected */ ;\n        /**\n         * A guard against connecting behaviors multiple times\n         * during connect in scenarios where a behavior adds\n         * another behavior during it's connectedCallback\n         */ this.guardBehaviorConnection = false;\n        this.behaviors = null;\n        /**\n         * Tracks whether behaviors are connected so that\n         * behaviors cant be connected multiple times\n         */ this.behaviorsConnected = false;\n        this._mainStyles = null;\n        /**\n         * This allows Observable.getNotifier(...) to return the Controller\n         * when the notifier for the Controller itself is being requested. The\n         * result is that the Observable system does not need to create a separate\n         * instance of Notifier for observables on the Controller. The component and\n         * the controller will now share the same notifier, removing one-object construct\n         * per web component instance.\n         */ this.$fastController = this;\n        /**\n         * The view associated with the custom element.\n         * @remarks\n         * If `null` then the element is managing its own rendering.\n         */ this.view = null;\n        this.source = element;\n        this.definition = definition;\n        const shadowOptions = definition.shadowOptions;\n        if (shadowOptions !== void 0) {\n            let shadowRoot = element.shadowRoot;\n            if (shadowRoot) this.hasExistingShadowRoot = true;\n            else {\n                shadowRoot = element.attachShadow(shadowOptions);\n                if (shadowOptions.mode === \"closed\") $069408055684e624$var$shadowRoots.set(element, shadowRoot);\n            }\n        }\n        // Capture any observable values that were set by the binding engine before\n        // the browser upgraded the element. Then delete the property since it will\n        // shadow the getter/setter that is required to make the observable operate.\n        // Later, in the connect callback, we'll re-apply the values.\n        const accessors = (0, $kyf8E.Observable).getAccessors(element);\n        if (accessors.length > 0) {\n            const boundObservables = this.boundObservables = Object.create(null);\n            for(let i = 0, ii = accessors.length; i < ii; ++i){\n                const propertyName = accessors[i].name;\n                const value = element[propertyName];\n                if (value !== void 0) {\n                    delete element[propertyName];\n                    boundObservables[propertyName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Indicates whether or not the custom element has been\n     * connected to the document.\n     */ get isConnected() {\n        (0, $kyf8E.Observable).track(this, $069408055684e624$var$isConnectedPropertyName);\n        return this.stage === 1 /* Stages.connected */ ;\n    }\n    /**\n     * The context the expression is evaluated against.\n     */ get context() {\n        var _a, _b;\n        return (_b = (_a = this.view) === null || _a === void 0 ? void 0 : _a.context) !== null && _b !== void 0 ? _b : (0, $kyf8E.ExecutionContext).default;\n    }\n    /**\n     * Indicates whether the controller is bound.\n     */ get isBound() {\n        var _a, _b;\n        return (_b = (_a = this.view) === null || _a === void 0 ? void 0 : _a.isBound) !== null && _b !== void 0 ? _b : false;\n    }\n    /**\n     * Indicates how the source's lifetime relates to the controller's lifetime.\n     */ get sourceLifetime() {\n        var _a;\n        return (_a = this.view) === null || _a === void 0 ? void 0 : _a.sourceLifetime;\n    }\n    /**\n     * Gets/sets the template used to render the component.\n     * @remarks\n     * This value can only be accurately read after connect but can be set at any time.\n     */ get template() {\n        var _a;\n        // 1. Template overrides take top precedence.\n        if (this._template === null) {\n            const definition = this.definition;\n            if (this.source.resolveTemplate) // 2. Allow for element instance overrides next.\n            this._template = this.source.resolveTemplate();\n            else if (definition.template) // 3. Default to the static definition.\n            this._template = (_a = definition.template) !== null && _a !== void 0 ? _a : null;\n        }\n        return this._template;\n    }\n    set template(value) {\n        if (this._template === value) return;\n        this._template = value;\n        if (!this.needsInitialization) this.renderTemplate(value);\n    }\n    /**\n     * The main set of styles used for the component, independent\n     * of any dynamically added styles.\n     */ get mainStyles() {\n        var _a;\n        // 1. Styles overrides take top precedence.\n        if (this._mainStyles === null) {\n            const definition = this.definition;\n            if (this.source.resolveStyles) // 2. Allow for element instance overrides next.\n            this._mainStyles = this.source.resolveStyles();\n            else if (definition.styles) // 3. Default to the static definition.\n            this._mainStyles = (_a = definition.styles) !== null && _a !== void 0 ? _a : null;\n        }\n        return this._mainStyles;\n    }\n    set mainStyles(value) {\n        if (this._mainStyles === value) return;\n        if (this._mainStyles !== null) this.removeStyles(this._mainStyles);\n        this._mainStyles = value;\n        if (!this.needsInitialization) this.addStyles(value);\n    }\n    /**\n     * Registers an unbind handler with the controller.\n     * @param behavior - An object to call when the controller unbinds.\n     */ onUnbind(behavior) {\n        var _a;\n        (_a = this.view) === null || _a === void 0 || _a.onUnbind(behavior);\n    }\n    /**\n     * Adds the behavior to the component.\n     * @param behavior - The behavior to add.\n     */ addBehavior(behavior) {\n        var _a, _b;\n        const targetBehaviors = (_a = this.behaviors) !== null && _a !== void 0 ? _a : this.behaviors = new Map();\n        const count = (_b = targetBehaviors.get(behavior)) !== null && _b !== void 0 ? _b : 0;\n        if (count === 0) {\n            targetBehaviors.set(behavior, 1);\n            behavior.addedCallback && behavior.addedCallback(this);\n            if (behavior.connectedCallback && !this.guardBehaviorConnection && (this.stage === 1 /* Stages.connected */  || this.stage === 0 /* Stages.connecting */ )) behavior.connectedCallback(this);\n        } else targetBehaviors.set(behavior, count + 1);\n    }\n    /**\n     * Removes the behavior from the component.\n     * @param behavior - The behavior to remove.\n     * @param force - Forces removal even if this behavior was added more than once.\n     */ removeBehavior(behavior, force = false) {\n        const targetBehaviors = this.behaviors;\n        if (targetBehaviors === null) return;\n        const count = targetBehaviors.get(behavior);\n        if (count === void 0) return;\n        if (count === 1 || force) {\n            targetBehaviors.delete(behavior);\n            if (behavior.disconnectedCallback && this.stage !== 3 /* Stages.disconnected */ ) behavior.disconnectedCallback(this);\n            behavior.removedCallback && behavior.removedCallback(this);\n        } else targetBehaviors.set(behavior, count - 1);\n    }\n    /**\n     * Adds styles to this element. Providing an HTMLStyleElement will attach the element instance to the shadowRoot.\n     * @param styles - The styles to add.\n     */ addStyles(styles) {\n        var _a;\n        if (!styles) return;\n        const source = this.source;\n        if (styles instanceof HTMLElement) {\n            const target = (_a = $069408055684e624$var$getShadowRoot(source)) !== null && _a !== void 0 ? _a : this.source;\n            target.append(styles);\n        } else if (!styles.isAttachedTo(source)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.addStylesTo(source);\n            if (sourceBehaviors !== null) for(let i = 0, ii = sourceBehaviors.length; i < ii; ++i)this.addBehavior(sourceBehaviors[i]);\n        }\n    }\n    /**\n     * Removes styles from this element. Providing an HTMLStyleElement will detach the element instance from the shadowRoot.\n     * @param styles - the styles to remove.\n     */ removeStyles(styles) {\n        var _a;\n        if (!styles) return;\n        const source = this.source;\n        if (styles instanceof HTMLElement) {\n            const target = (_a = $069408055684e624$var$getShadowRoot(source)) !== null && _a !== void 0 ? _a : source;\n            target.removeChild(styles);\n        } else if (styles.isAttachedTo(source)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.removeStylesFrom(source);\n            if (sourceBehaviors !== null) for(let i = 0, ii = sourceBehaviors.length; i < ii; ++i)this.removeBehavior(sourceBehaviors[i]);\n        }\n    }\n    /**\n     * Runs connected lifecycle behavior on the associated element.\n     */ connect() {\n        if (this.stage !== 3 /* Stages.disconnected */ ) return;\n        this.stage = 0 /* Stages.connecting */ ;\n        this.bindObservables();\n        this.connectBehaviors();\n        if (this.needsInitialization) {\n            this.renderTemplate(this.template);\n            this.addStyles(this.mainStyles);\n            this.needsInitialization = false;\n        } else if (this.view !== null) this.view.bind(this.source);\n        this.stage = 1 /* Stages.connected */ ;\n        (0, $kyf8E.Observable).notify(this, $069408055684e624$var$isConnectedPropertyName);\n    }\n    bindObservables() {\n        if (this.boundObservables !== null) {\n            const element = this.source;\n            const boundObservables = this.boundObservables;\n            const propertyNames = Object.keys(boundObservables);\n            for(let i = 0, ii = propertyNames.length; i < ii; ++i){\n                const propertyName = propertyNames[i];\n                element[propertyName] = boundObservables[propertyName];\n            }\n            this.boundObservables = null;\n        }\n    }\n    connectBehaviors() {\n        if (this.behaviorsConnected === false) {\n            const behaviors = this.behaviors;\n            if (behaviors !== null) {\n                this.guardBehaviorConnection = true;\n                for (const key of behaviors.keys())key.connectedCallback && key.connectedCallback(this);\n                this.guardBehaviorConnection = false;\n            }\n            this.behaviorsConnected = true;\n        }\n    }\n    disconnectBehaviors() {\n        if (this.behaviorsConnected === true) {\n            const behaviors = this.behaviors;\n            if (behaviors !== null) for (const key of behaviors.keys())key.disconnectedCallback && key.disconnectedCallback(this);\n            this.behaviorsConnected = false;\n        }\n    }\n    /**\n     * Runs disconnected lifecycle behavior on the associated element.\n     */ disconnect() {\n        if (this.stage !== 1 /* Stages.connected */ ) return;\n        this.stage = 2 /* Stages.disconnecting */ ;\n        (0, $kyf8E.Observable).notify(this, $069408055684e624$var$isConnectedPropertyName);\n        if (this.view !== null) this.view.unbind();\n        this.disconnectBehaviors();\n        this.stage = 3 /* Stages.disconnected */ ;\n    }\n    /**\n     * Runs the attribute changed callback for the associated element.\n     * @param name - The name of the attribute that changed.\n     * @param oldValue - The previous value of the attribute.\n     * @param newValue - The new value of the attribute.\n     */ onAttributeChangedCallback(name, oldValue, newValue) {\n        const attrDef = this.definition.attributeLookup[name];\n        if (attrDef !== void 0) attrDef.onAttributeChangedCallback(this.source, newValue);\n    }\n    /**\n     * Emits a custom HTML event.\n     * @param type - The type name of the event.\n     * @param detail - The event detail object to send with the event.\n     * @param options - The event options. By default bubbles and composed.\n     * @remarks\n     * Only emits events if connected.\n     */ emit(type, detail, options) {\n        if (this.stage === 1 /* Stages.connected */ ) return this.source.dispatchEvent(new CustomEvent(type, Object.assign(Object.assign({\n            detail: detail\n        }, $069408055684e624$var$defaultEventOptions), options)));\n        return false;\n    }\n    renderTemplate(template) {\n        var _a;\n        // When getting the host to render to, we start by looking\n        // up the shadow root. If there isn't one, then that means\n        // we're doing a Light DOM render to the element's direct children.\n        const element = this.source;\n        const host = (_a = $069408055684e624$var$getShadowRoot(element)) !== null && _a !== void 0 ? _a : element;\n        if (this.view !== null) {\n            // If there's already a view, we need to unbind and remove through dispose.\n            this.view.dispose();\n            this.view = null;\n        } else if (!this.needsInitialization || this.hasExistingShadowRoot) {\n            this.hasExistingShadowRoot = false;\n            // If there was previous custom rendering, we need to clear out the host.\n            for(let child = host.firstChild; child !== null; child = host.firstChild)host.removeChild(child);\n        }\n        if (template) {\n            // If a new template was provided, render it.\n            this.view = template.render(element, host, element);\n            this.view.sourceLifetime = (0, $kyf8E.SourceLifetime).coupled;\n        }\n    }\n    /**\n     * Locates or creates a controller for the specified element.\n     * @param element - The element to return the controller for.\n     * @remarks\n     * The specified element must have a {@link FASTElementDefinition}\n     * registered either through the use of the {@link customElement}\n     * decorator or a call to `FASTElement.define`.\n     */ static forCustomElement(element) {\n        const controller = element.$fastController;\n        if (controller !== void 0) return controller;\n        const definition = (0, $4Xo4x.FASTElementDefinition).getForInstance(element);\n        if (definition === void 0) throw (0, $c22v8.FAST).error(1401 /* Message.missingElementDefinition */ );\n        return element.$fastController = new $069408055684e624$var$elementControllerStrategy(element, definition);\n    }\n    /**\n     * Sets the strategy that ElementController.forCustomElement uses to construct\n     * ElementController instances for an element.\n     * @param strategy - The strategy to use.\n     */ static setStrategy(strategy) {\n        $069408055684e624$var$elementControllerStrategy = strategy;\n    }\n}\n(0, $c22v8.makeSerializationNoop)($069408055684e624$export$c72c0f72b4b26c7e);\n// Set default strategy for ElementController\n$069408055684e624$export$c72c0f72b4b26c7e.setStrategy($069408055684e624$export$c72c0f72b4b26c7e);\n/**\n * Converts a styleTarget into the operative target. When the provided target is an Element\n * that is a FASTElement, the function will return the ShadowRoot for that element. Otherwise,\n * it will return the root node for the element.\n * @param target\n * @returns\n */ function $069408055684e624$var$normalizeStyleTarget(target) {\n    var _a;\n    if (\"adoptedStyleSheets\" in target) return target;\n    else return (_a = $069408055684e624$var$getShadowRoot(target)) !== null && _a !== void 0 ? _a : target.getRootNode();\n}\nclass $069408055684e624$export$ff9a4b215f625f9a {\n    constructor(styles){\n        const styleSheetCache = $069408055684e624$export$ff9a4b215f625f9a.styleSheetCache;\n        this.sheets = styles.map((x)=>{\n            if (x instanceof CSSStyleSheet) return x;\n            let sheet = styleSheetCache.get(x);\n            if (sheet === void 0) {\n                sheet = new CSSStyleSheet();\n                sheet.replaceSync(x);\n                styleSheetCache.set(x, sheet);\n            }\n            return sheet;\n        });\n    }\n    addStylesTo(target) {\n        $069408055684e624$var$addAdoptedStyleSheets($069408055684e624$var$normalizeStyleTarget(target), this.sheets);\n    }\n    removeStylesFrom(target) {\n        $069408055684e624$var$removeAdoptedStyleSheets($069408055684e624$var$normalizeStyleTarget(target), this.sheets);\n    }\n}\n$069408055684e624$export$ff9a4b215f625f9a.styleSheetCache = new Map();\nlet $069408055684e624$var$id = 0;\nconst $069408055684e624$var$nextStyleId = ()=>`fast-${++$069408055684e624$var$id}`;\nfunction $069408055684e624$var$usableStyleTarget(target) {\n    return target === document ? document.body : target;\n}\nclass $069408055684e624$export$e1686a201ec21b22 {\n    constructor(styles){\n        this.styles = styles;\n        this.styleClass = $069408055684e624$var$nextStyleId();\n    }\n    addStylesTo(target) {\n        target = $069408055684e624$var$usableStyleTarget($069408055684e624$var$normalizeStyleTarget(target));\n        const styles = this.styles;\n        const styleClass = this.styleClass;\n        for(let i = 0; i < styles.length; i++){\n            const element = document.createElement(\"style\");\n            element.innerHTML = styles[i];\n            element.className = styleClass;\n            target.append(element);\n        }\n    }\n    removeStylesFrom(target) {\n        target = $069408055684e624$var$usableStyleTarget($069408055684e624$var$normalizeStyleTarget(target));\n        const styles = target.querySelectorAll(`.${this.styleClass}`);\n        for(let i = 0, ii = styles.length; i < ii; ++i)target.removeChild(styles[i]);\n    }\n}\nlet $069408055684e624$var$addAdoptedStyleSheets = (target, sheets)=>{\n    target.adoptedStyleSheets = [\n        ...target.adoptedStyleSheets,\n        ...sheets\n    ];\n};\nlet $069408055684e624$var$removeAdoptedStyleSheets = (target, sheets)=>{\n    target.adoptedStyleSheets = target.adoptedStyleSheets.filter((x)=>sheets.indexOf(x) === -1);\n};\nif ((0, $1Z57f.ElementStyles).supportsAdoptedStyleSheets) {\n    try {\n        // Test if browser implementation uses FrozenArray.\n        // If not, use push / splice to alter the stylesheets\n        // in place. This circumvents a bug in Safari 16.4 where\n        // periodically, assigning the array would previously\n        // cause sheets to be removed.\n        document.adoptedStyleSheets.push();\n        document.adoptedStyleSheets.splice();\n        $069408055684e624$var$addAdoptedStyleSheets = (target, sheets)=>{\n            target.adoptedStyleSheets.push(...sheets);\n        };\n        $069408055684e624$var$removeAdoptedStyleSheets = (target, sheets)=>{\n            for (const sheet of sheets){\n                const index = target.adoptedStyleSheets.indexOf(sheet);\n                if (index !== -1) target.adoptedStyleSheets.splice(index, 1);\n            }\n        };\n    } catch (e) {\n    // Do nothing if an error is thrown, the default\n    // case handles FrozenArray.\n    }\n    (0, $1Z57f.ElementStyles).setDefaultStrategy($069408055684e624$export$ff9a4b215f625f9a);\n} else (0, $1Z57f.ElementStyles).setDefaultStrategy($069408055684e624$export$e1686a201ec21b22);\nconst $069408055684e624$var$deferHydrationAttribute = \"defer-hydration\";\nconst $069408055684e624$var$needsHydrationAttribute = \"needs-hydration\";\nclass $069408055684e624$export$263e00ec4c78a647 extends $069408055684e624$export$c72c0f72b4b26c7e {\n    static hydrationObserverHandler(records) {\n        for (const record of records){\n            $069408055684e624$export$263e00ec4c78a647.hydrationObserver.unobserve(record.target);\n            record.target.$fastController.connect();\n        }\n    }\n    connect() {\n        var _a, _b;\n        // Initialize needsHydration on first connect\n        if (this.needsHydration === undefined) this.needsHydration = this.source.getAttribute($069408055684e624$var$needsHydrationAttribute) !== null;\n        // If the `defer-hydration` attribute exists on the source,\n        // wait for it to be removed before continuing connection behavior.\n        if (this.source.hasAttribute($069408055684e624$var$deferHydrationAttribute)) {\n            $069408055684e624$export$263e00ec4c78a647.hydrationObserver.observe(this.source, {\n                attributeFilter: [\n                    $069408055684e624$var$deferHydrationAttribute\n                ]\n            });\n            return;\n        }\n        // If the controller does not need to be hydrated, defer connection behavior\n        // to the base-class. This case handles element re-connection and initial connection\n        // of elements that did not get declarative shadow-dom emitted, as well as if an extending\n        // class\n        if (!this.needsHydration) {\n            super.connect();\n            return;\n        }\n        if (this.stage !== 3 /* Stages.disconnected */ ) return;\n        this.stage = 0 /* Stages.connecting */ ;\n        this.bindObservables();\n        this.connectBehaviors();\n        const element = this.source;\n        const host = (_a = $069408055684e624$var$getShadowRoot(element)) !== null && _a !== void 0 ? _a : element;\n        if (this.template) {\n            if ((0, $aWVYn.isHydratable)(this.template)) {\n                let firstChild = host.firstChild;\n                let lastChild = host.lastChild;\n                if (element.shadowRoot === null) {\n                    // handle element boundary markers when shadowRoot is not present\n                    if ((0, $aWVYn.HydrationMarkup).isElementBoundaryStartMarker(firstChild)) {\n                        firstChild.data = \"\";\n                        firstChild = firstChild.nextSibling;\n                    }\n                    if ((0, $aWVYn.HydrationMarkup).isElementBoundaryEndMarker(lastChild)) {\n                        lastChild.data = \"\";\n                        lastChild = lastChild.previousSibling;\n                    }\n                }\n                this.view = this.template.hydrate(firstChild, lastChild, element);\n                (_b = this.view) === null || _b === void 0 || _b.bind(this.source);\n            } else this.renderTemplate(this.template);\n        }\n        this.addStyles(this.mainStyles);\n        this.stage = 1 /* Stages.connected */ ;\n        this.source.removeAttribute($069408055684e624$var$needsHydrationAttribute);\n        this.needsInitialization = this.needsHydration = false;\n        (0, $kyf8E.Observable).notify(this, $069408055684e624$var$isConnectedPropertyName);\n    }\n    disconnect() {\n        super.disconnect();\n        $069408055684e624$export$263e00ec4c78a647.hydrationObserver.unobserve(this.source);\n    }\n    static install() {\n        $069408055684e624$export$c72c0f72b4b26c7e.setStrategy($069408055684e624$export$263e00ec4c78a647);\n    }\n}\n$069408055684e624$export$263e00ec4c78a647.hydrationObserver = new (0, $6qpMz.UnobservableMutationObserver)($069408055684e624$export$263e00ec4c78a647.hydrationObserverHandler);\n\n});\nparcelRegister(\"6qpMz\", function(module, exports) {\n\n$parcel$export(module.exports, \"UnobservableMutationObserver\", () => $4ad92ba3e9c374f7$export$f68c7a96500f2aea);\n\nvar $1hYzh = parcelRequire(\"1hYzh\");\n\nvar $kyf8E = parcelRequire(\"kyf8E\");\n\nvar $lMiZS = parcelRequire(\"lMiZS\");\nfunction $4ad92ba3e9c374f7$export$514d96791ae418fd(element) {\n    const parentNode = element.parentElement;\n    if (parentNode) return parentNode;\n    else {\n        const rootNode = element.getRootNode();\n        if (rootNode.host instanceof HTMLElement) // this is shadow-root\n        return rootNode.host;\n    }\n    return null;\n}\nfunction $4ad92ba3e9c374f7$export$874dc4aa4f6fa14b(reference, test) {\n    let current = test;\n    while(current !== null){\n        if (current === reference) return true;\n        current = $4ad92ba3e9c374f7$export$514d96791ae418fd(current);\n    }\n    return false;\n}\nclass $4ad92ba3e9c374f7$export$f68c7a96500f2aea extends MutationObserver {\n    /**\n     * Creates an instance of UnobservableMutationObserver.\n     * @param callback - The callback to invoke when observed nodes are changed.\n     */ constructor(callback){\n        function handler(mutations) {\n            this.callback.call(null, mutations.filter((record)=>this.observedNodes.has(record.target)));\n        }\n        super(handler);\n        this.callback = callback;\n        this.observedNodes = new Set();\n    }\n    observe(target, options) {\n        this.observedNodes.add(target);\n        super.observe(target, options);\n    }\n    unobserve(target) {\n        this.observedNodes.delete(target);\n        if (this.observedNodes.size < 1) this.disconnect();\n    }\n}\nconst $4ad92ba3e9c374f7$export$3ff5b079a3a7327 = Object.freeze({\n    /**\n     * Creates a ViewBehaviorOrchestrator.\n     * @param source - The source to to associate behaviors with.\n     * @returns A ViewBehaviorOrchestrator.\n     */ create (source) {\n        const behaviors = [];\n        const targets = {};\n        let unbindables = null;\n        let isConnected = false;\n        return {\n            source: source,\n            context: (0, $kyf8E.ExecutionContext).default,\n            targets: targets,\n            get isBound () {\n                return isConnected;\n            },\n            addBehaviorFactory (factory, target) {\n                var _a, _b, _c, _d;\n                const compiled = factory;\n                compiled.id = (_a = compiled.id) !== null && _a !== void 0 ? _a : (0, $lMiZS.nextId)();\n                compiled.targetNodeId = (_b = compiled.targetNodeId) !== null && _b !== void 0 ? _b : (0, $lMiZS.nextId)();\n                compiled.targetTagName = (_c = target.tagName) !== null && _c !== void 0 ? _c : null;\n                compiled.policy = (_d = compiled.policy) !== null && _d !== void 0 ? _d : (0, $1hYzh.DOM).policy;\n                this.addTarget(compiled.targetNodeId, target);\n                this.addBehavior(compiled.createBehavior());\n            },\n            addTarget (nodeId, target) {\n                targets[nodeId] = target;\n            },\n            addBehavior (behavior) {\n                behaviors.push(behavior);\n                if (isConnected) behavior.bind(this);\n            },\n            onUnbind (unbindable) {\n                if (unbindables === null) unbindables = [];\n                unbindables.push(unbindable);\n            },\n            connectedCallback (controller) {\n                if (!isConnected) {\n                    isConnected = true;\n                    behaviors.forEach((x)=>x.bind(this));\n                }\n            },\n            disconnectedCallback (controller) {\n                if (isConnected) {\n                    isConnected = false;\n                    if (unbindables !== null) unbindables.forEach((x)=>x.unbind(this));\n                }\n            }\n        };\n    }\n});\n\n});\n\nparcelRegister(\"4Xo4x\", function(module, exports) {\n\n$parcel$export(module.exports, \"FASTElementDefinition\", () => $39bf58553b4fcc86$export$dbb8b6d358bc70ba);\n\nvar $gAsSx = parcelRequire(\"gAsSx\");\n\nvar $kyf8E = parcelRequire(\"kyf8E\");\n\nvar $c22v8 = parcelRequire(\"c22v8\");\n\nvar $1Z57f = parcelRequire(\"1Z57f\");\n\nvar $hIJMY = parcelRequire(\"hIJMY\");\nconst $39bf58553b4fcc86$var$defaultShadowOptions = {\n    mode: \"open\"\n};\nconst $39bf58553b4fcc86$var$defaultElementOptions = {};\nconst $39bf58553b4fcc86$var$fastElementBaseTypes = new Set();\nconst $39bf58553b4fcc86$var$fastElementRegistry = (0, $c22v8.FAST).getById((0, $gAsSx.KernelServiceId).elementRegistry, ()=>(0, $c22v8.createTypeRegistry)());\nclass $39bf58553b4fcc86$export$dbb8b6d358bc70ba {\n    constructor(type, nameOrConfig = type.definition){\n        var _a;\n        this.platformDefined = false;\n        if ((0, $gAsSx.isString)(nameOrConfig)) nameOrConfig = {\n            name: nameOrConfig\n        };\n        this.type = type;\n        this.name = nameOrConfig.name;\n        this.template = nameOrConfig.template;\n        this.registry = (_a = nameOrConfig.registry) !== null && _a !== void 0 ? _a : customElements;\n        const proto = type.prototype;\n        const attributes = (0, $hIJMY.AttributeDefinition).collect(type, nameOrConfig.attributes);\n        const observedAttributes = new Array(attributes.length);\n        const propertyLookup = {};\n        const attributeLookup = {};\n        for(let i = 0, ii = attributes.length; i < ii; ++i){\n            const current = attributes[i];\n            observedAttributes[i] = current.attribute;\n            propertyLookup[current.name] = current;\n            attributeLookup[current.attribute] = current;\n            (0, $kyf8E.Observable).defineProperty(proto, current);\n        }\n        Reflect.defineProperty(type, \"observedAttributes\", {\n            value: observedAttributes,\n            enumerable: true\n        });\n        this.attributes = attributes;\n        this.propertyLookup = propertyLookup;\n        this.attributeLookup = attributeLookup;\n        this.shadowOptions = nameOrConfig.shadowOptions === void 0 ? $39bf58553b4fcc86$var$defaultShadowOptions : nameOrConfig.shadowOptions === null ? void 0 : Object.assign(Object.assign({}, $39bf58553b4fcc86$var$defaultShadowOptions), nameOrConfig.shadowOptions);\n        this.elementOptions = nameOrConfig.elementOptions === void 0 ? $39bf58553b4fcc86$var$defaultElementOptions : Object.assign(Object.assign({}, $39bf58553b4fcc86$var$defaultElementOptions), nameOrConfig.elementOptions);\n        this.styles = (0, $1Z57f.ElementStyles).normalize(nameOrConfig.styles);\n        $39bf58553b4fcc86$var$fastElementRegistry.register(this);\n    }\n    /**\n     * Indicates if this element has been defined in at least one registry.\n     */ get isDefined() {\n        return this.platformDefined;\n    }\n    /**\n     * Defines a custom element based on this definition.\n     * @param registry - The element registry to define the element in.\n     * @remarks\n     * This operation is idempotent per registry.\n     */ define(registry = this.registry) {\n        const type = this.type;\n        if (!registry.get(this.name)) {\n            this.platformDefined = true;\n            registry.define(this.name, type, this.elementOptions);\n        }\n        return this;\n    }\n    /**\n     * Creates an instance of FASTElementDefinition.\n     * @param type - The type this definition is being created for.\n     * @param nameOrDef - The name of the element to define or a config object\n     * that describes the element to define.\n     */ static compose(type, nameOrDef) {\n        if ($39bf58553b4fcc86$var$fastElementBaseTypes.has(type) || $39bf58553b4fcc86$var$fastElementRegistry.getByType(type)) return new $39bf58553b4fcc86$export$dbb8b6d358bc70ba(class extends type {\n        }, nameOrDef);\n        return new $39bf58553b4fcc86$export$dbb8b6d358bc70ba(type, nameOrDef);\n    }\n    /**\n     * Registers a FASTElement base type.\n     * @param type - The type to register as a base type.\n     * @internal\n     */ static registerBaseType(type) {\n        $39bf58553b4fcc86$var$fastElementBaseTypes.add(type);\n    }\n}\n/**\n * Gets the element definition associated with the specified type.\n * @param type - The custom element type to retrieve the definition for.\n */ $39bf58553b4fcc86$export$dbb8b6d358bc70ba.getByType = $39bf58553b4fcc86$var$fastElementRegistry.getByType;\n/**\n * Gets the element definition associated with the instance.\n * @param instance - The custom element instance to retrieve the definition for.\n */ $39bf58553b4fcc86$export$dbb8b6d358bc70ba.getForInstance = $39bf58553b4fcc86$var$fastElementRegistry.getForInstance;\n\n});\n\nparcelRegister(\"aWVYn\", function(module, exports) {\n\n$parcel$export(module.exports, \"HydrationMarkup\", () => $7f8c4a5b7179e36c$export$d9a04faa81df4f36);\n$parcel$export(module.exports, \"Hydratable\", () => $7f8c4a5b7179e36c$export$7393b5ded7a91eb8);\n$parcel$export(module.exports, \"isHydratable\", () => $7f8c4a5b7179e36c$export$9934e196b2f5d5b7);\nconst $7f8c4a5b7179e36c$var$bindingStartMarker = /fe-b\\$\\$start\\$\\$(\\d+)\\$\\$(.+)\\$\\$fe-b/;\nconst $7f8c4a5b7179e36c$var$bindingEndMarker = /fe-b\\$\\$end\\$\\$(\\d+)\\$\\$(.+)\\$\\$fe-b/;\nconst $7f8c4a5b7179e36c$var$repeatViewStartMarker = /fe-repeat\\$\\$start\\$\\$(\\d+)\\$\\$fe-repeat/;\nconst $7f8c4a5b7179e36c$var$repeatViewEndMarker = /fe-repeat\\$\\$end\\$\\$(\\d+)\\$\\$fe-repeat/;\nconst $7f8c4a5b7179e36c$var$elementBoundaryStartMarker = /^(?:.{0,1000})fe-eb\\$\\$start\\$\\$(.+?)\\$\\$fe-eb/;\nconst $7f8c4a5b7179e36c$var$elementBoundaryEndMarker = /fe-eb\\$\\$end\\$\\$(.{0,1000})\\$\\$fe-eb(?:.{0,1000})$/;\nfunction $7f8c4a5b7179e36c$var$isComment(node) {\n    return node && node.nodeType === Node.COMMENT_NODE;\n}\nconst $7f8c4a5b7179e36c$export$d9a04faa81df4f36 = Object.freeze({\n    attributeMarkerName: \"data-fe-b\",\n    attributeBindingSeparator: \" \",\n    contentBindingStartMarker (index, uniqueId) {\n        return `fe-b$$start$$${index}$$${uniqueId}$$fe-b`;\n    },\n    contentBindingEndMarker (index, uniqueId) {\n        return `fe-b$$end$$${index}$$${uniqueId}$$fe-b`;\n    },\n    repeatStartMarker (index) {\n        return `fe-repeat$$start$$${index}$$fe-repeat`;\n    },\n    repeatEndMarker (index) {\n        return `fe-repeat$$end$$${index}$$fe-repeat`;\n    },\n    isContentBindingStartMarker (content) {\n        return $7f8c4a5b7179e36c$var$bindingStartMarker.test(content);\n    },\n    isContentBindingEndMarker (content) {\n        return $7f8c4a5b7179e36c$var$bindingEndMarker.test(content);\n    },\n    isRepeatViewStartMarker (content) {\n        return $7f8c4a5b7179e36c$var$repeatViewStartMarker.test(content);\n    },\n    isRepeatViewEndMarker (content) {\n        return $7f8c4a5b7179e36c$var$repeatViewEndMarker.test(content);\n    },\n    isElementBoundaryStartMarker (node) {\n        return $7f8c4a5b7179e36c$var$isComment(node) && $7f8c4a5b7179e36c$var$elementBoundaryStartMarker.test(node.data.trim());\n    },\n    isElementBoundaryEndMarker (node) {\n        return $7f8c4a5b7179e36c$var$isComment(node) && $7f8c4a5b7179e36c$var$elementBoundaryEndMarker.test(node.data);\n    },\n    /**\n     * Returns the indexes of the ViewBehaviorFactories affecting\n     * attributes for the element, or null if no factories were found.\n     */ parseAttributeBinding (node) {\n        const attr = node.getAttribute(this.attributeMarkerName);\n        return attr === null ? attr : attr.split(this.attributeBindingSeparator).map((i)=>parseInt(i));\n    },\n    /**\n     * Parses the ViewBehaviorFactory index from string data. Returns\n     * the binding index or null if the index cannot be retrieved.\n     */ parseContentBindingStartMarker (content) {\n        return $7f8c4a5b7179e36c$var$parseIndexAndIdMarker($7f8c4a5b7179e36c$var$bindingStartMarker, content);\n    },\n    parseContentBindingEndMarker (content) {\n        return $7f8c4a5b7179e36c$var$parseIndexAndIdMarker($7f8c4a5b7179e36c$var$bindingEndMarker, content);\n    },\n    /**\n     * Parses the index of a repeat directive from a content string.\n     */ parseRepeatStartMarker (content) {\n        return $7f8c4a5b7179e36c$var$parseIntMarker($7f8c4a5b7179e36c$var$repeatViewStartMarker, content);\n    },\n    parseRepeatEndMarker (content) {\n        return $7f8c4a5b7179e36c$var$parseIntMarker($7f8c4a5b7179e36c$var$repeatViewEndMarker, content);\n    },\n    /**\n     * Parses element Id from element boundary markers\n     */ parseElementBoundaryStartMarker (content) {\n        return $7f8c4a5b7179e36c$var$parseStringMarker($7f8c4a5b7179e36c$var$elementBoundaryStartMarker, content.trim());\n    },\n    parseElementBoundaryEndMarker (content) {\n        return $7f8c4a5b7179e36c$var$parseStringMarker($7f8c4a5b7179e36c$var$elementBoundaryEndMarker, content);\n    }\n});\nfunction $7f8c4a5b7179e36c$var$parseIntMarker(regex, content) {\n    const match = regex.exec(content);\n    return match === null ? match : parseInt(match[1]);\n}\nfunction $7f8c4a5b7179e36c$var$parseStringMarker(regex, content) {\n    const match = regex.exec(content);\n    return match === null ? match : match[1];\n}\nfunction $7f8c4a5b7179e36c$var$parseIndexAndIdMarker(regex, content) {\n    const match = regex.exec(content);\n    return match === null ? match : [\n        parseInt(match[1]),\n        match[2]\n    ];\n}\nconst $7f8c4a5b7179e36c$export$7393b5ded7a91eb8 = Symbol.for(\"fe-hydration\");\nfunction $7f8c4a5b7179e36c$export$9934e196b2f5d5b7(value) {\n    return value[$7f8c4a5b7179e36c$export$7393b5ded7a91eb8] === $7f8c4a5b7179e36c$export$7393b5ded7a91eb8;\n}\n\n});\n\n\n\nparcelRegister(\"lhgTg\", function(module, exports) {\n\n$parcel$export(module.exports, \"ViewTemplate\", () => $f7d8498dd9e90f88$export$98f7e629c251afe6);\n$parcel$export(module.exports, \"html\", () => $f7d8498dd9e90f88$export$c0bb0b647f701bb5);\n\nvar $gAsSx = parcelRequire(\"gAsSx\");\n\nvar $7v8l6 = parcelRequire(\"7v8l6\");\n\nvar $c22v8 = parcelRequire(\"c22v8\");\n\nvar $2m4Ni = parcelRequire(\"2m4Ni\");\n\nvar $91MUc = parcelRequire(\"91MUc\");\n\nvar $4VObL = parcelRequire(\"4VObL\");\n\nvar $fzuOp = parcelRequire(\"fzuOp\");\n\nvar $dgoyj = parcelRequire(\"dgoyj\");\n\nvar $lMiZS = parcelRequire(\"lMiZS\");\n// Much thanks to LitHTML for working this out!\nconst $f7d8498dd9e90f88$var$lastAttributeNameRegex = /* eslint-disable-next-line no-control-regex, max-len */ /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\nconst $f7d8498dd9e90f88$var$noFactories = Object.create(null);\nclass $f7d8498dd9e90f88$export$f5439a5bc3830f91 {\n    /**\n     * Creates an instance of InlineTemplateDirective.\n     * @param template - The template to inline.\n     */ constructor(html, factories = $f7d8498dd9e90f88$var$noFactories){\n        this.html = html;\n        this.factories = factories;\n    }\n    /**\n     * Creates HTML to be used within a template.\n     * @param add - Can be used to add  behavior factories to a template.\n     */ createHTML(add) {\n        const factories = this.factories;\n        for(const key in factories)add(factories[key]);\n        return this.html;\n    }\n}\n/**\n * An empty template partial.\n */ $f7d8498dd9e90f88$export$f5439a5bc3830f91.empty = new $f7d8498dd9e90f88$export$f5439a5bc3830f91(\"\");\n(0, $dgoyj.HTMLDirective).define($f7d8498dd9e90f88$export$f5439a5bc3830f91);\nfunction $f7d8498dd9e90f88$var$createHTML(value, prevString, add, definition = (0, $dgoyj.HTMLDirective).getForInstance(value)) {\n    if (definition.aspected) {\n        const match = $f7d8498dd9e90f88$var$lastAttributeNameRegex.exec(prevString);\n        if (match !== null) (0, $dgoyj.HTMLDirective).assignAspect(value, match[2]);\n    }\n    return value.createHTML(add);\n}\nclass $f7d8498dd9e90f88$export$98f7e629c251afe6 {\n    /**\n     * Creates an instance of ViewTemplate.\n     * @param html - The html representing what this template will instantiate, including placeholders for directives.\n     * @param factories - The directives that will be connected to placeholders in the html.\n     * @param policy - The security policy to use when compiling this template.\n     */ constructor(html, factories = {}, policy){\n        this.policy = policy;\n        this.result = null;\n        this.html = html;\n        this.factories = factories;\n    }\n    /**\n     * @internal\n     */ compile() {\n        if (this.result === null) this.result = (0, $fzuOp.Compiler).compile(this.html, this.factories, this.policy);\n        return this.result;\n    }\n    /**\n     * Creates an HTMLView instance based on this template definition.\n     * @param hostBindingTarget - The element that host behaviors will be bound to.\n     */ create(hostBindingTarget) {\n        return this.compile().createView(hostBindingTarget);\n    }\n    /**\n     * Returns a directive that can inline the template.\n     */ inline() {\n        return new $f7d8498dd9e90f88$export$f5439a5bc3830f91((0, $gAsSx.isString)(this.html) ? this.html : this.html.innerHTML, this.factories);\n    }\n    /**\n     * Sets the DOMPolicy for this template.\n     * @param policy - The policy to associated with this template.\n     * @returns The modified template instance.\n     * @remarks\n     * The DOMPolicy can only be set once for a template and cannot be\n     * set after the template is compiled.\n     */ withPolicy(policy) {\n        if (this.result) throw (0, $c22v8.FAST).error(1208 /* Message.cannotSetTemplatePolicyAfterCompilation */ );\n        if (this.policy) throw (0, $c22v8.FAST).error(1207 /* Message.onlySetTemplatePolicyOnce */ );\n        this.policy = policy;\n        return this;\n    }\n    /**\n     * Creates an HTMLView from this template, binds it to the source, and then appends it to the host.\n     * @param source - The data source to bind the template to.\n     * @param host - The Element where the template will be rendered.\n     * @param hostBindingTarget - An HTML element to target the host bindings at if different from the\n     * host that the template is being attached to.\n     */ render(source, host, hostBindingTarget) {\n        const view = this.create(hostBindingTarget);\n        view.bind(source);\n        view.appendTo(host);\n        return view;\n    }\n    /**\n     * Creates a template based on a set of static strings and dynamic values.\n     * @param strings - The static strings to create the template with.\n     * @param values - The dynamic values to create the template with.\n     * @param policy - The DOMPolicy to associated with the template.\n     * @returns A ViewTemplate.\n     * @remarks\n     * This API should not be used directly under normal circumstances because constructing\n     * a template in this way, if not done properly, can open up the application to XSS\n     * attacks. When using this API, provide a strong DOMPolicy that can properly sanitize\n     * and also be sure to manually sanitize all static strings particularly if they can\n     * come from user input.\n     */ static create(strings, values, policy) {\n        let html = \"\";\n        const factories = Object.create(null);\n        const add = (factory)=>{\n            var _a;\n            const id = (_a = factory.id) !== null && _a !== void 0 ? _a : factory.id = (0, $lMiZS.nextId)();\n            factories[id] = factory;\n            return id;\n        };\n        for(let i = 0, ii = strings.length - 1; i < ii; ++i){\n            const currentString = strings[i];\n            let currentValue = values[i];\n            let definition;\n            html += currentString;\n            if ((0, $gAsSx.isFunction)(currentValue)) currentValue = new (0, $4VObL.HTMLBindingDirective)((0, $2m4Ni.oneWay)(currentValue));\n            else if (currentValue instanceof (0, $7v8l6.Binding)) currentValue = new (0, $4VObL.HTMLBindingDirective)(currentValue);\n            else if (!(definition = (0, $dgoyj.HTMLDirective).getForInstance(currentValue))) {\n                const staticValue = currentValue;\n                currentValue = new (0, $4VObL.HTMLBindingDirective)((0, $91MUc.oneTime)(()=>staticValue));\n            }\n            html += $f7d8498dd9e90f88$var$createHTML(currentValue, currentString, add, definition);\n        }\n        return new $f7d8498dd9e90f88$export$98f7e629c251afe6(html + strings[strings.length - 1], factories, policy);\n    }\n}\n(0, $c22v8.makeSerializationNoop)($f7d8498dd9e90f88$export$98f7e629c251afe6);\nconst $f7d8498dd9e90f88$export$c0bb0b647f701bb5 = (strings, ...values)=>{\n    if (Array.isArray(strings) && Array.isArray(strings.raw)) return $f7d8498dd9e90f88$export$98f7e629c251afe6.create(strings, values);\n    throw (0, $c22v8.FAST).error(1206 /* Message.directCallToHTMLTagNotAllowed */ );\n};\n$f7d8498dd9e90f88$export$c0bb0b647f701bb5.partial = (html)=>{\n    return new $f7d8498dd9e90f88$export$f5439a5bc3830f91(html);\n};\n\n});\nparcelRegister(\"91MUc\", function(module, exports) {\n\n$parcel$export(module.exports, \"oneTime\", () => $692a24aa15eb5881$export$62b137a205137697);\n\nvar $c22v8 = parcelRequire(\"c22v8\");\n\nvar $7v8l6 = parcelRequire(\"7v8l6\");\nclass $692a24aa15eb5881$var$OneTimeBinding extends (0, $7v8l6.Binding) {\n    createObserver() {\n        return this;\n    }\n    bind(controller) {\n        return this.evaluate(controller.source, controller.context);\n    }\n}\n(0, $c22v8.makeSerializationNoop)($692a24aa15eb5881$var$OneTimeBinding);\nfunction $692a24aa15eb5881$export$62b137a205137697(expression, policy) {\n    return new $692a24aa15eb5881$var$OneTimeBinding(expression, policy);\n}\n\n});\n\nparcelRegister(\"4VObL\", function(module, exports) {\n\n$parcel$export(module.exports, \"HTMLBindingDirective\", () => $39736ac061ae0d00$export$c590b280af2e6950);\n\nvar $aWVYn = parcelRequire(\"aWVYn\");\n\nvar $1hYzh = parcelRequire(\"1hYzh\");\n\n\nvar $kyf8E = parcelRequire(\"kyf8E\");\n\nvar $c22v8 = parcelRequire(\"c22v8\");\n\nvar $dgoyj = parcelRequire(\"dgoyj\");\n\nvar $lMiZS = parcelRequire(\"lMiZS\");\n\nvar $TMf7M = parcelRequire(\"TMf7M\");\nfunction $39736ac061ae0d00$var$isContentTemplate(value) {\n    return value.create !== undefined;\n}\nfunction $39736ac061ae0d00$var$updateContent(target, aspect, value, controller) {\n    // If there's no actual value, then this equates to the\n    // empty string for the purposes of content bindings.\n    if (value === null || value === undefined) value = \"\";\n    // If the value has a \"create\" method, then it's a ContentTemplate.\n    if ($39736ac061ae0d00$var$isContentTemplate(value)) {\n        target.textContent = \"\";\n        let view = target.$fastView;\n        // If there's no previous view that we might be able to\n        // reuse then create a new view from the template.\n        if (view === void 0) {\n            if ((0, $aWVYn.isHydratable)(controller) && (0, $aWVYn.isHydratable)(value) && controller.bindingViewBoundaries[this.targetNodeId] !== undefined && controller.hydrationStage !== (0, $TMf7M.HydrationStage).hydrated) {\n                const viewNodes = controller.bindingViewBoundaries[this.targetNodeId];\n                view = value.hydrate(viewNodes.first, viewNodes.last);\n            } else view = value.create();\n        } else // If there is a previous view, but it wasn't created\n        // from the same template as the new value, then we\n        // need to remove the old view if it's still in the DOM\n        // and create a new view from the template.\n        if (target.$fastTemplate !== value) {\n            if (view.isComposed) {\n                view.remove();\n                view.unbind();\n            }\n            view = value.create();\n        }\n        // It's possible that the value is the same as the previous template\n        // and that there's actually no need to compose it.\n        if (!view.isComposed) {\n            view.isComposed = true;\n            view.bind(controller.source, controller.context);\n            view.insertBefore(target);\n            target.$fastView = view;\n            target.$fastTemplate = value;\n        } else if (view.needsBindOnly) {\n            view.needsBindOnly = false;\n            view.bind(controller.source, controller.context);\n        }\n    } else {\n        const view = target.$fastView;\n        // If there is a view and it's currently composed into\n        // the DOM, then we need to remove it.\n        if (view !== void 0 && view.isComposed) {\n            view.isComposed = false;\n            view.remove();\n            if (view.needsBindOnly) view.needsBindOnly = false;\n            else view.unbind();\n        }\n        target.textContent = value;\n    }\n}\nfunction $39736ac061ae0d00$var$updateTokenList(target, aspect, value) {\n    var _a;\n    const lookup = `${this.id}-t`;\n    const state = (_a = target[lookup]) !== null && _a !== void 0 ? _a : target[lookup] = {\n        v: 0,\n        cv: Object.create(null)\n    };\n    const classVersions = state.cv;\n    let version = state.v;\n    const tokenList = target[aspect];\n    // Add the classes, tracking the version at which they were added.\n    if (value !== null && value !== undefined && value.length) {\n        const names = value.split(/\\s+/);\n        for(let i = 0, ii = names.length; i < ii; ++i){\n            const currentName = names[i];\n            if (currentName === \"\") continue;\n            classVersions[currentName] = version;\n            tokenList.add(currentName);\n        }\n    }\n    state.v = version + 1;\n    // If this is the first call to add classes, there's no need to remove old ones.\n    if (version === 0) return;\n    // Remove classes from the previous version.\n    version -= 1;\n    for(const name in classVersions)if (classVersions[name] === version) tokenList.remove(name);\n}\nconst $39736ac061ae0d00$var$sinkLookup = {\n    [(0, $1hYzh.DOMAspect).attribute]: (0, $1hYzh.DOM).setAttribute,\n    [(0, $1hYzh.DOMAspect).booleanAttribute]: (0, $1hYzh.DOM).setBooleanAttribute,\n    [(0, $1hYzh.DOMAspect).property]: (t, a, v)=>t[a] = v,\n    [(0, $1hYzh.DOMAspect).content]: $39736ac061ae0d00$var$updateContent,\n    [(0, $1hYzh.DOMAspect).tokenList]: $39736ac061ae0d00$var$updateTokenList,\n    [(0, $1hYzh.DOMAspect).event]: ()=>void 0\n};\nclass $39736ac061ae0d00$export$c590b280af2e6950 {\n    /**\n     * Creates an instance of HTMLBindingDirective.\n     * @param dataBinding - The binding configuration to apply.\n     */ constructor(dataBinding){\n        this.dataBinding = dataBinding;\n        this.updateTarget = null;\n        /**\n         * The type of aspect to target.\n         */ this.aspectType = (0, $1hYzh.DOMAspect).content;\n    }\n    /**\n     * Creates HTML to be used within a template.\n     * @param add - Can be used to add  behavior factories to a template.\n     */ createHTML(add) {\n        return (0, $lMiZS.Markup).interpolation(add(this));\n    }\n    /**\n     * Creates a behavior.\n     */ createBehavior() {\n        var _a;\n        if (this.updateTarget === null) {\n            const sink = $39736ac061ae0d00$var$sinkLookup[this.aspectType];\n            const policy = (_a = this.dataBinding.policy) !== null && _a !== void 0 ? _a : this.policy;\n            if (!sink) throw (0, $c22v8.FAST).error(1205 /* Message.unsupportedBindingBehavior */ );\n            this.data = `${this.id}-d`;\n            this.updateTarget = policy.protect(this.targetTagName, this.aspectType, this.targetAspect, sink);\n        }\n        return this;\n    }\n    /** @internal */ bind(controller) {\n        var _a;\n        const target = controller.targets[this.targetNodeId];\n        const isHydrating = (0, $aWVYn.isHydratable)(controller) && controller.hydrationStage && controller.hydrationStage !== (0, $TMf7M.HydrationStage).hydrated;\n        switch(this.aspectType){\n            case (0, $1hYzh.DOMAspect).event:\n                target[this.data] = controller;\n                target.addEventListener(this.targetAspect, this, this.dataBinding.options);\n                break;\n            case (0, $1hYzh.DOMAspect).content:\n                controller.onUnbind(this);\n            // intentional fall through\n            default:\n                const observer = (_a = target[this.data]) !== null && _a !== void 0 ? _a : target[this.data] = this.dataBinding.createObserver(this, this);\n                observer.target = target;\n                observer.controller = controller;\n                if (isHydrating && (this.aspectType === (0, $1hYzh.DOMAspect).attribute || this.aspectType === (0, $1hYzh.DOMAspect).booleanAttribute)) {\n                    observer.bind(controller);\n                    break;\n                }\n                this.updateTarget(target, this.targetAspect, observer.bind(controller), controller);\n                break;\n        }\n    }\n    /** @internal */ unbind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        const view = target.$fastView;\n        if (view !== void 0 && view.isComposed) {\n            view.unbind();\n            view.needsBindOnly = true;\n        }\n    }\n    /** @internal */ handleEvent(event) {\n        const controller = event.currentTarget[this.data];\n        if (controller.isBound) {\n            (0, $kyf8E.ExecutionContext).setEvent(event);\n            const result = this.dataBinding.evaluate(controller.source, controller.context);\n            (0, $kyf8E.ExecutionContext).setEvent(null);\n            if (result !== true) event.preventDefault();\n        }\n    }\n    /** @internal */ handleChange(binding, observer) {\n        const target = observer.target;\n        const controller = observer.controller;\n        this.updateTarget(target, this.targetAspect, observer.bind(controller), controller);\n    }\n}\n(0, $dgoyj.HTMLDirective).define($39736ac061ae0d00$export$c590b280af2e6950, {\n    aspected: true\n});\n\n});\nparcelRegister(\"TMf7M\", function(module, exports) {\n\n$parcel$export(module.exports, \"HTMLView\", () => $0a7a8f365b51993e$export$1b0b7079c4551d79);\n$parcel$export(module.exports, \"HydrationStage\", () => $0a7a8f365b51993e$export$a8d753d276b93290);\n\nvar $aWVYn = parcelRequire(\"aWVYn\");\n\nvar $cNDgh = parcelRequire(\"cNDgh\");\n\nvar $kyf8E = parcelRequire(\"kyf8E\");\n\nvar $c22v8 = parcelRequire(\"c22v8\");\nvar $0a7a8f365b51993e$var$_a;\nfunction $0a7a8f365b51993e$var$removeNodeSequence(firstNode, lastNode) {\n    const parent = firstNode.parentNode;\n    let current = firstNode;\n    let next;\n    while(current !== lastNode){\n        next = current.nextSibling;\n        if (!next) throw new Error(`Unmatched first/last child inside \"${lastNode.getRootNode().host.nodeName}\".`);\n        parent.removeChild(current);\n        current = next;\n    }\n    parent.removeChild(lastNode);\n}\nclass $0a7a8f365b51993e$var$DefaultExecutionContext {\n    constructor(){\n        /**\n         * The index of the current item within a repeat context.\n         */ this.index = 0;\n        /**\n         * The length of the current collection within a repeat context.\n         */ this.length = 0;\n    }\n    /**\n     * The current event within an event handler.\n     */ get event() {\n        return (0, $kyf8E.ExecutionContext).getEvent();\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an even index.\n     */ get isEven() {\n        return this.index % 2 === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an odd index.\n     */ get isOdd() {\n        return this.index % 2 !== 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the first item in the collection.\n     */ get isFirst() {\n        return this.index === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is somewhere in the middle of the collection.\n     */ get isInMiddle() {\n        return !this.isFirst && !this.isLast;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the last item in the collection.\n     */ get isLast() {\n        return this.index === this.length - 1;\n    }\n    /**\n     * Returns the typed event detail of a custom event.\n     */ eventDetail() {\n        return this.event.detail;\n    }\n    /**\n     * Returns the typed event target of the event.\n     */ eventTarget() {\n        return this.event.target;\n    }\n}\nclass $0a7a8f365b51993e$export$1b0b7079c4551d79 extends $0a7a8f365b51993e$var$DefaultExecutionContext {\n    /**\n     * Constructs an instance of HTMLView.\n     * @param fragment - The html fragment that contains the nodes for this view.\n     * @param behaviors - The behaviors to be applied to this view.\n     */ constructor(fragment, factories, targets){\n        super();\n        this.fragment = fragment;\n        this.factories = factories;\n        this.targets = targets;\n        this.behaviors = null;\n        this.unbindables = [];\n        /**\n         * The data that the view is bound to.\n         */ this.source = null;\n        /**\n         * Indicates whether the controller is bound.\n         */ this.isBound = false;\n        /**\n         * Indicates how the source's lifetime relates to the controller's lifetime.\n         */ this.sourceLifetime = (0, $kyf8E.SourceLifetime).unknown;\n        /**\n         * The execution context the view is running within.\n         */ this.context = this;\n        this.firstChild = fragment.firstChild;\n        this.lastChild = fragment.lastChild;\n    }\n    /**\n     * Appends the view's DOM nodes to the referenced node.\n     * @param node - The parent node to append the view's DOM nodes to.\n     */ appendTo(node) {\n        node.appendChild(this.fragment);\n    }\n    /**\n     * Inserts the view's DOM nodes before the referenced node.\n     * @param node - The node to insert the view's DOM before.\n     */ insertBefore(node) {\n        if (this.fragment.hasChildNodes()) node.parentNode.insertBefore(this.fragment, node);\n        else {\n            const end = this.lastChild;\n            if (node.previousSibling === end) return;\n            const parentNode = node.parentNode;\n            let current = this.firstChild;\n            let next;\n            while(current !== end){\n                next = current.nextSibling;\n                parentNode.insertBefore(current, node);\n                current = next;\n            }\n            parentNode.insertBefore(end, node);\n        }\n    }\n    /**\n     * Removes the view's DOM nodes.\n     * The nodes are not disposed and the view can later be re-inserted.\n     */ remove() {\n        const fragment = this.fragment;\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while(current !== end){\n            next = current.nextSibling;\n            fragment.appendChild(current);\n            current = next;\n        }\n        fragment.appendChild(end);\n    }\n    /**\n     * Removes the view and unbinds its behaviors, disposing of DOM nodes afterward.\n     * Once a view has been disposed, it cannot be inserted or bound again.\n     */ dispose() {\n        $0a7a8f365b51993e$var$removeNodeSequence(this.firstChild, this.lastChild);\n        this.unbind();\n    }\n    onUnbind(behavior) {\n        this.unbindables.push(behavior);\n    }\n    /**\n     * Binds a view's behaviors to its binding source.\n     * @param source - The binding source for the view's binding behaviors.\n     * @param context - The execution context to run the behaviors within.\n     */ bind(source, context = this) {\n        if (this.source === source) return;\n        let behaviors = this.behaviors;\n        if (behaviors === null) {\n            this.source = source;\n            this.context = context;\n            this.behaviors = behaviors = new Array(this.factories.length);\n            const factories = this.factories;\n            for(let i = 0, ii = factories.length; i < ii; ++i){\n                const behavior = factories[i].createBehavior();\n                behavior.bind(this);\n                behaviors[i] = behavior;\n            }\n        } else {\n            if (this.source !== null) this.evaluateUnbindables();\n            this.isBound = false;\n            this.source = source;\n            this.context = context;\n            for(let i = 0, ii = behaviors.length; i < ii; ++i)behaviors[i].bind(this);\n        }\n        this.isBound = true;\n    }\n    /**\n     * Unbinds a view's behaviors from its binding source.\n     */ unbind() {\n        if (!this.isBound || this.source === null) return;\n        this.evaluateUnbindables();\n        this.source = null;\n        this.context = this;\n        this.isBound = false;\n    }\n    evaluateUnbindables() {\n        const unbindables = this.unbindables;\n        for(let i = 0, ii = unbindables.length; i < ii; ++i)unbindables[i].unbind(this);\n        unbindables.length = 0;\n    }\n    /**\n     * Efficiently disposes of a contiguous range of synthetic view instances.\n     * @param views - A contiguous range of views to be disposed.\n     */ static disposeContiguousBatch(views) {\n        if (views.length === 0) return;\n        $0a7a8f365b51993e$var$removeNodeSequence(views[0].firstChild, views[views.length - 1].lastChild);\n        for(let i = 0, ii = views.length; i < ii; ++i)views[i].unbind();\n    }\n}\n(0, $c22v8.makeSerializationNoop)($0a7a8f365b51993e$export$1b0b7079c4551d79);\n(0, $kyf8E.Observable).defineProperty($0a7a8f365b51993e$export$1b0b7079c4551d79.prototype, \"index\");\n(0, $kyf8E.Observable).defineProperty($0a7a8f365b51993e$export$1b0b7079c4551d79.prototype, \"length\");\nconst $0a7a8f365b51993e$export$a8d753d276b93290 = {\n    unhydrated: \"unhydrated\",\n    hydrating: \"hydrating\",\n    hydrated: \"hydrated\"\n};\nclass $0a7a8f365b51993e$export$ba65c3a861c05521 extends Error {\n    constructor(/**\n     * The error message\n     */ message, /**\n     * The factory that was unable to be bound\n     */ factory, /**\n     * A DocumentFragment containing a clone of the\n     * view's Nodes.\n     */ fragment, /**\n     * String representation of the HTML in the template that\n     * threw the binding error.\n     */ templateString){\n        super(message);\n        this.factory = factory;\n        this.fragment = fragment;\n        this.templateString = templateString;\n    }\n}\nclass $0a7a8f365b51993e$export$1069297ec0b1f696 extends $0a7a8f365b51993e$var$DefaultExecutionContext {\n    constructor(firstChild, lastChild, sourceTemplate, hostBindingTarget){\n        super();\n        this.firstChild = firstChild;\n        this.lastChild = lastChild;\n        this.sourceTemplate = sourceTemplate;\n        this.hostBindingTarget = hostBindingTarget;\n        this[$0a7a8f365b51993e$var$_a] = (0, $aWVYn.Hydratable);\n        this.context = this;\n        this.source = null;\n        this.isBound = false;\n        this.sourceLifetime = (0, $kyf8E.SourceLifetime).unknown;\n        this.unbindables = [];\n        this.fragment = null;\n        this.behaviors = null;\n        this._hydrationStage = $0a7a8f365b51993e$export$a8d753d276b93290.unhydrated;\n        this._bindingViewBoundaries = {};\n        this._targets = {};\n        this.factories = sourceTemplate.compile().factories;\n    }\n    get hydrationStage() {\n        return this._hydrationStage;\n    }\n    get targets() {\n        return this._targets;\n    }\n    get bindingViewBoundaries() {\n        return this._bindingViewBoundaries;\n    }\n    /**\n     * no-op. Hydrated views are don't need to be moved from a documentFragment\n     * to the target node.\n     */ insertBefore(node) {\n        // No-op in cases where this is called before the view is removed,\n        // because the nodes will already be in the document and just need hydrating.\n        if (this.fragment === null) return;\n        if (this.fragment.hasChildNodes()) node.parentNode.insertBefore(this.fragment, node);\n        else {\n            const end = this.lastChild;\n            if (node.previousSibling === end) return;\n            const parentNode = node.parentNode;\n            let current = this.firstChild;\n            let next;\n            while(current !== end){\n                next = current.nextSibling;\n                parentNode.insertBefore(current, node);\n                current = next;\n            }\n            parentNode.insertBefore(end, node);\n        }\n    }\n    /**\n     * Appends the view to a node. In cases where this is called before the\n     * view has been removed, the method will no-op.\n     * @param node - the node to append the view to.\n     */ appendTo(node) {\n        if (this.fragment !== null) node.appendChild(this.fragment);\n    }\n    remove() {\n        const fragment = this.fragment || (this.fragment = document.createDocumentFragment());\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while(current !== end){\n            next = current.nextSibling;\n            if (!next) throw new Error(`Unmatched first/last child inside \"${end.getRootNode().host.nodeName}\".`);\n            fragment.appendChild(current);\n            current = next;\n        }\n        fragment.appendChild(end);\n    }\n    bind(source, context = this) {\n        var _b, _c;\n        if (this.hydrationStage !== $0a7a8f365b51993e$export$a8d753d276b93290.hydrated) this._hydrationStage = $0a7a8f365b51993e$export$a8d753d276b93290.hydrating;\n        if (this.source === source) return;\n        let behaviors = this.behaviors;\n        if (behaviors === null) {\n            this.source = source;\n            this.context = context;\n            try {\n                const { targets: targets, boundaries: boundaries } = (0, $cNDgh.buildViewBindingTargets)(this.firstChild, this.lastChild, this.factories);\n                this._targets = targets;\n                this._bindingViewBoundaries = boundaries;\n            } catch (error) {\n                if (error instanceof (0, $cNDgh.HydrationTargetElementError)) {\n                    let templateString = this.sourceTemplate.html;\n                    if (typeof templateString !== \"string\") templateString = templateString.innerHTML;\n                    error.templateString = templateString;\n                }\n                throw error;\n            }\n            this.behaviors = behaviors = new Array(this.factories.length);\n            const factories = this.factories;\n            for(let i = 0, ii = factories.length; i < ii; ++i){\n                const factory = factories[i];\n                if (factory.targetNodeId === \"h\" && this.hostBindingTarget) (0, $cNDgh.targetFactory)(factory, this.hostBindingTarget, this._targets);\n                // If the binding has been targeted or it is a host binding and the view has a hostBindingTarget\n                if (factory.targetNodeId in this.targets) {\n                    const behavior = factory.createBehavior();\n                    behavior.bind(this);\n                    behaviors[i] = behavior;\n                } else {\n                    let templateString = this.sourceTemplate.html;\n                    if (typeof templateString !== \"string\") templateString = templateString.innerHTML;\n                    throw new $0a7a8f365b51993e$export$ba65c3a861c05521(`HydrationView was unable to successfully target bindings inside \"${(_c = ((_b = this.firstChild) === null || _b === void 0 ? void 0 : _b.getRootNode()).host) === null || _c === void 0 ? void 0 : _c.nodeName}\".`, factory, (0, $cNDgh.createRangeForNodes)(this.firstChild, this.lastChild).cloneContents(), templateString);\n                }\n            }\n        } else {\n            if (this.source !== null) this.evaluateUnbindables();\n            this.isBound = false;\n            this.source = source;\n            this.context = context;\n            for(let i = 0, ii = behaviors.length; i < ii; ++i)behaviors[i].bind(this);\n        }\n        this.isBound = true;\n        this._hydrationStage = $0a7a8f365b51993e$export$a8d753d276b93290.hydrated;\n    }\n    unbind() {\n        if (!this.isBound || this.source === null) return;\n        this.evaluateUnbindables();\n        this.source = null;\n        this.context = this;\n        this.isBound = false;\n    }\n    /**\n     * Removes the view and unbinds its behaviors, disposing of DOM nodes afterward.\n     * Once a view has been disposed, it cannot be inserted or bound again.\n     */ dispose() {\n        $0a7a8f365b51993e$var$removeNodeSequence(this.firstChild, this.lastChild);\n        this.unbind();\n    }\n    onUnbind(behavior) {\n        this.unbindables.push(behavior);\n    }\n    evaluateUnbindables() {\n        const unbindables = this.unbindables;\n        for(let i = 0, ii = unbindables.length; i < ii; ++i)unbindables[i].unbind(this);\n        unbindables.length = 0;\n    }\n}\n$0a7a8f365b51993e$var$_a = (0, $aWVYn.Hydratable);\n(0, $c22v8.makeSerializationNoop)($0a7a8f365b51993e$export$1069297ec0b1f696);\n\n});\nparcelRegister(\"cNDgh\", function(module, exports) {\n\n$parcel$export(module.exports, \"HydrationTargetElementError\", () => $02679f08f8c3af0e$export$431d786e0fa03e5f);\n$parcel$export(module.exports, \"createRangeForNodes\", () => $02679f08f8c3af0e$export$33c30cbe164cb415);\n$parcel$export(module.exports, \"buildViewBindingTargets\", () => $02679f08f8c3af0e$export$26216c5b533261dd);\n$parcel$export(module.exports, \"targetFactory\", () => $02679f08f8c3af0e$export$814fd3cda928c189);\n\nvar $aWVYn = parcelRequire(\"aWVYn\");\nclass $02679f08f8c3af0e$export$431d786e0fa03e5f extends Error {\n    constructor(/**\n     * The error message\n     */ message, /**\n     * The Compiled View Behavior Factories that belong to the view.\n     */ factories, /**\n     * The node to target factory.\n     */ node){\n        super(message);\n        this.factories = factories;\n        this.node = node;\n    }\n}\nfunction $02679f08f8c3af0e$var$isComment(node) {\n    return node.nodeType === Node.COMMENT_NODE;\n}\nfunction $02679f08f8c3af0e$var$isText(node) {\n    return node.nodeType === Node.TEXT_NODE;\n}\nfunction $02679f08f8c3af0e$export$33c30cbe164cb415(first, last) {\n    const range = document.createRange();\n    range.setStart(first, 0);\n    // The lastIndex should be inclusive of the end of the lastChild. Obtain offset based\n    // on usageNotes:  https://developer.mozilla.org/en-US/docs/Web/API/Range/setEnd#usage_notes\n    range.setEnd(last, $02679f08f8c3af0e$var$isComment(last) || $02679f08f8c3af0e$var$isText(last) ? last.data.length : last.childNodes.length);\n    return range;\n}\nfunction $02679f08f8c3af0e$var$isShadowRoot(node) {\n    return node instanceof DocumentFragment && \"mode\" in node;\n}\nfunction $02679f08f8c3af0e$export$26216c5b533261dd(firstNode, lastNode, factories) {\n    const range = $02679f08f8c3af0e$export$33c30cbe164cb415(firstNode, lastNode);\n    const treeRoot = range.commonAncestorContainer;\n    const walker = document.createTreeWalker(treeRoot, NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_COMMENT + NodeFilter.SHOW_TEXT, {\n        acceptNode (node) {\n            return range.comparePoint(node, 0) === 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;\n        }\n    });\n    const targets = {};\n    const boundaries = {};\n    let node = walker.currentNode = firstNode;\n    while(node !== null){\n        switch(node.nodeType){\n            case Node.ELEMENT_NODE:\n                $02679f08f8c3af0e$var$targetElement(node, factories, targets);\n                break;\n            case Node.COMMENT_NODE:\n                $02679f08f8c3af0e$var$targetComment(node, walker, factories, targets, boundaries);\n                break;\n        }\n        node = walker.nextNode();\n    }\n    range.detach();\n    return {\n        targets: targets,\n        boundaries: boundaries\n    };\n}\nfunction $02679f08f8c3af0e$var$targetElement(node, factories, targets) {\n    // Check for attributes and map any factories.\n    const attrFactoryIds = (0, $aWVYn.HydrationMarkup).parseAttributeBinding(node);\n    if (attrFactoryIds !== null) {\n        for (const id of attrFactoryIds){\n            if (!factories[id]) throw new $02679f08f8c3af0e$export$431d786e0fa03e5f(`HydrationView was unable to successfully target factory on ${node.nodeName} inside ${node.getRootNode().host.nodeName}. This likely indicates a template mismatch between SSR rendering and hydration.`, factories, node);\n            $02679f08f8c3af0e$export$814fd3cda928c189(factories[id], node, targets);\n        }\n        node.removeAttribute((0, $aWVYn.HydrationMarkup).attributeMarkerName);\n    }\n}\nfunction $02679f08f8c3af0e$var$targetComment(node, walker, factories, targets, boundaries) {\n    if ((0, $aWVYn.HydrationMarkup).isElementBoundaryStartMarker(node)) {\n        $02679f08f8c3af0e$var$skipToElementBoundaryEndMarker(node, walker);\n        return;\n    }\n    if ((0, $aWVYn.HydrationMarkup).isContentBindingStartMarker(node.data)) {\n        const parsed = (0, $aWVYn.HydrationMarkup).parseContentBindingStartMarker(node.data);\n        if (parsed === null) return;\n        const [index, id] = parsed;\n        const factory = factories[index];\n        const nodes = [];\n        let current = walker.nextSibling();\n        node.data = \"\";\n        const first = current;\n        // Search for the binding end marker that closes the binding.\n        while(current !== null){\n            if ($02679f08f8c3af0e$var$isComment(current)) {\n                const parsed = (0, $aWVYn.HydrationMarkup).parseContentBindingEndMarker(current.data);\n                if (parsed && parsed[1] === id) break;\n            }\n            nodes.push(current);\n            current = walker.nextSibling();\n        }\n        if (current === null) {\n            const root = node.getRootNode();\n            throw new Error(`Error hydrating Comment node inside \"${$02679f08f8c3af0e$var$isShadowRoot(root) ? root.host.nodeName : root.nodeName}\".`);\n        }\n        current.data = \"\";\n        if (nodes.length === 1 && $02679f08f8c3af0e$var$isText(nodes[0])) $02679f08f8c3af0e$export$814fd3cda928c189(factory, nodes[0], targets);\n        else {\n            // If current === first, it means there is no content in\n            // the view. This happens when a `when` directive evaluates false,\n            // or whenever a content binding returns null or undefined.\n            // In that case, there will never be any content\n            // to hydrate and Binding can simply create a HTMLView\n            // whenever it needs to.\n            if (current !== first && current.previousSibling !== null) boundaries[factory.targetNodeId] = {\n                first: first,\n                last: current.previousSibling\n            };\n            // Binding evaluates to null / undefined or a template.\n            // If binding revaluates to string, it will replace content in target\n            // So we always insert a text node to ensure that\n            // text content binding will be written to this text node instead of comment\n            const dummyTextNode = current.parentNode.insertBefore(document.createTextNode(\"\"), current);\n            $02679f08f8c3af0e$export$814fd3cda928c189(factory, dummyTextNode, targets);\n        }\n    }\n}\n/**\n * Moves TreeWalker to element boundary end marker\n * @param node - element boundary start marker node\n * @param walker - tree walker\n */ function $02679f08f8c3af0e$var$skipToElementBoundaryEndMarker(node, walker) {\n    const id = (0, $aWVYn.HydrationMarkup).parseElementBoundaryStartMarker(node.data);\n    let current = walker.nextSibling();\n    while(current !== null){\n        if ($02679f08f8c3af0e$var$isComment(current)) {\n            const parsed = (0, $aWVYn.HydrationMarkup).parseElementBoundaryEndMarker(current.data);\n            if (parsed && parsed === id) break;\n        }\n        current = walker.nextSibling();\n    }\n}\nfunction $02679f08f8c3af0e$export$814fd3cda928c189(factory, node, targets) {\n    if (factory.targetNodeId === undefined) // Dev error, this shouldn't ever be thrown\n    throw new Error(\"Factory could not be target to the node\");\n    targets[factory.targetNodeId] = node;\n}\n\n});\n\n\n\nparcelRegister(\"fzuOp\", function(module, exports) {\n\n$parcel$export(module.exports, \"Compiler\", () => $b562068d8ce9f5d0$export$3a6335acfcf707c9);\n\nvar $gAsSx = parcelRequire(\"gAsSx\");\n\nvar $c22v8 = parcelRequire(\"c22v8\");\n\nvar $1hYzh = parcelRequire(\"1hYzh\");\n\nvar $91MUc = parcelRequire(\"91MUc\");\n\nvar $2m4Ni = parcelRequire(\"2m4Ni\");\n\nvar $lMiZS = parcelRequire(\"lMiZS\");\n\nvar $4VObL = parcelRequire(\"4VObL\");\n\nvar $dgoyj = parcelRequire(\"dgoyj\");\n\nvar $TMf7M = parcelRequire(\"TMf7M\");\nconst $b562068d8ce9f5d0$var$targetIdFrom = (parentId, nodeIndex)=>`${parentId}.${nodeIndex}`;\nconst $b562068d8ce9f5d0$var$descriptorCache = {};\n// used to prevent creating lots of objects just to track node and index while compiling\nconst $b562068d8ce9f5d0$var$next = {\n    index: 0,\n    node: null\n};\nfunction $b562068d8ce9f5d0$var$tryWarn(name) {\n    if (!name.startsWith(\"fast-\")) (0, $c22v8.FAST).warn(1204 /* Message.hostBindingWithoutHost */ , {\n        name: name\n    });\n}\nconst $b562068d8ce9f5d0$var$warningHost = new Proxy(document.createElement(\"div\"), {\n    get (target, property) {\n        $b562068d8ce9f5d0$var$tryWarn(property);\n        const value = Reflect.get(target, property);\n        return (0, $gAsSx.isFunction)(value) ? value.bind(target) : value;\n    },\n    set (target, property, value) {\n        $b562068d8ce9f5d0$var$tryWarn(property);\n        return Reflect.set(target, property, value);\n    }\n});\nclass $b562068d8ce9f5d0$var$CompilationContext {\n    constructor(fragment, directives, policy){\n        this.fragment = fragment;\n        this.directives = directives;\n        this.policy = policy;\n        this.proto = null;\n        this.nodeIds = new Set();\n        this.descriptors = {};\n        this.factories = [];\n    }\n    addFactory(factory, parentId, nodeId, targetIndex, tagName) {\n        var _a, _b;\n        if (!this.nodeIds.has(nodeId)) {\n            this.nodeIds.add(nodeId);\n            this.addTargetDescriptor(parentId, nodeId, targetIndex);\n        }\n        factory.id = (_a = factory.id) !== null && _a !== void 0 ? _a : (0, $lMiZS.nextId)();\n        factory.targetNodeId = nodeId;\n        factory.targetTagName = tagName;\n        factory.policy = (_b = factory.policy) !== null && _b !== void 0 ? _b : this.policy;\n        this.factories.push(factory);\n    }\n    freeze() {\n        this.proto = Object.create(null, this.descriptors);\n        return this;\n    }\n    addTargetDescriptor(parentId, targetId, targetIndex) {\n        const descriptors = this.descriptors;\n        if (targetId === \"r\" || // root\n        targetId === \"h\" || // host\n        descriptors[targetId]) return;\n        if (!descriptors[parentId]) {\n            const index = parentId.lastIndexOf(\".\");\n            const grandparentId = parentId.substring(0, index);\n            const childIndex = parseInt(parentId.substring(index + 1));\n            this.addTargetDescriptor(grandparentId, parentId, childIndex);\n        }\n        let descriptor = $b562068d8ce9f5d0$var$descriptorCache[targetId];\n        if (!descriptor) {\n            const field = `_${targetId}`;\n            $b562068d8ce9f5d0$var$descriptorCache[targetId] = descriptor = {\n                get () {\n                    var _a;\n                    return (_a = this[field]) !== null && _a !== void 0 ? _a : this[field] = this[parentId].childNodes[targetIndex];\n                }\n            };\n        }\n        descriptors[targetId] = descriptor;\n    }\n    createView(hostBindingTarget) {\n        const fragment = this.fragment.cloneNode(true);\n        const targets = Object.create(this.proto);\n        targets.r = fragment;\n        targets.h = hostBindingTarget !== null && hostBindingTarget !== void 0 ? hostBindingTarget : $b562068d8ce9f5d0$var$warningHost;\n        for (const id of this.nodeIds)targets[id]; // trigger locator\n        return new (0, $TMf7M.HTMLView)(fragment, this.factories, targets);\n    }\n}\nfunction $b562068d8ce9f5d0$var$compileAttributes(context, parentId, node, nodeId, nodeIndex, includeBasicValues = false) {\n    const attributes = node.attributes;\n    const directives = context.directives;\n    for(let i = 0, ii = attributes.length; i < ii; ++i){\n        const attr = attributes[i];\n        const attrValue = attr.value;\n        const parseResult = (0, $lMiZS.Parser).parse(attrValue, directives);\n        let result = null;\n        if (parseResult === null) {\n            if (includeBasicValues) {\n                result = new (0, $4VObL.HTMLBindingDirective)((0, $91MUc.oneTime)(()=>attrValue, context.policy));\n                (0, $dgoyj.HTMLDirective).assignAspect(result, attr.name);\n            }\n        } else /* eslint-disable-next-line @typescript-eslint/no-use-before-define */ result = $b562068d8ce9f5d0$export$3a6335acfcf707c9.aggregate(parseResult, context.policy);\n        if (result !== null) {\n            node.removeAttributeNode(attr);\n            i--;\n            ii--;\n            context.addFactory(result, parentId, nodeId, nodeIndex, node.tagName);\n        }\n    }\n}\nfunction $b562068d8ce9f5d0$var$compileContent(context, node, parentId, nodeId, nodeIndex) {\n    const parseResult = (0, $lMiZS.Parser).parse(node.textContent, context.directives);\n    if (parseResult === null) {\n        $b562068d8ce9f5d0$var$next.node = node.nextSibling;\n        $b562068d8ce9f5d0$var$next.index = nodeIndex + 1;\n        return $b562068d8ce9f5d0$var$next;\n    }\n    let currentNode;\n    let lastNode = currentNode = node;\n    for(let i = 0, ii = parseResult.length; i < ii; ++i){\n        const currentPart = parseResult[i];\n        if (i !== 0) {\n            nodeIndex++;\n            nodeId = $b562068d8ce9f5d0$var$targetIdFrom(parentId, nodeIndex);\n            currentNode = lastNode.parentNode.insertBefore(document.createTextNode(\"\"), lastNode.nextSibling);\n        }\n        if ((0, $gAsSx.isString)(currentPart)) currentNode.textContent = currentPart;\n        else {\n            currentNode.textContent = \" \";\n            (0, $dgoyj.HTMLDirective).assignAspect(currentPart);\n            context.addFactory(currentPart, parentId, nodeId, nodeIndex, null);\n        }\n        lastNode = currentNode;\n    }\n    $b562068d8ce9f5d0$var$next.index = nodeIndex + 1;\n    $b562068d8ce9f5d0$var$next.node = lastNode.nextSibling;\n    return $b562068d8ce9f5d0$var$next;\n}\nfunction $b562068d8ce9f5d0$var$compileChildren(context, parent, parentId) {\n    let nodeIndex = 0;\n    let childNode = parent.firstChild;\n    while(childNode){\n        /* eslint-disable-next-line @typescript-eslint/no-use-before-define */ const result = $b562068d8ce9f5d0$var$compileNode(context, parentId, childNode, nodeIndex);\n        childNode = result.node;\n        nodeIndex = result.index;\n    }\n}\nfunction $b562068d8ce9f5d0$var$compileNode(context, parentId, node, nodeIndex) {\n    const nodeId = $b562068d8ce9f5d0$var$targetIdFrom(parentId, nodeIndex);\n    switch(node.nodeType){\n        case 1:\n            $b562068d8ce9f5d0$var$compileAttributes(context, parentId, node, nodeId, nodeIndex);\n            $b562068d8ce9f5d0$var$compileChildren(context, node, nodeId);\n            break;\n        case 3:\n            return $b562068d8ce9f5d0$var$compileContent(context, node, parentId, nodeId, nodeIndex);\n        case 8:\n            const parts = (0, $lMiZS.Parser).parse(node.data, context.directives);\n            if (parts !== null) context.addFactory(/* eslint-disable-next-line @typescript-eslint/no-use-before-define */ $b562068d8ce9f5d0$export$3a6335acfcf707c9.aggregate(parts), parentId, nodeId, nodeIndex, null);\n            break;\n    }\n    $b562068d8ce9f5d0$var$next.index = nodeIndex + 1;\n    $b562068d8ce9f5d0$var$next.node = node.nextSibling;\n    return $b562068d8ce9f5d0$var$next;\n}\nfunction $b562068d8ce9f5d0$var$isMarker(node, directives) {\n    return node && node.nodeType == 8 && (0, $lMiZS.Parser).parse(node.data, directives) !== null;\n}\nconst $b562068d8ce9f5d0$var$templateTag = \"TEMPLATE\";\nconst $b562068d8ce9f5d0$export$3a6335acfcf707c9 = {\n    /**\n     * Compiles a template and associated directives into a compilation\n     * result which can be used to create views.\n     * @param html - The html string or template element to compile.\n     * @param factories - The behavior factories referenced by the template.\n     * @param policy - The security policy to compile the html with.\n     * @remarks\n     * The template that is provided for compilation is altered in-place\n     * and cannot be compiled again. If the original template must be preserved,\n     * it is recommended that you clone the original and pass the clone to this API.\n     * @public\n     */ compile (html, factories, policy = (0, $1hYzh.DOM).policy) {\n        let template;\n        if ((0, $gAsSx.isString)(html)) {\n            template = document.createElement($b562068d8ce9f5d0$var$templateTag);\n            template.innerHTML = policy.createHTML(html);\n            const fec = template.content.firstElementChild;\n            if (fec !== null && fec.tagName === $b562068d8ce9f5d0$var$templateTag) template = fec;\n        } else template = html;\n        if (!template.content.firstChild && !template.content.lastChild) template.content.appendChild(document.createComment(\"\"));\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1111864\n        const fragment = document.adoptNode(template.content);\n        const context = new $b562068d8ce9f5d0$var$CompilationContext(fragment, factories, policy);\n        $b562068d8ce9f5d0$var$compileAttributes(context, \"\", template, /* host */ \"h\", 0, true);\n        if (// If the first node in a fragment is a marker, that means it's an unstable first node,\n        // because something like a when, repeat, etc. could add nodes before the marker.\n        // To mitigate this, we insert a stable first node. However, if we insert a node,\n        // that will alter the result of the TreeWalker. So, we also need to offset the target index.\n        $b562068d8ce9f5d0$var$isMarker(fragment.firstChild, factories) || // Or if there is only one node and a directive, it means the template's content\n        // is *only* the directive. In that case, HTMLView.dispose() misses any nodes inserted by\n        // the directive. Inserting a new node ensures proper disposal of nodes added by the directive.\n        fragment.childNodes.length === 1 && Object.keys(factories).length > 0) fragment.insertBefore(document.createComment(\"\"), fragment.firstChild);\n        $b562068d8ce9f5d0$var$compileChildren(context, fragment, /* root */ \"r\");\n        $b562068d8ce9f5d0$var$next.node = null; // prevent leaks\n        return context.freeze();\n    },\n    /**\n     * Sets the default compilation strategy that will be used by the ViewTemplate whenever\n     * it needs to compile a view preprocessed with the html template function.\n     * @param strategy - The compilation strategy to use when compiling templates.\n     */ setDefaultStrategy (strategy) {\n        this.compile = strategy;\n    },\n    /**\n     * Aggregates an array of strings and directives into a single directive.\n     * @param parts - A heterogeneous array of static strings interspersed with\n     * directives.\n     * @param policy - The security policy to use with the aggregated bindings.\n     * @returns A single inline directive that aggregates the behavior of all the parts.\n     */ aggregate (parts, policy = (0, $1hYzh.DOM).policy) {\n        if (parts.length === 1) return parts[0];\n        let sourceAspect;\n        let isVolatile = false;\n        let bindingPolicy = void 0;\n        const partCount = parts.length;\n        const finalParts = parts.map((x)=>{\n            if ((0, $gAsSx.isString)(x)) return ()=>x;\n            sourceAspect = x.sourceAspect || sourceAspect;\n            isVolatile = isVolatile || x.dataBinding.isVolatile;\n            bindingPolicy = bindingPolicy || x.dataBinding.policy;\n            return x.dataBinding.evaluate;\n        });\n        const expression = (scope, context)=>{\n            let output = \"\";\n            for(let i = 0; i < partCount; ++i)output += finalParts[i](scope, context);\n            return output;\n        };\n        const directive = new (0, $4VObL.HTMLBindingDirective)((0, $2m4Ni.oneWay)(expression, bindingPolicy !== null && bindingPolicy !== void 0 ? bindingPolicy : policy, isVolatile));\n        (0, $dgoyj.HTMLDirective).assignAspect(directive, sourceAspect);\n        return directive;\n    }\n};\n\n});\n\n\nparcelRegister(\"dLl2P\", function(module, exports) {\n\n$parcel$export(module.exports, \"repeat\", () => $a04ffd294f1ed5e3$export$76d90c956114f2c2);\n\nvar $aWVYn = parcelRequire(\"aWVYn\");\n\nvar $1S7Vh = parcelRequire(\"1S7Vh\");\n\nvar $kyf8E = parcelRequire(\"kyf8E\");\n\nvar $c22v8 = parcelRequire(\"c22v8\");\n\nvar $fOqr6 = parcelRequire(\"fOqr6\");\n\nvar $dgoyj = parcelRequire(\"dgoyj\");\n\nvar $lMiZS = parcelRequire(\"lMiZS\");\n\nvar $TMf7M = parcelRequire(\"TMf7M\");\nconst $a04ffd294f1ed5e3$var$defaultRepeatOptions = Object.freeze({\n    positioning: false,\n    recycle: true\n});\nfunction $a04ffd294f1ed5e3$var$bindWithoutPositioning(view, items, index, controller) {\n    view.context.parent = controller.source;\n    view.context.parentContext = controller.context;\n    view.bind(items[index]);\n}\nfunction $a04ffd294f1ed5e3$var$bindWithPositioning(view, items, index, controller) {\n    view.context.parent = controller.source;\n    view.context.parentContext = controller.context;\n    view.context.length = items.length;\n    view.context.index = index;\n    view.bind(items[index]);\n}\nfunction $a04ffd294f1ed5e3$var$isCommentNode(node) {\n    return node.nodeType === Node.COMMENT_NODE;\n}\nclass $a04ffd294f1ed5e3$export$be1769e3b8cade2 extends Error {\n    constructor(/**\n     * The error message\n     */ message, propertyBag){\n        super(message);\n        this.propertyBag = propertyBag;\n    }\n}\nclass $a04ffd294f1ed5e3$export$9320ef0c85148109 {\n    /**\n     * Creates an instance of RepeatBehavior.\n     * @param location - The location in the DOM to render the repeat.\n     * @param dataBinding - The array to render.\n     * @param isItemsBindingVolatile - Indicates whether the items binding has volatile dependencies.\n     * @param templateBinding - The template to render for each item.\n     * @param isTemplateBindingVolatile - Indicates whether the template binding has volatile dependencies.\n     * @param options - Options used to turn on special repeat features.\n     */ constructor(directive){\n        this.directive = directive;\n        this.items = null;\n        this.itemsObserver = null;\n        this.bindView = $a04ffd294f1ed5e3$var$bindWithoutPositioning;\n        /** @internal */ this.views = [];\n        this.itemsBindingObserver = directive.dataBinding.createObserver(this, directive);\n        this.templateBindingObserver = directive.templateBinding.createObserver(this, directive);\n        if (directive.options.positioning) this.bindView = $a04ffd294f1ed5e3$var$bindWithPositioning;\n    }\n    /**\n     * Bind this behavior.\n     * @param controller - The view controller that manages the lifecycle of this behavior.\n     */ bind(controller) {\n        this.location = controller.targets[this.directive.targetNodeId];\n        this.controller = controller;\n        this.items = this.itemsBindingObserver.bind(controller);\n        this.template = this.templateBindingObserver.bind(controller);\n        this.observeItems(true);\n        if ((0, $aWVYn.isHydratable)(this.template) && (0, $aWVYn.isHydratable)(controller) && controller.hydrationStage !== (0, $TMf7M.HydrationStage).hydrated) this.hydrateViews(this.template);\n        else this.refreshAllViews();\n        controller.onUnbind(this);\n    }\n    /**\n     * Unbinds this behavior.\n     */ unbind() {\n        if (this.itemsObserver !== null) this.itemsObserver.unsubscribe(this);\n        this.unbindAllViews();\n    }\n    /**\n     * Handles changes in the array, its items, and the repeat template.\n     * @param source - The source of the change.\n     * @param args - The details about what was changed.\n     */ handleChange(source, args) {\n        if (args === this.itemsBindingObserver) {\n            this.items = this.itemsBindingObserver.bind(this.controller);\n            this.observeItems();\n            this.refreshAllViews();\n        } else if (args === this.templateBindingObserver) {\n            this.template = this.templateBindingObserver.bind(this.controller);\n            this.refreshAllViews(true);\n        } else if (!args[0]) return;\n        else if (args[0].reset) this.refreshAllViews();\n        else this.updateViews(args);\n    }\n    observeItems(force = false) {\n        if (!this.items) {\n            this.items = (0, $c22v8.emptyArray);\n            return;\n        }\n        const oldObserver = this.itemsObserver;\n        const newObserver = this.itemsObserver = (0, $kyf8E.Observable).getNotifier(this.items);\n        const hasNewObserver = oldObserver !== newObserver;\n        if (hasNewObserver && oldObserver !== null) oldObserver.unsubscribe(this);\n        if (hasNewObserver || force) newObserver.subscribe(this);\n    }\n    updateViews(splices) {\n        const views = this.views;\n        const bindView = this.bindView;\n        const items = this.items;\n        const template = this.template;\n        const controller = this.controller;\n        const recycle = this.directive.options.recycle;\n        const leftoverViews = [];\n        let leftoverIndex = 0;\n        let availableViews = 0;\n        for(let i = 0, ii = splices.length; i < ii; ++i){\n            const splice = splices[i];\n            const removed = splice.removed;\n            let removeIndex = 0;\n            let addIndex = splice.index;\n            const end = addIndex + splice.addedCount;\n            const removedViews = views.splice(splice.index, removed.length);\n            const totalAvailableViews = availableViews = leftoverViews.length + removedViews.length;\n            for(; addIndex < end; ++addIndex){\n                const neighbor = views[addIndex];\n                const location = neighbor ? neighbor.firstChild : this.location;\n                let view;\n                if (recycle && availableViews > 0) {\n                    if (removeIndex <= totalAvailableViews && removedViews.length > 0) {\n                        view = removedViews[removeIndex];\n                        removeIndex++;\n                    } else {\n                        view = leftoverViews[leftoverIndex];\n                        leftoverIndex++;\n                    }\n                    availableViews--;\n                } else view = template.create();\n                views.splice(addIndex, 0, view);\n                bindView(view, items, addIndex, controller);\n                view.insertBefore(location);\n            }\n            if (removedViews[removeIndex]) leftoverViews.push(...removedViews.slice(removeIndex));\n        }\n        for(let i = leftoverIndex, ii = leftoverViews.length; i < ii; ++i)leftoverViews[i].dispose();\n        if (this.directive.options.positioning) for(let i = 0, viewsLength = views.length; i < viewsLength; ++i){\n            const context = views[i].context;\n            context.length = viewsLength;\n            context.index = i;\n        }\n    }\n    refreshAllViews(templateChanged = false) {\n        const items = this.items;\n        const template = this.template;\n        const location = this.location;\n        const bindView = this.bindView;\n        const controller = this.controller;\n        let itemsLength = items.length;\n        let views = this.views;\n        let viewsLength = views.length;\n        if (itemsLength === 0 || templateChanged || !this.directive.options.recycle) {\n            // all views need to be removed\n            (0, $TMf7M.HTMLView).disposeContiguousBatch(views);\n            viewsLength = 0;\n        }\n        if (viewsLength === 0) {\n            // all views need to be created\n            this.views = views = new Array(itemsLength);\n            for(let i = 0; i < itemsLength; ++i){\n                const view = template.create();\n                bindView(view, items, i, controller);\n                views[i] = view;\n                view.insertBefore(location);\n            }\n        } else {\n            // attempt to reuse existing views with new data\n            let i = 0;\n            for(; i < itemsLength; ++i)if (i < viewsLength) {\n                const view = views[i];\n                if (!view) {\n                    const serializer = new XMLSerializer();\n                    throw new $a04ffd294f1ed5e3$export$be1769e3b8cade2(`View is null or undefined inside \"${this.location.getRootNode().host.nodeName}\".`, {\n                        index: i,\n                        hydrationStage: this.controller.hydrationStage,\n                        itemsLength: itemsLength,\n                        viewsState: views.map((v)=>v ? \"hydrated\" : \"empty\"),\n                        viewTemplateString: serializer.serializeToString(template.create().fragment),\n                        rootNodeContent: serializer.serializeToString(this.location.getRootNode())\n                    });\n                }\n                bindView(view, items, i, controller);\n            } else {\n                const view = template.create();\n                bindView(view, items, i, controller);\n                views.push(view);\n                view.insertBefore(location);\n            }\n            const removed = views.splice(i, viewsLength - i);\n            for(i = 0, itemsLength = removed.length; i < itemsLength; ++i)removed[i].dispose();\n        }\n    }\n    unbindAllViews() {\n        const views = this.views;\n        for(let i = 0, ii = views.length; i < ii; ++i){\n            const view = views[i];\n            if (!view) {\n                const serializer = new XMLSerializer();\n                throw new $a04ffd294f1ed5e3$export$be1769e3b8cade2(`View is null or undefined inside \"${this.location.getRootNode().host.nodeName}\".`, {\n                    index: i,\n                    hydrationStage: this.controller.hydrationStage,\n                    viewsState: views.map((v)=>v ? \"hydrated\" : \"empty\"),\n                    rootNodeContent: serializer.serializeToString(this.location.getRootNode())\n                });\n            }\n            view.unbind();\n        }\n    }\n    hydrateViews(template) {\n        if (!this.items) return;\n        this.views = new Array(this.items.length);\n        let current = this.location.previousSibling;\n        while(current !== null){\n            if (!$a04ffd294f1ed5e3$var$isCommentNode(current)) {\n                current = current.previousSibling;\n                continue;\n            }\n            const index = (0, $aWVYn.HydrationMarkup).parseRepeatEndMarker(current.data);\n            if (index === null) {\n                current = current.previousSibling;\n                continue;\n            }\n            current.data = \"\";\n            // end of repeat is the previousSibling of end comment\n            const end = current.previousSibling;\n            if (!end) throw new Error(`Error when hydrating inside \"${this.location.getRootNode().host.nodeName}\": end should never be null.`);\n            // find start marker\n            let start = end;\n            // How many unmatched end markers we've encountered\n            let unmatchedEndMarkers = 0;\n            while(start !== null){\n                if ($a04ffd294f1ed5e3$var$isCommentNode(start)) {\n                    if ((0, $aWVYn.HydrationMarkup).isRepeatViewEndMarker(start.data)) unmatchedEndMarkers++;\n                    else if ((0, $aWVYn.HydrationMarkup).isRepeatViewStartMarker(start.data)) {\n                        if (unmatchedEndMarkers) unmatchedEndMarkers--;\n                        else {\n                            if ((0, $aWVYn.HydrationMarkup).parseRepeatStartMarker(start.data) !== index) throw new Error(`Error when hydrating inside \"${this.location.getRootNode().host.nodeName}\": Mismatched start and end markers.`);\n                            start.data = \"\";\n                            current = start.previousSibling;\n                            // start of repeat content is the nextSibling of start comment\n                            start = start.nextSibling;\n                            const view = template.hydrate(start, end);\n                            this.views[index] = view;\n                            this.bindView(view, this.items, index, this.controller);\n                            break;\n                        }\n                    }\n                }\n                start = start.previousSibling;\n            }\n            if (!start) throw new Error(`Error when hydrating inside \"${this.location.getRootNode().host.nodeName}\": start should never be null.`);\n        }\n    }\n}\nclass $a04ffd294f1ed5e3$export$3e91f6eae87714ce {\n    /**\n     * Creates an instance of RepeatDirective.\n     * @param dataBinding - The binding that provides the array to render.\n     * @param templateBinding - The template binding used to obtain a template to render for each item in the array.\n     * @param options - Options used to turn on special repeat features.\n     */ constructor(dataBinding, templateBinding, options){\n        this.dataBinding = dataBinding;\n        this.templateBinding = templateBinding;\n        this.options = options;\n        (0, $1S7Vh.ArrayObserver).enable();\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     */ createHTML(add) {\n        return (0, $lMiZS.Markup).comment(add(this));\n    }\n    /**\n     * Creates a behavior for the provided target node.\n     * @param target - The node instance to create the behavior for.\n     */ createBehavior() {\n        return new $a04ffd294f1ed5e3$export$9320ef0c85148109(this);\n    }\n}\n(0, $dgoyj.HTMLDirective).define($a04ffd294f1ed5e3$export$3e91f6eae87714ce);\nfunction $a04ffd294f1ed5e3$export$76d90c956114f2c2(items, template, options = $a04ffd294f1ed5e3$var$defaultRepeatOptions) {\n    const dataBinding = (0, $fOqr6.normalizeBinding)(items);\n    const templateBinding = (0, $fOqr6.normalizeBinding)(template);\n    return new $a04ffd294f1ed5e3$export$3e91f6eae87714ce(dataBinding, templateBinding, Object.assign(Object.assign({}, $a04ffd294f1ed5e3$var$defaultRepeatOptions), options));\n}\n\n});\nparcelRegister(\"1S7Vh\", function(module, exports) {\n\n$parcel$export(module.exports, \"ArrayObserver\", () => $15d0fae2631964a9$export$ddffcc348cf2aba1);\n\nvar $c22v8 = parcelRequire(\"c22v8\");\n\nvar $aEJPD = parcelRequire(\"aEJPD\");\n\nvar $kyf8E = parcelRequire(\"kyf8E\");\n\nvar $igor1 = parcelRequire(\"igor1\");\nclass $15d0fae2631964a9$export$ceb3ee475cfd64d1 {\n    /**\n     * Creates a splice.\n     * @param index - The index that the splice occurs at.\n     * @param removed - The items that were removed.\n     * @param addedCount - The  number of items that were added.\n     */ constructor(index, removed, addedCount){\n        this.index = index;\n        this.removed = removed;\n        this.addedCount = addedCount;\n    }\n    /**\n     * Adjusts the splice index based on the provided array.\n     * @param array - The array to adjust to.\n     * @returns The same splice, mutated based on the reference array.\n     */ adjustTo(array) {\n        let index = this.index;\n        const arrayLength = array.length;\n        if (index > arrayLength) index = arrayLength - this.addedCount;\n        else if (index < 0) index = arrayLength + this.removed.length + index - this.addedCount;\n        this.index = index < 0 ? 0 : index;\n        return this;\n    }\n}\nconst $15d0fae2631964a9$export$2bfb3010befe266c = Object.freeze({\n    /**\n     * Only supports resets.\n     */ reset: 1,\n    /**\n     * Supports tracking splices and resets.\n     */ splice: 2,\n    /**\n     * Supports tracking splices and resets, while applying some form\n     * of optimization, such as merging, to the splices.\n     */ optimized: 3\n});\nconst $15d0fae2631964a9$var$reset = new $15d0fae2631964a9$export$ceb3ee475cfd64d1(0, (0, $c22v8.emptyArray), 0);\n$15d0fae2631964a9$var$reset.reset = true;\nconst $15d0fae2631964a9$var$resetSplices = [\n    $15d0fae2631964a9$var$reset\n];\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' to '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction $15d0fae2631964a9$var$calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    // \"Deletion\" columns\n    const rowCount = oldEnd - oldStart + 1;\n    const columnCount = currentEnd - currentStart + 1;\n    const distances = new Array(rowCount);\n    let north;\n    let west;\n    // \"Addition\" rows. Initialize null column.\n    for(let i = 0; i < rowCount; ++i){\n        distances[i] = new Array(columnCount);\n        distances[i][0] = i;\n    }\n    // Initialize null row\n    for(let j = 0; j < columnCount; ++j)distances[0][j] = j;\n    for(let i = 1; i < rowCount; ++i){\n        for(let j = 1; j < columnCount; ++j)if (current[currentStart + j - 1] === old[oldStart + i - 1]) distances[i][j] = distances[i - 1][j - 1];\n        else {\n            north = distances[i - 1][j] + 1;\n            west = distances[i][j - 1] + 1;\n            distances[i][j] = north < west ? north : west;\n        }\n    }\n    return distances;\n}\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction $15d0fae2631964a9$var$spliceOperationsFromEditDistances(distances) {\n    let i = distances.length - 1;\n    let j = distances[0].length - 1;\n    let current = distances[i][j];\n    const edits = [];\n    while(i > 0 || j > 0){\n        if (i === 0) {\n            edits.push(2 /* Edit.add */ );\n            j--;\n            continue;\n        }\n        if (j === 0) {\n            edits.push(3 /* Edit.delete */ );\n            i--;\n            continue;\n        }\n        const northWest = distances[i - 1][j - 1];\n        const west = distances[i - 1][j];\n        const north = distances[i][j - 1];\n        let min;\n        if (west < north) min = west < northWest ? west : northWest;\n        else min = north < northWest ? north : northWest;\n        if (min === northWest) {\n            if (northWest === current) edits.push(0 /* Edit.leave */ );\n            else {\n                edits.push(1 /* Edit.update */ );\n                current = northWest;\n            }\n            i--;\n            j--;\n        } else if (min === west) {\n            edits.push(3 /* Edit.delete */ );\n            i--;\n            current = west;\n        } else {\n            edits.push(2 /* Edit.add */ );\n            j--;\n            current = north;\n        }\n    }\n    return edits.reverse();\n}\nfunction $15d0fae2631964a9$var$sharedPrefix(current, old, searchLength) {\n    for(let i = 0; i < searchLength; ++i){\n        if (current[i] !== old[i]) return i;\n    }\n    return searchLength;\n}\nfunction $15d0fae2631964a9$var$sharedSuffix(current, old, searchLength) {\n    let index1 = current.length;\n    let index2 = old.length;\n    let count = 0;\n    while(count < searchLength && current[--index1] === old[--index2])count++;\n    return count;\n}\nfunction $15d0fae2631964a9$var$intersect(start1, end1, start2, end2) {\n    // Disjoint\n    if (end1 < start2 || end2 < start1) return -1;\n    // Adjacent\n    if (end1 === start2 || end2 === start1) return 0;\n    // Non-zero intersect, span1 first\n    if (start1 < start2) {\n        if (end1 < end2) return end1 - start2; // Overlap\n        return end2 - start2; // Contained\n    }\n    // Non-zero intersect, span2 first\n    if (end2 < end1) return end2 - start1; // Overlap\n    return end1 - start1; // Contained\n}\n/**\n * @remarks\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n */ function $15d0fae2631964a9$var$calc(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    let prefixCount = 0;\n    let suffixCount = 0;\n    const minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart === 0 && oldStart === 0) prefixCount = $15d0fae2631964a9$var$sharedPrefix(current, old, minLength);\n    if (currentEnd === current.length && oldEnd === old.length) suffixCount = $15d0fae2631964a9$var$sharedSuffix(current, old, minLength - prefixCount);\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n    if (currentEnd - currentStart === 0 && oldEnd - oldStart === 0) return 0, $c22v8.emptyArray;\n    if (currentStart === currentEnd) {\n        const splice = new $15d0fae2631964a9$export$ceb3ee475cfd64d1(currentStart, [], 0);\n        while(oldStart < oldEnd)splice.removed.push(old[oldStart++]);\n        return [\n            splice\n        ];\n    } else if (oldStart === oldEnd) return [\n        new $15d0fae2631964a9$export$ceb3ee475cfd64d1(currentStart, [], currentEnd - currentStart)\n    ];\n    const ops = $15d0fae2631964a9$var$spliceOperationsFromEditDistances($15d0fae2631964a9$var$calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));\n    const splices = [];\n    let splice = void 0;\n    let index = currentStart;\n    let oldIndex = oldStart;\n    for(let i = 0; i < ops.length; ++i)switch(ops[i]){\n        case 0 /* Edit.leave */ :\n            if (splice !== void 0) {\n                splices.push(splice);\n                splice = void 0;\n            }\n            index++;\n            oldIndex++;\n            break;\n        case 1 /* Edit.update */ :\n            if (splice === void 0) splice = new $15d0fae2631964a9$export$ceb3ee475cfd64d1(index, [], 0);\n            splice.addedCount++;\n            index++;\n            splice.removed.push(old[oldIndex]);\n            oldIndex++;\n            break;\n        case 2 /* Edit.add */ :\n            if (splice === void 0) splice = new $15d0fae2631964a9$export$ceb3ee475cfd64d1(index, [], 0);\n            splice.addedCount++;\n            index++;\n            break;\n        case 3 /* Edit.delete */ :\n            if (splice === void 0) splice = new $15d0fae2631964a9$export$ceb3ee475cfd64d1(index, [], 0);\n            splice.removed.push(old[oldIndex]);\n            oldIndex++;\n            break;\n    }\n    if (splice !== void 0) splices.push(splice);\n    return splices;\n}\nfunction $15d0fae2631964a9$var$merge(splice, splices) {\n    let inserted = false;\n    let insertionOffset = 0;\n    for(let i = 0; i < splices.length; i++){\n        const current = splices[i];\n        current.index += insertionOffset;\n        if (inserted) continue;\n        const intersectCount = $15d0fae2631964a9$var$intersect(splice.index, splice.index + splice.removed.length, current.index, current.index + current.addedCount);\n        if (intersectCount >= 0) {\n            // Merge the two splices\n            splices.splice(i, 1);\n            i--;\n            insertionOffset -= current.addedCount - current.removed.length;\n            splice.addedCount += current.addedCount - intersectCount;\n            const deleteCount = splice.removed.length + current.removed.length - intersectCount;\n            if (!splice.addedCount && !deleteCount) // merged splice is a noop. discard.\n            inserted = true;\n            else {\n                let currentRemoved = current.removed;\n                if (splice.index < current.index) {\n                    // some prefix of splice.removed is prepended to current.removed.\n                    const prepend = splice.removed.slice(0, current.index - splice.index);\n                    prepend.push(...currentRemoved);\n                    currentRemoved = prepend;\n                }\n                if (splice.index + splice.removed.length > current.index + current.addedCount) {\n                    // some suffix of splice.removed is appended to current.removed.\n                    const append = splice.removed.slice(current.index + current.addedCount - splice.index);\n                    currentRemoved.push(...append);\n                }\n                splice.removed = currentRemoved;\n                if (current.index < splice.index) splice.index = current.index;\n            }\n        } else if (splice.index < current.index) {\n            // Insert splice here.\n            inserted = true;\n            splices.splice(i, 0, splice);\n            i++;\n            const offset = splice.addedCount - splice.removed.length;\n            current.index += offset;\n            insertionOffset += offset;\n        }\n    }\n    if (!inserted) splices.push(splice);\n}\nfunction $15d0fae2631964a9$var$project(array, changes) {\n    let splices = [];\n    const initialSplices = [];\n    for(let i = 0, ii = changes.length; i < ii; i++)$15d0fae2631964a9$var$merge(changes[i], initialSplices);\n    for(let i = 0, ii = initialSplices.length; i < ii; ++i){\n        const splice = initialSplices[i];\n        if (splice.addedCount === 1 && splice.removed.length === 1) {\n            if (splice.removed[0] !== array[splice.index]) splices.push(splice);\n            continue;\n        }\n        splices = splices.concat($15d0fae2631964a9$var$calc(array, splice.index, splice.index + splice.addedCount, splice.removed, 0, splice.removed.length));\n    }\n    return splices;\n}\n/**\n * A SpliceStrategy that attempts to merge all splices into the minimal set of\n * splices needed to represent the change from the old array to the new array.\n * @public\n */ let $15d0fae2631964a9$var$defaultSpliceStrategy = Object.freeze({\n    support: $15d0fae2631964a9$export$2bfb3010befe266c.optimized,\n    normalize (previous, current, changes) {\n        if (previous === void 0) {\n            if (changes === void 0) return 0, $c22v8.emptyArray;\n            return $15d0fae2631964a9$var$project(current, changes);\n        }\n        return $15d0fae2631964a9$var$resetSplices;\n    },\n    pop (array, observer, pop, args) {\n        const notEmpty = array.length > 0;\n        const result = pop.apply(array, args);\n        if (notEmpty) observer.addSplice(new $15d0fae2631964a9$export$ceb3ee475cfd64d1(array.length, [\n            result\n        ], 0));\n        return result;\n    },\n    push (array, observer, push, args) {\n        const result = push.apply(array, args);\n        observer.addSplice(new $15d0fae2631964a9$export$ceb3ee475cfd64d1(array.length - args.length, [], args.length).adjustTo(array));\n        return result;\n    },\n    reverse (array, observer, reverse, args) {\n        const result = reverse.apply(array, args);\n        observer.reset(array);\n        return result;\n    },\n    shift (array, observer, shift, args) {\n        const notEmpty = array.length > 0;\n        const result = shift.apply(array, args);\n        if (notEmpty) observer.addSplice(new $15d0fae2631964a9$export$ceb3ee475cfd64d1(0, [\n            result\n        ], 0));\n        return result;\n    },\n    sort (array, observer, sort, args) {\n        const result = sort.apply(array, args);\n        observer.reset(array);\n        return result;\n    },\n    splice (array, observer, splice, args) {\n        const result = splice.apply(array, args);\n        observer.addSplice(new $15d0fae2631964a9$export$ceb3ee475cfd64d1(+args[0], result, args.length > 2 ? args.length - 2 : 0).adjustTo(array));\n        return result;\n    },\n    unshift (array, observer, unshift, args) {\n        const result = unshift.apply(array, args);\n        observer.addSplice(new $15d0fae2631964a9$export$ceb3ee475cfd64d1(0, [], args.length).adjustTo(array));\n        return result;\n    }\n});\nconst $15d0fae2631964a9$export$6475bdcbf398326a = Object.freeze({\n    /**\n     * A set of changes that represent a full array reset.\n     */ reset: $15d0fae2631964a9$var$resetSplices,\n    /**\n     * Sets the default strategy to use for array observers.\n     * @param strategy - The splice strategy to use.\n     */ setDefaultStrategy (strategy) {\n        $15d0fae2631964a9$var$defaultSpliceStrategy = strategy;\n    }\n});\nfunction $15d0fae2631964a9$var$setNonEnumerable(target, property, value) {\n    Reflect.defineProperty(target, property, {\n        value: value,\n        enumerable: false\n    });\n}\nclass $15d0fae2631964a9$var$DefaultArrayObserver extends (0, $aEJPD.SubscriberSet) {\n    constructor(subject){\n        super(subject);\n        this.oldCollection = void 0;\n        this.splices = void 0;\n        this.needsQueue = true;\n        this._strategy = null;\n        this._lengthObserver = void 0;\n        this.call = this.flush;\n        $15d0fae2631964a9$var$setNonEnumerable(subject, \"$fastController\", this);\n    }\n    get strategy() {\n        return this._strategy;\n    }\n    set strategy(value) {\n        this._strategy = value;\n    }\n    get lengthObserver() {\n        let observer = this._lengthObserver;\n        if (observer === void 0) {\n            const array = this.subject;\n            this._lengthObserver = observer = {\n                length: array.length,\n                handleChange () {\n                    if (this.length !== array.length) {\n                        this.length = array.length;\n                        (0, $kyf8E.Observable).notify(observer, \"length\");\n                    }\n                }\n            };\n            this.subscribe(observer);\n        }\n        return observer;\n    }\n    subscribe(subscriber) {\n        this.flush();\n        super.subscribe(subscriber);\n    }\n    addSplice(splice) {\n        if (this.splices === void 0) this.splices = [\n            splice\n        ];\n        else this.splices.push(splice);\n        this.enqueue();\n    }\n    reset(oldCollection) {\n        this.oldCollection = oldCollection;\n        this.enqueue();\n    }\n    flush() {\n        var _a;\n        const splices = this.splices;\n        const oldCollection = this.oldCollection;\n        if (splices === void 0 && oldCollection === void 0) return;\n        this.needsQueue = true;\n        this.splices = void 0;\n        this.oldCollection = void 0;\n        this.notify(((_a = this._strategy) !== null && _a !== void 0 ? _a : $15d0fae2631964a9$var$defaultSpliceStrategy).normalize(oldCollection, this.subject, splices));\n    }\n    enqueue() {\n        if (this.needsQueue) {\n            this.needsQueue = false;\n            (0, $igor1.Updates).enqueue(this);\n        }\n    }\n}\nlet $15d0fae2631964a9$var$enabled = false;\nconst $15d0fae2631964a9$export$ddffcc348cf2aba1 = Object.freeze({\n    /**\n     * Enables the array observation mechanism.\n     * @remarks\n     * Array observation is enabled automatically when using the\n     * {@link RepeatDirective}, so calling this API manually is\n     * not typically necessary.\n     */ enable () {\n        if ($15d0fae2631964a9$var$enabled) return;\n        $15d0fae2631964a9$var$enabled = true;\n        (0, $kyf8E.Observable).setArrayObserverFactory((collection)=>new $15d0fae2631964a9$var$DefaultArrayObserver(collection));\n        const proto = Array.prototype;\n        if (!proto.$fastPatch) {\n            $15d0fae2631964a9$var$setNonEnumerable(proto, \"$fastPatch\", 1);\n            [\n                proto.pop,\n                proto.push,\n                proto.reverse,\n                proto.shift,\n                proto.sort,\n                proto.splice,\n                proto.unshift\n            ].forEach((method)=>{\n                proto[method.name] = function(...args) {\n                    var _a;\n                    const o = this.$fastController;\n                    return o === void 0 ? method.apply(this, args) : ((_a = o.strategy) !== null && _a !== void 0 ? _a : $15d0fae2631964a9$var$defaultSpliceStrategy)[method.name](this, o, method, args);\n                };\n            });\n        }\n    }\n});\nfunction $15d0fae2631964a9$export$db8278eef58dd758(array) {\n    if (!array) return 0;\n    let arrayObserver = array.$fastController;\n    if (arrayObserver === void 0) {\n        $15d0fae2631964a9$export$ddffcc348cf2aba1.enable();\n        arrayObserver = (0, $kyf8E.Observable).getNotifier(array);\n    }\n    (0, $kyf8E.Observable).track(arrayObserver.lengthObserver, \"length\");\n    return array.length;\n}\n\n});\n\nparcelRegister(\"fOqr6\", function(module, exports) {\n\n$parcel$export(module.exports, \"normalizeBinding\", () => $b830082deda01e3f$export$6cdc818096b8be3c);\n\nvar $gAsSx = parcelRequire(\"gAsSx\");\n\nvar $7v8l6 = parcelRequire(\"7v8l6\");\n\nvar $2m4Ni = parcelRequire(\"2m4Ni\");\n\nvar $91MUc = parcelRequire(\"91MUc\");\nfunction $b830082deda01e3f$export$6cdc818096b8be3c(value) {\n    return (0, $gAsSx.isFunction)(value) ? (0, $2m4Ni.oneWay)(value) : value instanceof (0, $7v8l6.Binding) ? value : (0, $91MUc.oneTime)(()=>value);\n}\n\n});\n\n\nparcelRegister(\"ipcC9\", function(module, exports) {\n\n$parcel$export(module.exports, \"slotted\", () => $d66458b7b8a1796f$export$e2355138873b532d);\n\nvar $gAsSx = parcelRequire(\"gAsSx\");\n\nvar $dgoyj = parcelRequire(\"dgoyj\");\n\nvar $d8FOX = parcelRequire(\"d8FOX\");\nconst $d66458b7b8a1796f$var$slotEvent = \"slotchange\";\nclass $d66458b7b8a1796f$export$321a4334e9cbbbe2 extends (0, $d8FOX.NodeObservationDirective) {\n    /**\n     * Begins observation of the nodes.\n     * @param target - The target to observe.\n     */ observe(target) {\n        target.addEventListener($d66458b7b8a1796f$var$slotEvent, this);\n    }\n    /**\n     * Disconnects observation of the nodes.\n     * @param target - The target to unobserve.\n     */ disconnect(target) {\n        target.removeEventListener($d66458b7b8a1796f$var$slotEvent, this);\n    }\n    /**\n     * Retrieves the raw nodes that should be assigned to the source property.\n     * @param target - The target to get the node to.\n     */ getNodes(target) {\n        return target.assignedNodes(this.options);\n    }\n    /** @internal */ handleEvent(event) {\n        const target = event.currentTarget;\n        this.updateTarget(this.getSource(target), this.computeNodes(target));\n    }\n}\n(0, $dgoyj.HTMLDirective).define($d66458b7b8a1796f$export$321a4334e9cbbbe2);\nfunction $d66458b7b8a1796f$export$e2355138873b532d(propertyOrOptions) {\n    if ((0, $gAsSx.isString)(propertyOrOptions)) propertyOrOptions = {\n        property: propertyOrOptions\n    };\n    return new $d66458b7b8a1796f$export$321a4334e9cbbbe2(propertyOrOptions);\n}\n\n});\n\nparcelRegister(\"juDPm\", function(module, exports) {\n\n$parcel$export(module.exports, \"when\", () => $e30fb6903e5b5f84$export$a55877ca9db47377);\n\nvar $gAsSx = parcelRequire(\"gAsSx\");\nconst $e30fb6903e5b5f84$var$noTemplate = ()=>null;\nfunction $e30fb6903e5b5f84$var$normalizeBinding(value) {\n    return value === undefined ? $e30fb6903e5b5f84$var$noTemplate : (0, $gAsSx.isFunction)(value) ? value : ()=>value;\n}\nfunction $e30fb6903e5b5f84$export$a55877ca9db47377(condition, templateOrTemplateBinding, elseTemplateOrTemplateBinding) {\n    const dataBinding = (0, $gAsSx.isFunction)(condition) ? condition : ()=>condition;\n    const templateBinding = $e30fb6903e5b5f84$var$normalizeBinding(templateOrTemplateBinding);\n    const elseBinding = $e30fb6903e5b5f84$var$normalizeBinding(elseTemplateOrTemplateBinding);\n    return (source, context)=>dataBinding(source, context) ? templateBinding(source, context) : elseBinding(source, context);\n}\n\n});\n\nparcelRegister(\"6iBHo\", function(module, exports) {\n\n$parcel$export(module.exports, \"State\", () => $4961aabe115191b8$export$7254cc27399e90bd);\n$parcel$export(module.exports, \"createState\", () => $4961aabe115191b8$export$e6a0daad8304de);\n\nvar $kyf8E = parcelRequire(\"kyf8E\");\nclass $4961aabe115191b8$export$7254cc27399e90bd {\n    constructor(value = null){\n        /** \n     * Propriété privée pour stocker l'historique des valeurs d'état, limitée aux 10 dernières entrées.\n    */ this._history = [];\n        /** \n     * Propriété privée pour stocker la valeur actuelle de l'état, initialisée à `null`.\n    */ this._value = null;\n        /** \n     * Propriété privée pour notifier les observateurs des changements d'état, initialisée avec `Observable.getNotifier`.\n    */ this._notifier = (0, $kyf8E.Observable).getNotifier(this);\n        this._value = value;\n    }\n    /** \n   * Getter pour la valeur actuelle de l'état. Utilise `Observable.track` pour suivre les changements.\n  */ get value() {\n        (0, $kyf8E.Observable).track(this, \"value\");\n        return this._value;\n    }\n    /**\n   * Setter pour mettre à jour la valeur de l'état. Ajoute la valeur actuelle à l'historique et notifie\n   * les observateurs du changement.\n   * @param {T} value - Nouvelle valeur de l'état.\n  */ set value(value) {\n        this._value = value;\n        this._history = [\n            this._value,\n            ...this._history.reverse()\n        ].reduce((results, value)=>{\n            if (results.length > 10) results.push(value);\n            return results;\n        }, []).reverse();\n        (0, $kyf8E.Observable).notify(this, \"value\");\n    }\n    /**\n   * Méthode statique pour initialiser un nouvel objet `State` avec une valeur initiale facultative.\n   * @param {T} [value=null] - Valeur initiale de l'état.\n   * @returns Une nouvelle instance de `State` avec la valeur spécifiée.\n  */ static init(value = null) {\n        return new $4961aabe115191b8$export$7254cc27399e90bd(value);\n    }\n    /**\n   * Renvoie un tableau avec l'état actuel et une fonction pour mettre à jour l'état.\n   * @returns Un tableau contenant l'état actuel et une fonction de mise à jour.\n  */ get mutator() {\n        return [\n            this,\n            (value)=>{\n                this.value = value;\n            }\n        ];\n    }\n    /** \n   * Abonne une fonction de rappel qui sera appelée à chaque changement de valeur de l'état.\n   * @param {function} callback - Fonction à appeler lors d'un changement de valeur.\n  */ subscribe(callback) {\n        this._notifier.subscribe({\n            handleChange: (state, key)=>{\n                callback(state[key]);\n            }\n        });\n    }\n    /**\n   * Convertit l'état en une valeur primitive pour les objets, ou en Proxy pour les objets complexes.\n   * @returns La valeur primitive ou un Proxy pour les objets complexes.\n  */ [Symbol.toPrimitive]() {\n        return typeof this.value != \"object\" ? this.value : new Proxy(this.value, {\n            get (target, key) {\n                return target[key] ? target[key] : undefined;\n            }\n        });\n    }\n}\nfunction $4961aabe115191b8$export$e6a0daad8304de(value = null) {\n    return $4961aabe115191b8$export$7254cc27399e90bd.init(value).mutator;\n}\n\n});\n\nparcelRegister(\"jbBC9\", function(module, exports) {\n\n$parcel$export(module.exports, \"createStorage\", () => $df7c38d5e4d71f03$export$d184a47a971dd4b9);\n\nvar $6iBHo = parcelRequire(\"6iBHo\");\nclass $df7c38d5e4d71f03$var$$89fec59bbef2bb37$export$98c71376181af907 extends Map {\n    /**\n   * Initialise une nouvelle instance de la classe `_storage` avec des enregistrements initiaux facultatifs et un validateur optionnel.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   * @returns {Storage<RECORD>} Une nouvelle instance de la classe `_storage` initialisée avec les enregistrements et le validateur fournis.\n   * @example\n   * ```typescript\n   * const records = { count: 0, name: \"John\" };\n   * const storage = _storage.init(records);\n   * ```\n   */ static init(records, validator) {\n        return new $df7c38d5e4d71f03$var$$89fec59bbef2bb37$export$98c71376181af907(records, validator);\n    }\n    /**\n   * Constructeur qui initialise la classe `_storage` avec des enregistrements optionnels et un validateur.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   */ constructor(records, validator){\n        super();\n        this._validator = null;\n        if (validator) this._validator = validator;\n        // Si des enregistrements sont fournis, les ajouter au _storage\n        if (records) Object.keys(records).forEach((key)=>{\n            this.set(key, (0, $6iBHo.createState)(records[key]));\n        });\n    }\n    /**\n   * Récupère la valeur du stockage en fonction d'une clé spécifiée.\n   * Si un validateur est défini, il valide la nouvelle valeur avant de l'appliquer.\n   * @template T - Le type de la valeur de l'état.\n   * @param {StorageKeys<RECORD>} key - La clé utilisée pour accéder à un enregistrement spécifique en stockage.\n   * @returns {State<T>[\"mutator\"]} La fonction `mutator` associée à la clé spécifiée de l'objet `State`.\n   * @example\n   * ```typescript\n   * const storage = _storage.init({ count: 0 });\n   * const [count, setCount] = storage.get(\"count\");\n   * setCount(10); // met à jour la valeur si la validation réussit\n   * ```\n   */ get(key) {\n        if (!this._validator) return super.get(key);\n        else {\n            let [state, setter] = super.get(key);\n            return [\n                state,\n                (newValue)=>{\n                    let previousValue = state.value;\n                    let result = this._validator(key, previousValue, newValue);\n                    if (result instanceof Promise) result.then(()=>setter(newValue)).catch((error)=>console.error(error));\n                    else if (result == true) setter(newValue);\n                }\n            ];\n        }\n    }\n}\nfunction $df7c38d5e4d71f03$export$d184a47a971dd4b9(records = {}, stateValidator) {\n    // Création d'un proxy contenant le stockage\n    return new Proxy($df7c38d5e4d71f03$var$$89fec59bbef2bb37$export$98c71376181af907.init(records, stateValidator), {\n        /**\n     * Intercepte les opérations d'accès aux propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état ou de la méthode accédée.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {any} La méthode ou la valeur de l'état correspondant à la clé.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * console.log(storage.count[0].value); // affiche 0\n     * storage.count ; // met à jour la valeur de count à 5\n     * ```\n    */ get (target, key, receiver) {\n            // Retourne les méthodes du stockage\n            if (target[key]) {\n                if (typeof target[key] == \"function\") return target[key].bind(target);\n                else return target[key];\n            } else if (target.has(key)) return target.get(key);\n            else return undefined;\n        },\n        /**\n     * Intercepte les opérations de mise à jour des propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état à mettre à jour.\n     * @param {any} newValue - La nouvelle valeur à assigner à l'état.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {boolean} Un indicateur de succès de la mise à jour.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * storage.count ; // met à jour la valeur de count à 5\n     * console.log(storage.count[0].value); // affiche 5\n     * ```\n    */ set (target, key, newValue, receiver) {\n            if (target.has(key)) {\n                // Mise à jour du state contenant la valeur\n                target.get(key)[1](newValue);\n                return true;\n            } else return undefined;\n        }\n    });\n}\n\n});\n\nparcelRegister(\"bdZ6n\", function(module, exports) {\n\n$parcel$export(module.exports, \"uuid\", () => $82c04e2e766830d9$export$31b40729666a4ae0);\n\nvar $kQys5 = parcelRequire(\"kQys5\");\n// ===============================================\n// https://www.npmjs.com/package/get-random-values\n// ===============================================\nclass $82c04e2e766830d9$export$74e446f6456d826d extends String {\n    /**\n   * Obtient l'identifiant de composant en extrayant la première partie de l'UUID.\n   * @returns L'identifiant de composant.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.componentId); // '123456789012'\n   * ```\n  */ get componentId() {\n        return this.split(\"-\")[0];\n    }\n    /**\n   * Obtient la première section de l'UUID après division par '-'.\n   * @returns La première section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section1); // '1234'\n   * ```\n  */ get section1() {\n        return this.split(\"-\")[1];\n    }\n    /**\n   * Obtient la deuxième section de l'UUID après division par '-'.\n   * @returns La deuxième section de l'UUID.\n   * @example\n   * ```typescipt\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section2); // '5678'\n   * ```\n  */ get section2() {\n        return this.split(\"-\")[2];\n    }\n    /**\n   * Obtient la troisième section de l'UUID après division par '-'.\n   * @returns La troisième section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section3); // '90ab'\n   * ```\n  */ get section3() {\n        return this.split(\"-\")[3];\n    }\n    /**\n   * Obtient l'identifiant de collection en extrayant la cinquième partie de l'UUID.\n   * @returns L'identifiant de collection.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.collectionId); // 'abcdefabcdef'\n   * ```\n  */ get collectionId() {\n        return this.split(\"-\")[4];\n    }\n    /**\n   * Obtient l'identifiant parent en concaténant les sections 1, 2 et 3.\n   * @returns L'identifiant parent.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.parentId); // '1234567890ab'\n   * ```\n  */ get parentId() {\n        return [\n            this.section1,\n            this.section2,\n            this.section3\n        ].join(\"\");\n    }\n    /**\n   * Étend l'UUID hiérarchique avec des options personnalisées.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  const extendedUUID = uuid.extend({ parentId: '098765432109', collectionId: 'abcdefabcdef' });\n   *  console.log(extendedUUID); // Un nouvel _HUID avec les sections mises à jour.\n   * ```\n  */ extend(options) {\n        return $82c04e2e766830d9$export$31b40729666a4ae0.hv1({\n            parentId: this.componentId,\n            collectionId: this.collectionId\n        });\n    }\n}\nclass $82c04e2e766830d9$export$31b40729666a4ae0 {\n    /**\n   * Obtient une valeur par défaut pour l'identifiant de composant.\n   * @returns '000000000000' en tant que ComponentId.\n  */ static get componentId() {\n        return \"000000000000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la première section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment1() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la deuxième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment2() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la troisième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment3() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour l'identifiant de collection.\n   * @returns '000000000000' en tant que CollectionId.\n  */ static get collectionId() {\n        return \"000000000000\";\n    }\n    /**\n   * Obtient un UUID NIL (null) par défaut.\n   * @returns L'UUID NIL sous forme de chaîne.\n  */ static get NIL() {\n        return new $82c04e2e766830d9$export$74e446f6456d826d(`${$82c04e2e766830d9$export$31b40729666a4ae0.componentId}-${$82c04e2e766830d9$export$31b40729666a4ae0.segment1}-${$82c04e2e766830d9$export$31b40729666a4ae0.segment2}-${$82c04e2e766830d9$export$31b40729666a4ae0.segment3}-${$82c04e2e766830d9$export$31b40729666a4ae0.collectionId}`);\n    }\n    /**\n   * Encode une chaîne de longueur fixe en remplaçant certains caractères par des valeurs hexadécimales aléatoires.\n   * @param chaine - Une chaîne de longueur fixe.\n   * @returns Une chaîne de longueur fixe avec des valeurs hexadécimales aléatoires.\n   * @example\n   * ```typescript\n   *  const encoded = uuid.encode('123456789012');\n   *  console.log(encoded); // '1a2b3c4d5e6f'\n   * ```\n  */ static encode(chaine) {\n        return chaine.replace(/[018]/g, (c)=>{\n            return (c ^ (0, (/*@__PURE__*/$parcel$interopDefault($kQys5)))(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n        });\n    }\n    /**\n   * Génère un UUID de version 4 en utilisant des valeurs aléatoires.\n   * @returns Un UUID de version 4 sous forme de chaîne.\n   * @example\n   * ```typescript\n   *  const uuidV4 = uuid.v4();\n   *  console.log(uuidV4); // Un UUID de version 4.\n   * ```\n  */ static v4() {\n        return $82c04e2e766830d9$export$31b40729666a4ae0.NIL.replace(/[018]/g, (c)=>{\n            return (c ^ (0, (/*@__PURE__*/$parcel$interopDefault($kQys5)))(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n        });\n    }\n    /**\n   * Génère un UUID hiérarchique en fonction des options fournies.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const hierarchicalUUID = uuid.hv1({ parentId: '123456789012', collectionId: 'abcdefabcdef' });\n   *  console.log(hierarchicalUUID); // Un nouvel UUID hiérarchique (_HUID).\n   * ```\n  */ static hv1(options) {\n        if (!options) options = {\n            parentId: null,\n            collectionId: null\n        };\n        let componentId = $82c04e2e766830d9$export$31b40729666a4ae0.encode($82c04e2e766830d9$export$31b40729666a4ae0.componentId);\n        let segment1 = $82c04e2e766830d9$export$31b40729666a4ae0.encode($82c04e2e766830d9$export$31b40729666a4ae0.segment1);\n        let segment2 = $82c04e2e766830d9$export$31b40729666a4ae0.encode($82c04e2e766830d9$export$31b40729666a4ae0.segment2);\n        let segment3 = $82c04e2e766830d9$export$31b40729666a4ae0.encode($82c04e2e766830d9$export$31b40729666a4ae0.segment3);\n        let collectionId = $82c04e2e766830d9$export$31b40729666a4ae0.encode($82c04e2e766830d9$export$31b40729666a4ae0.collectionId);\n        if (options.parentId && options.parentId.length == 12) {\n            segment1 = options.parentId.slice(0, 4);\n            segment2 = options.parentId.slice(4, 8);\n            segment3 = options.parentId.slice(8, 12);\n        } else console.error(\"parentId.length exeded 12 char length.\");\n        if (options.collectionId) collectionId = options.collectionId;\n        return new $82c04e2e766830d9$export$74e446f6456d826d(`${componentId}-${segment1}-${segment2}-${segment3}-${collectionId}`);\n    }\n}\n\n});\nparcelRegister(\"kQys5\", function(module, exports) {\n/* eslint-disable no-var, operator-linebreak */ \nvar $649pq = parcelRequire(\"649pq\");\n\nvar $kjyEk = parcelRequire(\"kjyEk\");\n/**\n * @template {ArrayBufferView | null} T\n * @param {T} buf\n * @returns {T}\n */ function $f2d3636c0d4914d2$var$getRandomValues(buf) {\n    if ($649pq.crypto && $649pq.crypto.getRandomValues) return $649pq.crypto.getRandomValues(buf);\n    if (typeof $649pq.msCrypto === \"object\" && typeof $649pq.msCrypto.getRandomValues === \"function\") return $649pq.msCrypto.getRandomValues(buf);\n    if ($kjyEk.randomBytes) {\n        if (!(buf instanceof Uint8Array)) throw new TypeError(\"expected Uint8Array\");\n        if (buf.length > 65536) {\n            var e = new Error();\n            // @ts-expect-error\n            e.code = 22;\n            e.message = \"Failed to execute 'getRandomValues' on 'Crypto': The ArrayBufferView's byte length (\" + buf.length + \") exceeds the \" + \"number of bytes of entropy available via this API (65536).\";\n            e.name = \"QuotaExceededError\";\n            throw e;\n        }\n        var bytes = $kjyEk.randomBytes(buf.length);\n        buf.set(bytes);\n        return buf;\n    } else throw new Error(\"No secure random number generator available.\");\n}\nmodule.exports = $f2d3636c0d4914d2$var$getRandomValues;\n\n});\nparcelRegister(\"649pq\", function(module, exports) {\nvar $46aa6a3fd4f85b01$var$win;\nif (typeof window !== \"undefined\") $46aa6a3fd4f85b01$var$win = window;\nelse if (typeof $parcel$global !== \"undefined\") $46aa6a3fd4f85b01$var$win = $parcel$global;\nelse if (typeof self !== \"undefined\") $46aa6a3fd4f85b01$var$win = self;\nelse $46aa6a3fd4f85b01$var$win = {};\nmodule.exports = $46aa6a3fd4f85b01$var$win;\n\n});\n\nparcelRegister(\"kjyEk\", function(module, exports) {\n\"use strict\";\n\n});\n\n\n\n\n\n//# sourceMappingURL=index.2df65ba6.js.map\n","import {Observable as $hgUW1$Observable} from \"@microsoft/fast-element/dist/esm\";\nimport {attr as $b1b98f19caab25c2$import$843d46ff018552b8$7aabe8b3a840d2fd, observable as $hgUW1$observable, when as $5193209399721411$re_export$when, repeat as $5193209399721411$re_export$repeat, children as $5193209399721411$re_export$children, elements as $5193209399721411$re_export$elements, slotted as $5193209399721411$re_export$slotted, Binding as $hgUW1$Binding, html as $hgUW1$html, HTMLBindingDirective as $hgUW1$HTMLBindingDirective, HTMLDirective as $hgUW1$HTMLDirective, StatelessAttachedAttributeDirective as $hgUW1$StatelessAttachedAttributeDirective, customElement as $c5a7ff2cef84a00c$re_export$customElement, css as $c5a7ff2cef84a00c$re_export$css, ViewTemplate as $c5a7ff2cef84a00c$re_export$ViewTemplate, HTMLView as $c5a7ff2cef84a00c$re_export$HTMLView, volatile as $c5a7ff2cef84a00c$re_export$volatile, FASTElement as $hgUW1$FASTElement} from \"@microsoft/fast-element\";\nimport {State as $fde9406d76ec24a9$re_export$State, createState as $fde9406d76ec24a9$re_export$createState} from \"@lithium-framework/state\";\nimport {createStorage as $fde9406d76ec24a9$re_export$createStorage} from \"@lithium-framework/context\";\nimport {uuid as $fde9406d76ec24a9$re_export$uuid} from \"@lithium-framework/huid\";\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      }\n    });\n  });\n\n  return dest;\n}\nvar $ed2a677aa7485959$exports = {};\n\n$parcel$export($ed2a677aa7485959$exports, \"ViewExecutionContext\", () => $ed2a677aa7485959$export$1053a9be1bcefef9);\n$parcel$export($ed2a677aa7485959$exports, \"render\", () => $ed2a677aa7485959$export$b3890eb0ae9dca99);\n\nclass $f0b90d4a5f4da766$export$b176171395436676 extends Object {\n    static init(initialObject) {\n        let observabe = new $f0b90d4a5f4da766$export$b176171395436676(initialObject);\n        return observabe.createProxy();\n    }\n    constructor(initialObject){\n        super();\n        this.$data = {};\n        this.set = (key, value)=>{\n            this.$data[`_${key}`] = value;\n            (0, $hgUW1$Observable).defineProperty(this.$data, key);\n            return this.$data[key];\n        };\n        Object.keys(initialObject).forEach((key)=>{\n            this.set(key, initialObject[key]);\n        });\n    }\n    createProxy() {\n        return new Proxy(this.$data, {\n            get (store, propKey) {\n                let result = undefined;\n                try {\n                    result = store[propKey];\n                } catch (error) {\n                    console.error(error);\n                } finally{\n                    return result;\n                }\n            },\n            set (store, propKey, value) {\n                if (store[propKey]) store[propKey] = value;\n                else {\n                    store[`_${propKey}`] = value;\n                    (0, $hgUW1$Observable).defineProperty(store, propKey);\n                }\n                return true;\n            }\n        });\n    }\n}\n\n\nfunction $592e71a4a1bc8d5d$export$dcc5cf24d8fb3b41(initialObject) {\n    return (0, $f0b90d4a5f4da766$export$b176171395436676).init(initialObject);\n}\n\n\nvar $535bb7ac3b1a1d6d$exports = {};\nvar $b1b98f19caab25c2$exports = {};\n\n$parcel$export($b1b98f19caab25c2$exports, \"attrState\", () => $b1b98f19caab25c2$export$683a0e8baad8b9c3);\n$parcel$export($b1b98f19caab25c2$exports, \"attr\", () => $b1b98f19caab25c2$import$843d46ff018552b8$7aabe8b3a840d2fd);\n\nvar $a1f8df21dd3b8ee9$exports = {};\n\n$parcel$export($a1f8df21dd3b8ee9$exports, \"state\", () => $a1f8df21dd3b8ee9$export$ca000e230c0caa3e);\n\nfunction $a1f8df21dd3b8ee9$export$ca000e230c0caa3e(target, propertyKey, value = null, constructible = false) {\n    if (constructible) target.constructor.states = target.constructor.states || {};\n    Object.defineProperty(target, propertyKey, {\n        get () {\n            return target.$states[propertyKey];\n        },\n        set (newValue) {\n            target.$states[propertyKey] = newValue;\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    (0, $hgUW1$observable)(target, propertyKey);\n    if (value) target[propertyKey] = value;\n}\n\n\nfunction $b1b98f19caab25c2$export$683a0e8baad8b9c3(options = {}) {\n    return (target, propertyKey)=>{\n        (0, $b1b98f19caab25c2$import$843d46ff018552b8$7aabe8b3a840d2fd)(options)(target, propertyKey);\n        (0, $a1f8df21dd3b8ee9$export$ca000e230c0caa3e)(target, propertyKey);\n    };\n}\n\n\n\n$parcel$exportWildcard($535bb7ac3b1a1d6d$exports, $b1b98f19caab25c2$exports);\n$parcel$exportWildcard($535bb7ac3b1a1d6d$exports, $a1f8df21dd3b8ee9$exports);\n\n\nfunction $ed2a677aa7485959$var$_classPrivateFieldLooseBase(e, t) {\n    if (!({}).hasOwnProperty.call(e, t)) throw new TypeError(\"attempted to use private field on non-instance\");\n    return e;\n}\nvar $ed2a677aa7485959$var$id = 0;\nfunction $ed2a677aa7485959$var$_classPrivateFieldLooseKey(e) {\n    return \"__private_\" + $ed2a677aa7485959$var$id++ + \"_\" + e;\n}\nvar $ed2a677aa7485959$var$_state_keys = /*#__PURE__*/ $ed2a677aa7485959$var$_classPrivateFieldLooseKey(\"_state_keys\");\nclass $ed2a677aa7485959$export$1053a9be1bcefef9 {\n    get states() {\n        return this.$states;\n    }\n    constructor(data){\n        this.$states = (0, $f0b90d4a5f4da766$export$b176171395436676).init({});\n        Object.defineProperty(this, $ed2a677aa7485959$var$_state_keys, {\n            writable: true,\n            value: []\n        });\n        this.createState = (key, value)=>{\n            if ($ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $ed2a677aa7485959$var$_state_keys)[$ed2a677aa7485959$var$_state_keys].includes(key)) return this.useState(key);\n            Object.defineProperty(this, key, {\n                get () {\n                    return JSON.parse(this.states[key]);\n                },\n                set (value) {\n                    if (!$ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $ed2a677aa7485959$var$_state_keys)[$ed2a677aa7485959$var$_state_keys].includes(key)) {\n                        $ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $ed2a677aa7485959$var$_state_keys)[$ed2a677aa7485959$var$_state_keys].push(key);\n                        this.$states = (0, $f0b90d4a5f4da766$export$b176171395436676).init({\n                            [key]: JSON.stringify(value),\n                            ...Object.fromEntries(new Map(Array.from($ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $ed2a677aa7485959$var$_state_keys)[$ed2a677aa7485959$var$_state_keys], (key)=>{\n                                return [\n                                    key,\n                                    this.$states[`${key}`]\n                                ];\n                            })))\n                        });\n                    }\n                    this.$states[key] = JSON.stringify(value);\n                }\n            });\n            this[key] = value;\n            return this.useState(key);\n        };\n        this.useState = (key)=>{\n            return [\n                this[key],\n                (newValue)=>{\n                    console.log({\n                        newValue: newValue\n                    });\n                    this[key] = newValue;\n                }\n            ];\n        };\n        this.createConsumable = (key, value)=>{\n            (0, $a1f8df21dd3b8ee9$export$ca000e230c0caa3e)(this, key, value, false);\n        };\n        Object.assign(this, data);\n    }\n    static init(data) {\n        return new $ed2a677aa7485959$export$1053a9be1bcefef9(data);\n    }\n}\nfunction $ed2a677aa7485959$export$b3890eb0ae9dca99(template, container = document.body, data = {}) {\n    let context = $ed2a677aa7485959$export$1053a9be1bcefef9.init(data);\n    return template.render(context, container);\n}\n\n\n\nvar $5193209399721411$exports = {};\n\n$parcel$export($5193209399721411$exports, \"when\", () => $5193209399721411$re_export$when);\n$parcel$export($5193209399721411$exports, \"repeat\", () => $5193209399721411$re_export$repeat);\n$parcel$export($5193209399721411$exports, \"children\", () => $5193209399721411$re_export$children);\n$parcel$export($5193209399721411$exports, \"elements\", () => $5193209399721411$re_export$elements);\n$parcel$export($5193209399721411$exports, \"slotted\", () => $5193209399721411$re_export$slotted);\n\nvar $21522158c10703ef$exports = {};\n\n$parcel$export($21522158c10703ef$exports, \"AsyncAppendBindig\", () => $21522158c10703ef$export$ca3487b83ec6860a);\n$parcel$export($21522158c10703ef$exports, \"AsyncAppendDirective\", () => $21522158c10703ef$export$5761d9f85430a54b);\n$parcel$export($21522158c10703ef$exports, \"asyncAppend\", () => $21522158c10703ef$export$eaa89ade56b7c0c1);\n\nclass $21522158c10703ef$export$ca3487b83ec6860a extends (0, $hgUW1$Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $21522158c10703ef$export$5761d9f85430a54b extends (0, $hgUW1$HTMLBindingDirective) {\n    constructor(fn, callback){\n        super(new $21522158c10703ef$export$ca3487b83ec6860a((x)=>null));\n        this.fn = null;\n        this.callback = null;\n        Object.assign(this, {\n            fn: fn,\n            callback: callback\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                this.fn.then((result)=>{\n                    this.callback(result).render(source, target instanceof HTMLElement ? target : target.parentElement);\n                }).catch((error)=>{\n                    console.error(error);\n                    (0, $hgUW1$html)`<span>Error: ${error}</span>`.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                });\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(fn, callback) {\n        return new $21522158c10703ef$export$5761d9f85430a54b(fn, callback);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($21522158c10703ef$export$5761d9f85430a54b);\nconst $21522158c10703ef$export$eaa89ade56b7c0c1 = (fn, callback)=>$21522158c10703ef$export$5761d9f85430a54b.use(fn, callback);\n\n\nvar $f6651d38d609160e$exports = {};\n\n$parcel$export($f6651d38d609160e$exports, \"createRef\", () => $f6651d38d609160e$export$7d1e3a5e95ceca43);\n$parcel$export($f6651d38d609160e$exports, \"RefDirective\", () => $f6651d38d609160e$export$1ef8aea9a6de98d);\n$parcel$export($f6651d38d609160e$exports, \"ref\", () => $f6651d38d609160e$export$eff4d24c3ff7876e);\n\nfunction $f6651d38d609160e$export$7d1e3a5e95ceca43() {\n    return {\n        value: null\n    };\n}\nclass $f6651d38d609160e$export$1ef8aea9a6de98d extends (0, $hgUW1$StatelessAttachedAttributeDirective) {\n    constructor(options){\n        super(options);\n        this.options = null;\n        Object.assign(this, {\n            options: options\n        });\n    }\n    bind(controller) {\n        let { lastChild: target } = controller;\n        this.options.value = target;\n    }\n    static use(options) {\n        return new $f6651d38d609160e$export$1ef8aea9a6de98d(options);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($f6651d38d609160e$export$1ef8aea9a6de98d);\nconst $f6651d38d609160e$export$eff4d24c3ff7876e = (options)=>$f6651d38d609160e$export$1ef8aea9a6de98d.use(options);\n\n\nvar $c66c6ea353620255$exports = {};\n\n$parcel$export($c66c6ea353620255$exports, \"StateBindig\", () => $c66c6ea353620255$export$28205fa712822499);\n$parcel$export($c66c6ea353620255$exports, \"StateDirective\", () => $c66c6ea353620255$export$792c882b75ca2192);\n$parcel$export($c66c6ea353620255$exports, \"useState\", () => $c66c6ea353620255$export$60241385465d0a34);\n// import { ViewTemplate, HTMLBindingDirective, ExecutionContext } from '@microsoft/fast-element';\n\nclass $c66c6ea353620255$export$28205fa712822499 extends (0, $hgUW1$Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $c66c6ea353620255$export$792c882b75ca2192 extends (0, $hgUW1$HTMLBindingDirective) {\n    get state() {\n        return this._state.mutator[0];\n    }\n    set state(value) {\n        this._state.mutator[1](value);\n    }\n    constructor(state, callback){\n        super(new $c66c6ea353620255$export$28205fa712822499((x)=>null));\n        this._state = null;\n        this._callback = null;\n        this._state = state;\n        this._callback = callback;\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        let view = null;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                if (this._callback) {\n                    this._state.subscribe(()=>{\n                        view.dispose();\n                        view = this._callback(this.state).render(source, target.parentElement);\n                    });\n                    view = this._callback(this.state).render(source, target.parentElement);\n                } else {\n                    this._state.subscribe(()=>{\n                        if (\"textContent\" in target) target.textContent = `${this.state}`;\n                    });\n                    if (\"textContent\" in target) target.textContent = `${this.state}`;\n                }\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(state, callback) {\n        return new $c66c6ea353620255$export$792c882b75ca2192(state, callback);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($c66c6ea353620255$export$792c882b75ca2192);\nconst $c66c6ea353620255$export$60241385465d0a34 = (state, callback)=>$c66c6ea353620255$export$792c882b75ca2192.use(state, callback);\n\n\nvar $6e530dd7df9f7fe5$exports = {};\n\n$parcel$export($6e530dd7df9f7fe5$exports, \"StyleBindig\", () => $6e530dd7df9f7fe5$export$81053cd05d55c9d8);\n$parcel$export($6e530dd7df9f7fe5$exports, \"StyleDirective\", () => $6e530dd7df9f7fe5$export$18211b6e76035cfa);\n$parcel$export($6e530dd7df9f7fe5$exports, \"style\", () => $6e530dd7df9f7fe5$export$1d567c320f4763bc);\n\nclass $6e530dd7df9f7fe5$export$81053cd05d55c9d8 extends (0, $hgUW1$Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $6e530dd7df9f7fe5$export$18211b6e76035cfa extends (0, $hgUW1$HTMLBindingDirective) {\n    constructor(css){\n        super(new $6e530dd7df9f7fe5$export$81053cd05d55c9d8((x)=>null));\n        this.css = null;\n        Object.assign(this, {\n            css: css\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        let view = null;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                if (target instanceof HTMLElement) Object.assign(target.style, this.css);\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(css) {\n        return new $6e530dd7df9f7fe5$export$18211b6e76035cfa(css);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($6e530dd7df9f7fe5$export$18211b6e76035cfa);\nconst $6e530dd7df9f7fe5$export$1d567c320f4763bc = (css)=>$6e530dd7df9f7fe5$export$18211b6e76035cfa.use(css);\n\n\nvar $15db1e855f042fe6$exports = {};\n\n$parcel$export($15db1e855f042fe6$exports, \"UntilBindig\", () => $15db1e855f042fe6$export$f36d8f10294685f8);\n$parcel$export($15db1e855f042fe6$exports, \"UntilDirective\", () => $15db1e855f042fe6$export$51c6edf8ee19b71a);\n$parcel$export($15db1e855f042fe6$exports, \"until\", () => $15db1e855f042fe6$export$a40009bd2c363351);\n\nclass $15db1e855f042fe6$export$f36d8f10294685f8 extends (0, $hgUW1$Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $15db1e855f042fe6$export$51c6edf8ee19b71a extends (0, $hgUW1$HTMLBindingDirective) {\n    constructor(fn, template){\n        super(new $15db1e855f042fe6$export$f36d8f10294685f8((x)=>null));\n        this.fn = null;\n        this.template = null;\n        Object.assign(this, {\n            fn: fn,\n            template: template\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                let loading = this.template.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                this.fn.then((result)=>{\n                    loading.dispose();\n                    result.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                }).catch((error)=>{\n                    console.error(error);\n                    loading.dispose();\n                    (0, $hgUW1$html)`<span>Error: ${error}</span>`.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                });\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(fn, template) {\n        return new $15db1e855f042fe6$export$51c6edf8ee19b71a(fn, template);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($15db1e855f042fe6$export$51c6edf8ee19b71a);\nconst $15db1e855f042fe6$export$a40009bd2c363351 = (fn, template)=>$15db1e855f042fe6$export$51c6edf8ee19b71a.use(fn, template);\n\n\n$parcel$exportWildcard($5193209399721411$exports, $21522158c10703ef$exports);\n$parcel$exportWildcard($5193209399721411$exports, $f6651d38d609160e$exports);\n$parcel$exportWildcard($5193209399721411$exports, $c66c6ea353620255$exports);\n$parcel$exportWildcard($5193209399721411$exports, $6e530dd7df9f7fe5$exports);\n$parcel$exportWildcard($5193209399721411$exports, $15db1e855f042fe6$exports);\n\n\nvar $fde9406d76ec24a9$exports = {};\n\n$parcel$export($fde9406d76ec24a9$exports, \"Observable\", () => $fde9406d76ec24a9$re_export$Observable);\n$parcel$export($fde9406d76ec24a9$exports, \"createObservableObject\", () => $592e71a4a1bc8d5d$export$dcc5cf24d8fb3b41);\n$parcel$export($fde9406d76ec24a9$exports, \"ObservableObject\", () => $f0b90d4a5f4da766$export$b176171395436676);\n$parcel$export($fde9406d76ec24a9$exports, \"State\", () => $fde9406d76ec24a9$re_export$State);\n$parcel$export($fde9406d76ec24a9$exports, \"createState\", () => $fde9406d76ec24a9$re_export$createState);\n$parcel$export($fde9406d76ec24a9$exports, \"createStorage\", () => $fde9406d76ec24a9$re_export$createStorage);\n$parcel$export($fde9406d76ec24a9$exports, \"uuid\", () => $fde9406d76ec24a9$re_export$uuid);\n\n\n\n\n\n // export{\n //   Observable,\n //   volatile,\n // State,\n // createState,\n // createStorage,\n // Storage, \n // StorageKeys, \n // StorageValues, \n // StateValidator,\n // ComponentId,\n // Segment,\n // ParentSegementId,\n // CollectionId,\n // HUID,\n // HierarchicalUUIDOptions,\n // uuid\n // }\n\n\nvar $c5a7ff2cef84a00c$exports = {};\n\n$parcel$export($c5a7ff2cef84a00c$exports, \"html\", () => $c5a7ff2cef84a00c$export$c0bb0b647f701bb5);\n$parcel$export($c5a7ff2cef84a00c$exports, \"customElement\", () => $c5a7ff2cef84a00c$re_export$customElement);\n$parcel$export($c5a7ff2cef84a00c$exports, \"css\", () => $c5a7ff2cef84a00c$re_export$css);\n$parcel$export($c5a7ff2cef84a00c$exports, \"ViewTemplate\", () => $c5a7ff2cef84a00c$re_export$ViewTemplate);\n$parcel$export($c5a7ff2cef84a00c$exports, \"HTMLView\", () => $c5a7ff2cef84a00c$re_export$HTMLView);\n$parcel$export($c5a7ff2cef84a00c$exports, \"volatile\", () => $c5a7ff2cef84a00c$re_export$volatile);\n$parcel$export($c5a7ff2cef84a00c$exports, \"WebComponent\", () => $284c1ee70f828408$export$7f8b9f308979d41d);\n\n\n\nclass $284c1ee70f828408$export$7f8b9f308979d41d extends (0, $hgUW1$FASTElement) {\n    constructor(){\n        super();\n        /* The line ` = ObservableObject.init( this.constructor[\"states\"] );` is initializing an\n    instance property named `` on the `WebComponent` class. This property is being set to the\n    result of calling the `init` method of the `ObservableObject` class, passing in the initial state\n    values defined in the `states` static property of the `WebComponent` class\n    (`this.constructor[\"states\"]`). */ this.$states = (0, $f0b90d4a5f4da766$export$b176171395436676).init(this.constructor[\"states\"]);\n        Object.keys(this.constructor[\"states\"]).forEach((key)=>{\n            // delete this[key];\n            Object.defineProperty(this, key, {\n                get () {\n                    return this.$states[key];\n                },\n                set (value) {\n                    this.$states[key] = value;\n                }\n            });\n        });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n    }\n}\n/* The `static states = {};` line is declaring a static property named `states` on the `WebComponent`\nclass and initializing it as an empty object `{}`. This property is intended to hold the initial\nstate values for the component. By defining it as a static property, it is shared among all\ninstances of the `WebComponent` class rather than being specific to individual instances. This\nallows all instances of the class to access and modify the same set of state values. */ $284c1ee70f828408$export$7f8b9f308979d41d.states = {};\n$284c1ee70f828408$export$7f8b9f308979d41d.define = (0, $hgUW1$FASTElement).define;\n\n\nconst $c5a7ff2cef84a00c$export$c0bb0b647f701bb5 = (0, $hgUW1$html);\n\n\n // import { MainApplication } from './dom/index.js';\n // namespace Lithium{\n //   export const DOM = require('./dom/index.js');\n //   export const Decorators = require('./decorators/index.js');\n //   export const Directives = require('./directives/index.js');\n //   export const Utils = require('./utils/index.js');\n //   export const Component = require('./webComponent/index.js');\n // };\n // export default Lithium;\n // (() => {\n //   if(globalThis.window){\n //     window['lithium'] = {\n //     };\n //   }\n // })()\n\n\nexport {$ed2a677aa7485959$export$1053a9be1bcefef9 as ViewExecutionContext, $ed2a677aa7485959$export$b3890eb0ae9dca99 as render, $b1b98f19caab25c2$export$683a0e8baad8b9c3 as attrState, $b1b98f19caab25c2$import$843d46ff018552b8$7aabe8b3a840d2fd as attr, $a1f8df21dd3b8ee9$export$ca000e230c0caa3e as state, $5193209399721411$re_export$when as when, $5193209399721411$re_export$repeat as repeat, $5193209399721411$re_export$children as children, $5193209399721411$re_export$elements as elements, $5193209399721411$re_export$slotted as slotted, $21522158c10703ef$export$ca3487b83ec6860a as AsyncAppendBindig, $21522158c10703ef$export$5761d9f85430a54b as AsyncAppendDirective, $21522158c10703ef$export$eaa89ade56b7c0c1 as asyncAppend, $f6651d38d609160e$export$7d1e3a5e95ceca43 as createRef, $f6651d38d609160e$export$1ef8aea9a6de98d as RefDirective, $f6651d38d609160e$export$eff4d24c3ff7876e as ref, $c66c6ea353620255$export$28205fa712822499 as StateBindig, $c66c6ea353620255$export$792c882b75ca2192 as StateDirective, $c66c6ea353620255$export$60241385465d0a34 as useState, $6e530dd7df9f7fe5$export$81053cd05d55c9d8 as StyleBindig, $6e530dd7df9f7fe5$export$18211b6e76035cfa as StyleDirective, $6e530dd7df9f7fe5$export$1d567c320f4763bc as style, $15db1e855f042fe6$export$f36d8f10294685f8 as UntilBindig, $15db1e855f042fe6$export$51c6edf8ee19b71a as UntilDirective, $15db1e855f042fe6$export$a40009bd2c363351 as until, $fde9406d76ec24a9$re_export$Observable as Observable, $592e71a4a1bc8d5d$export$dcc5cf24d8fb3b41 as createObservableObject, $f0b90d4a5f4da766$export$b176171395436676 as ObservableObject, $fde9406d76ec24a9$re_export$State as State, $fde9406d76ec24a9$re_export$createState as createState, $fde9406d76ec24a9$re_export$createStorage as createStorage, $fde9406d76ec24a9$re_export$uuid as uuid, $c5a7ff2cef84a00c$export$c0bb0b647f701bb5 as html, $c5a7ff2cef84a00c$re_export$customElement as customElement, $c5a7ff2cef84a00c$re_export$css as css, $c5a7ff2cef84a00c$re_export$ViewTemplate as ViewTemplate, $c5a7ff2cef84a00c$re_export$HTMLView as HTMLView, $c5a7ff2cef84a00c$re_export$volatile as volatile, $284c1ee70f828408$export$7f8b9f308979d41d as WebComponent};\n//# sourceMappingURL=module.js.map\n","export * from './dom';\nexport * from './decorators';\nexport * from './directives';\nexport * from './utils';\nexport * from './webComponent';\n\n// import { MainApplication } from './dom/index.js';\n\n// namespace Lithium{\n//   export const DOM = require('./dom/index.js');\n//   export const Decorators = require('./decorators/index.js');\n//   export const Directives = require('./directives/index.js');\n//   export const Utils = require('./utils/index.js');\n//   export const Component = require('./webComponent/index.js');\n// };\n\n// export default Lithium;\n\n// (() => {\n\n//   if(globalThis.window){\n\n//     window['lithium'] = {\n\n//     };\n\n//   }\n  \n// })()","import { ViewTemplate } from '@microsoft/fast-element/dist/esm';\nimport { ObservableObject } from '../utils/observable-object';\nimport { state } from '../decorators';\n\nexport class ViewExecutionContext< T = any , States extends Record<string , any> = Record<string , any> >{\n\n  $states = ObservableObject.init< any , any >({});\n  get states(){ return this.$states }\n  #_state_keys:string[] = [];\n  \n  createState = <T>( key:keyof States , value:T ):[ state:T , setter:( newValue:T ) => void ] => {\n\n    if(this.#_state_keys.includes(key as string))return this.useState( key );\n\n    Object.defineProperty( this , key , {\n      get(){\n        return JSON.parse(this.states[key]);\n      },\n      set( value ){\n        \n        if(!this.#_state_keys.includes(key)){\n\n          this.#_state_keys.push( key );\n\n          this.$states = ObservableObject.init({\n            [key] :  JSON.stringify(value),\n            ...Object.fromEntries(\n              new Map(\n                Array.from( this.#_state_keys , ( key ) => {\n                  return [ key , this.$states[`${key}`] ]\n                } )\n              )\n            )\n          });\n\n        }\n\n        this.$states[key] = JSON.stringify(value);\n\n      }\n    });\n\n    this[key as string] = value;\n    return this.useState( key );\n\n  }\n\n  useState = <T>( key:keyof States ):[ state:T , setter:( newValue:T ) => void ] => {\n\n    return [ this[key as string] , ( newValue ) => {\n      console.log({ newValue })\n      this[key as string] = newValue;\n    } ];\n\n  }\n\n  createConsumable = <T = any>( key:string , value:T ) => {\n    state( this , key , value , false );\n  }\n\n  constructor( data?:T ){\n      Object.assign( this , data );\n  }\n\n  static init< T extends Record<string , any> = {} >( data?:T ):ViewContext<T>{\n      return new ViewExecutionContext( data ) as any as ViewContext<T>;\n  }\n\n}\n\nexport type ViewContext< T = Record<string , any> , States = Record<string , any> > = ViewExecutionContext<T , States> & T;\n\nexport function render< T extends Record<string , any> = {} , Storage extends Record<string , any> = Record<string , any> >(template: ViewTemplate<ViewExecutionContext<any, Record<string, any>>, any>, container: HTMLElement = document.body , data = {} ) {\n\n  let context = ViewExecutionContext.init(data);\n  return template.render( context , container);\n\n}","import { ObservableObject , Observable } from './models';\n\nexport function createObservableObject< Key extends string , Value extends any >( initialObject:Record< Key , Value > ){\n  return ObservableObject.init< Key , Value >( initialObject );\n}\n\nexport { ObservableObject , Observable };","import { Observable } from \"@microsoft/fast-element/dist/esm\";\n\nexport class ObservableObject< key extends string , value extends any = any > extends Object{\n\n  static init< key extends string , value extends any >( initialObject:Record<key , value> ){\n    let observabe = new ObservableObject< key , value >( initialObject );\n    return observabe.createProxy();\n  }\n\n  $data:Record<string , value> = {};\n\n  constructor( initialObject:Record<key , value> ){\n    super();\n\n    Object.keys( initialObject ).forEach(( key:any ) => {\n      this.set( key , initialObject[key] );\n    })\n\n  };\n\n  set = <T extends value = any>( key:key , value:T ) => {   \n\n    this.$data[`_${key}`] = value as any;\n    Observable.defineProperty( this.$data, key);\n    return this.$data[key];\n\n  }\n\n  createProxy(){\n\n    return new Proxy( this.$data , {\n      get( store , propKey:string ){\n\n        let result:any = undefined;\n\n        try{\n          result = store[propKey];\n        }\n        catch(error){\n          console.error(error);\n        }\n        finally{\n          return result;\n        }\n\n      },\n      set( store , propKey: string, value: any ){\n\n        if(store[propKey]){\n          store[propKey] = value;\n        }\n        else {\n          store[ `_${propKey}` ] = value;\n          Observable.defineProperty( store, propKey);\n        }\n\n        return true;\n  \n      }\n    })\n\n  }\n\n}\n\nexport { Observable };","export * from './attributeState';\nexport * from './state';","import { DecoratorAttributeConfiguration, attr } from \"@microsoft/fast-element\";\nimport { state } from './state';\n\n/**\n * @AttributeState decorator\n * A decorator to define a property as both an attribute and a state on a WebComponent.\n * This combines the behavior of @attr and @State decorators.\n * \n * @param {DecoratorAttributeConfiguration} options - Options to configure the attribute.\n * @returns {Function} - The decorator function.\n * \n * @example\n * ```typescript\n * // Define an editable title component using the AttributeState decorator\n * \n * customElement({\n *     name: 'editable-title',\n *     template : html`...`\n * })\n * class EditableTitle extends WebComponent {\n *     AttributeState() level: number = 2;\n *     AttributeState() editable: string = \"false\";\n *     State value: string = \"Hello World\";\n * \n *     handleInput(event) {\n *         this.value = event.target.innerText;\n *     }\n * \n *     connectedCallback() {\n *         super.connectedCallback();\n *     }\n * }\n * ```\n */\nexport function attrState( options:DecoratorAttributeConfiguration = {} ){\n\n  return ( target, propertyKey: string ) => {\n    attr( options )( target , propertyKey );\n    state( target , propertyKey );\n  }\n\n}\n\nexport { attr };","import { observable } from \"@microsoft/fast-element\";\n\n/**\n * @State decorator\n * A decorator to define a state property on a WebComponent.\n * This state property is observable, and its changes are detected and handled.\n * \n * @param {Object} target - The prototype of the class where the state property is defined.\n * @param {string} propertyKey - The name of the property to be defined as a state.\n * \n * @example\n * ```typescript\n * /// Define a counter component using the State decorator\n\n * customElement({\n *     name: 'counter-element',\n *     template: html`...`\n * })\n * class CounterElement extends WebComponent {\n *     State count: number = 0;\n * \n *     increment() {\n *         this.count += 1;\n *     }\n * \n *     connectedCallback() {\n *         super.connectedCallback();s\n *     }\n * }\n * ```\n */\nexport function state(target, propertyKey: string , value:any = null , constructible = false){\n\n  if(constructible)target.constructor.states = target.constructor.states || {};\n\n  Object.defineProperty( target , propertyKey , {\n    get(){\n      return target.$states[propertyKey];\n    },\n    set(newValue){\n      target.$states[propertyKey] = newValue;\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  } );\n\n  observable(target, propertyKey);\n\n  if(value)target[propertyKey] = value;\n\n}","import {\n  when,\n  repeat,\n  // ref,\n  children,\n  elements,\n  slotted,\n} from '@microsoft/fast-element';\n\nexport {\n  when,\n  repeat,\n  children,\n  elements,\n  slotted\n}\n\nexport * from './assyncAppend.js';\nexport * from './ref.js';\nexport * from './state.js';\nexport * from './style.js';\nexport * from './until.js';","import { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , html , Binding } from '@microsoft/fast-element';\nimport type { Subscriber , BindingDirective, ExpressionObserver } from '@microsoft/fast-element';\n\nexport class AsyncAppendBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class AsyncAppendDirective<T = any> extends HTMLBindingDirective {\n\n  fn:Promise<T> = null;\n  callback:( result:T ) => ViewTemplate = null;\n\n  constructor( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) {\n    super( new AsyncAppendBindig( (x) => null ) );\n    Object.assign( this , { fn , callback } );\n  }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n\n    return {\n        bind : (source:HTMLView ) => {\n\n          let target = source.targets[targetNodeId];\n\n          this.fn\n          .then(( result ) => {\n            this.callback( result ).render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n          .catch(( error ) => {\n            console.error(error)\n            html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ){\n    return new AsyncAppendDirective( fn , callback);\n  }\n\n}\n\nHTMLDirective.define( AsyncAppendDirective );\n\nexport { Subscriber }\n\nexport const asyncAppend = <T = any>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) => AsyncAppendDirective.use<T>( fn , callback );","import { HTMLDirective, HTMLView, Binding, BindingDirective, ExpressionObserver, Subscriber, StatelessAttachedAttributeDirective } from '@microsoft/fast-element';\n\nexport interface IElementRef< T extends Node >{\n  value : T;\n}\n\nexport function createRef< T extends Node >():IElementRef<T>{\n  return {\n    value : null\n  }\n}\n\nexport class RefDirective<T extends Node> extends StatelessAttachedAttributeDirective<IElementRef<T>> {\n\n  options:IElementRef<T> = null;\n\n  constructor( options:IElementRef<T> ) {\n    super( options );\n    Object.assign( this , { options } )\n  }\n\n  bind(controller: HTMLView): void {\n\n    let { lastChild:target } = controller;\n\n    this.options.value = target as any;\n\n  }\n\n  static use<T extends Node>( options:IElementRef<T> ){\n    return new RefDirective<T>( options );\n  }\n\n}\n\nHTMLDirective.define( RefDirective )\n\nexport const ref = <T extends Node>( options:IElementRef<T> ) => RefDirective.use<T>( options );","// import { ViewTemplate, HTMLBindingDirective, ExecutionContext } from '@microsoft/fast-element';\nimport { State , createState } from '@lithium-framework/state';\nimport { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class StateBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StateDirective<T = any> extends HTMLBindingDirective {\n\n    _state:State<T> = null;\n    get state(){ return this._state.mutator[0] }\n    set state( value:T ){ this._state.mutator[1](value) }\n\n    _callback:( newValue:T ) => ViewTemplate = null;\n\n    constructor( state: State<T> , callback:( newValue:T ) => ViewTemplate ) {\n        super( new StateBindig( (x) => null ) );\n        this._state = state;\n        this._callback = callback;\n    }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n    let view:HTMLView = null;\n\n    return {\n        bind : (source:HTMLView) => {\n\n            let target = source.targets[targetNodeId];\n\n            if(this._callback){\n\n                this._state.subscribe(() => {\n                    view.dispose();\n                    view = this._callback( this.state ).render( source , target.parentElement );\n                });\n\n                view = this._callback( this.state ).render( source , target.parentElement );\n\n            }\n\n            else{\n\n                this._state.subscribe(() => {\n                    if(\"textContent\" in target){\n                        target.textContent = `${this.state}`;\n                    }\n                });\n\n                if(\"textContent\" in target){\n                    target.textContent = `${this.state}`;\n                }\n\n            }\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T = any>( state , callback ){\n    return new StateDirective<T>( state , callback )\n  }\n\n}\n\nHTMLDirective.define( StateDirective )\n\nexport const useState = <T>( state: State<T> , callback?:( newValue:T ) => ViewTemplate ) => StateDirective.use<T>( state , callback );","import { HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\nimport { Properties } from '../utils/css-object';\n\nexport class StyleBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StyleDirective extends HTMLBindingDirective {\n\n  css:Properties = null;\n\n  constructor( css:Properties ) {\n      super( new StyleBindig( (x) => null ) );\n      Object.assign( this , { css } );\n\n  }\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n  let view:HTMLView = null;\n\n  return {\n      bind : (source:HTMLView) => {\n\n        let target = source.targets[targetNodeId];\n        if(target instanceof HTMLElement)Object.assign( target.style , this.css );\n\n      },\n      unbind : () => {\n          // Nettoyage si nécessaire\n      }\n  };\n\n}\n\nstatic use( css:Properties ){\n  return new StyleDirective( css )\n}\n\n}\n\nHTMLDirective.define( StyleDirective );\n\nexport const style = ( css:Properties ) => StyleDirective.use( css );","import { ViewTemplate , html , HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class UntilBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class UntilDirective extends HTMLBindingDirective {\n\n  fn:Promise<ViewTemplate> = null;\n  template:ViewTemplate = null;\n\n  constructor( fn:Promise<ViewTemplate> , template:ViewTemplate ) {\n    super( new UntilBindig( (x) => null ) );\n    Object.assign( this , { fn , template } );\n}\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n\n  return {\n    bind : (source:HTMLView) => {\n\n      let target = source.targets[targetNodeId];\n      let loading = this.template.render( source , target instanceof HTMLElement ? target : target.parentElement );\n\n      this.fn\n      .then(( result ) => {\n        loading.dispose()\n        result.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n      .catch(( error ) => {\n        console.error(error);\n        loading.dispose();\n        html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n\n    },\n    unbind : () => {\n        // Nettoyage si nécessaire\n    }\n};\n\n}\n\nstatic use( fn:Promise<ViewTemplate> , template: ViewTemplate ){\n  return new UntilDirective( fn , template);\n}\n\n}\n\nHTMLDirective.define( UntilDirective );\n\nexport const until = ( fn:Promise<ViewTemplate> , template:ViewTemplate ) => UntilDirective.use( fn , template );","export {\n  Observable,\n} from '@microsoft/fast-element/dist/esm';\n\nexport {\n  // _cssObject,\n  // Properties,\n  // createCSS\n} from './css-object';\n\nexport {\n  createObservableObject,\n  ObservableObject\n} from './observable-object';\n\nexport { \n  State,\n  createState\n} from '@lithium-framework/state';\n\nexport { \n  createStorage,\n  // Storage, \n  // StorageKeys, \n  // StorageValues, \n  // StateValidator\n} from '@lithium-framework/context';\n\nexport {\n  // ComponentId,\n  // Segment,\n  // ParentSegementId,\n  // CollectionId,\n  // HUID,\n  // HierarchicalUUIDOptions,\n  uuid\n} from '@lithium-framework/huid';\n\n// export{\n//   Observable,\n//   volatile,\n  // State,\n  // createState,\n  // createStorage,\n  // Storage, \n  // StorageKeys, \n  // StorageValues, \n  // StateValidator,\n  // ComponentId,\n  // Segment,\n  // ParentSegementId,\n  // CollectionId,\n  // HUID,\n  // HierarchicalUUIDOptions,\n  // uuid\n// }","export { \n  customElement , \n  css,\n  // html,\n  ViewTemplate,\n  HTMLView,\n  volatile,\n} from \"@microsoft/fast-element\";\n\nimport {\n  html as _html,\n  HTMLTemplateTag\n} from \"@microsoft/fast-element\"\n\nexport const html:HTMLTemplateTag = _html;\n\nexport { \n  WebComponent \n} from './model';","import { FASTElement } from \"@microsoft/fast-element\";\nimport { ObservableObject } from '../utils/observable-object';\n\n/* The WebComponent class extends FASTElement and provides state management functionality using\nObservableObject. */\nexport class WebComponent extends FASTElement{\n\n  /* The `static states = {};` line is declaring a static property named `states` on the `WebComponent`\n  class and initializing it as an empty object `{}`. This property is intended to hold the initial\n  state values for the component. By defining it as a static property, it is shared among all\n  instances of the `WebComponent` class rather than being specific to individual instances. This\n  allows all instances of the class to access and modify the same set of state values. */\n  static states = {};\n\n  /* The line ` = ObservableObject.init( this.constructor[\"states\"] );` is initializing an\n  instance property named `` on the `WebComponent` class. This property is being set to the\n  result of calling the `init` method of the `ObservableObject` class, passing in the initial state\n  values defined in the `states` static property of the `WebComponent` class\n  (`this.constructor[\"states\"]`). */\n  $states = ObservableObject.init( this.constructor[\"states\"] );\n\n  constructor(){\n    super();\n\n    Object.keys(this.constructor[\"states\"]).forEach( key => {\n      // delete this[key];\n      Object.defineProperty( this , key , {\n        get(){\n          return this.$states[key];\n        },\n        set( value ){\n          this.$states[key] = value;\n        }\n      } )\n      \n    });\n\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  static define = FASTElement.define\n  \n}","import { isFunction, isString, KernelServiceId, } from \"../interfaces.js\";\nimport { createMetadataLocator, FAST, makeSerializationNoop } from \"../platform.js\";\nimport { Updates } from \"./update-queue.js\";\nimport { PropertyChangeNotifier, SubscriberSet } from \"./notifier.js\";\n/**\n * Describes how the source's lifetime relates to its controller's lifetime.\n * @public\n */\nexport const SourceLifetime = Object.freeze({\n    /**\n     * The source to controller lifetime relationship is unknown.\n     */\n    unknown: void 0,\n    /**\n     * The source and controller lifetimes are coupled to one another.\n     * They can/will be GC'd together.\n     */\n    coupled: 1,\n});\n/**\n * Common Observable APIs.\n * @public\n */\nexport const Observable = FAST.getById(KernelServiceId.observable, () => {\n    const queueUpdate = Updates.enqueue;\n    const volatileRegex = /(:|&&|\\|\\||if|\\?\\.)/;\n    const notifierLookup = new WeakMap();\n    let watcher = void 0;\n    let createArrayObserver = (array) => {\n        throw FAST.error(1101 /* Message.needsArrayObservation */);\n    };\n    function getNotifier(source) {\n        var _a;\n        let found = (_a = source.$fastController) !== null && _a !== void 0 ? _a : notifierLookup.get(source);\n        if (found === void 0) {\n            Array.isArray(source)\n                ? (found = createArrayObserver(source))\n                : notifierLookup.set(source, (found = new PropertyChangeNotifier(source)));\n        }\n        return found;\n    }\n    const getAccessors = createMetadataLocator();\n    class DefaultObservableAccessor {\n        constructor(name) {\n            this.name = name;\n            this.field = `_${name}`;\n            this.callback = `${name}Changed`;\n        }\n        getValue(source) {\n            if (watcher !== void 0) {\n                watcher.watch(source, this.name);\n            }\n            return source[this.field];\n        }\n        setValue(source, newValue) {\n            const field = this.field;\n            const oldValue = source[field];\n            if (oldValue !== newValue) {\n                source[field] = newValue;\n                const callback = source[this.callback];\n                if (isFunction(callback)) {\n                    callback.call(source, oldValue, newValue);\n                }\n                getNotifier(source).notify(this.name);\n            }\n        }\n    }\n    class ExpressionNotifierImplementation extends SubscriberSet {\n        constructor(expression, initialSubscriber, isVolatileBinding = false) {\n            super(expression, initialSubscriber);\n            this.expression = expression;\n            this.isVolatileBinding = isVolatileBinding;\n            this.needsRefresh = true;\n            this.needsQueue = true;\n            this.isAsync = true;\n            this.first = this;\n            this.last = null;\n            this.propertySource = void 0;\n            this.propertyName = void 0;\n            this.notifier = void 0;\n            this.next = void 0;\n        }\n        setMode(isAsync) {\n            this.isAsync = this.needsQueue = isAsync;\n        }\n        bind(controller) {\n            this.controller = controller;\n            const value = this.observe(controller.source, controller.context);\n            if (!controller.isBound && this.requiresUnbind(controller)) {\n                controller.onUnbind(this);\n            }\n            return value;\n        }\n        requiresUnbind(controller) {\n            return (controller.sourceLifetime !== SourceLifetime.coupled ||\n                this.first !== this.last ||\n                this.first.propertySource !== controller.source);\n        }\n        unbind(controller) {\n            this.dispose();\n        }\n        observe(source, context) {\n            if (this.needsRefresh && this.last !== null) {\n                this.dispose();\n            }\n            const previousWatcher = watcher;\n            watcher = this.needsRefresh ? this : void 0;\n            this.needsRefresh = this.isVolatileBinding;\n            let result;\n            try {\n                result = this.expression(source, context);\n            }\n            finally {\n                watcher = previousWatcher;\n            }\n            return result;\n        }\n        // backwards compat with v1 kernel\n        disconnect() {\n            this.dispose();\n        }\n        dispose() {\n            if (this.last !== null) {\n                let current = this.first;\n                while (current !== void 0) {\n                    current.notifier.unsubscribe(this, current.propertyName);\n                    current = current.next;\n                }\n                this.last = null;\n                this.needsRefresh = this.needsQueue = this.isAsync;\n            }\n        }\n        watch(propertySource, propertyName) {\n            const prev = this.last;\n            const notifier = getNotifier(propertySource);\n            const current = prev === null ? this.first : {};\n            current.propertySource = propertySource;\n            current.propertyName = propertyName;\n            current.notifier = notifier;\n            notifier.subscribe(this, propertyName);\n            if (prev !== null) {\n                if (!this.needsRefresh) {\n                    // Declaring the variable prior to assignment below circumvents\n                    // a bug in Angular's optimization process causing infinite recursion\n                    // of this watch() method. Details https://github.com/microsoft/fast/issues/4969\n                    let prevValue;\n                    watcher = void 0;\n                    /* eslint-disable-next-line */\n                    prevValue = prev.propertySource[prev.propertyName];\n                    /* eslint-disable-next-line */\n                    watcher = this;\n                    if (propertySource === prevValue) {\n                        this.needsRefresh = true;\n                    }\n                }\n                prev.next = current;\n            }\n            this.last = current;\n        }\n        handleChange() {\n            if (this.needsQueue) {\n                this.needsQueue = false;\n                queueUpdate(this);\n            }\n            else if (!this.isAsync) {\n                this.call();\n            }\n        }\n        call() {\n            if (this.last !== null) {\n                this.needsQueue = this.isAsync;\n                this.notify(this);\n            }\n        }\n        *records() {\n            let next = this.first;\n            while (next !== void 0) {\n                yield next;\n                next = next.next;\n            }\n        }\n    }\n    makeSerializationNoop(ExpressionNotifierImplementation);\n    return Object.freeze({\n        /**\n         * @internal\n         * @param factory - The factory used to create array observers.\n         */\n        setArrayObserverFactory(factory) {\n            createArrayObserver = factory;\n        },\n        /**\n         * Gets a notifier for an object or Array.\n         * @param source - The object or Array to get the notifier for.\n         */\n        getNotifier,\n        /**\n         * Records a property change for a source object.\n         * @param source - The object to record the change against.\n         * @param propertyName - The property to track as changed.\n         */\n        track(source, propertyName) {\n            watcher && watcher.watch(source, propertyName);\n        },\n        /**\n         * Notifies watchers that the currently executing property getter or function is volatile\n         * with respect to its observable dependencies.\n         */\n        trackVolatile() {\n            watcher && (watcher.needsRefresh = true);\n        },\n        /**\n         * Notifies subscribers of a source object of changes.\n         * @param source - the object to notify of changes.\n         * @param args - The change args to pass to subscribers.\n         */\n        notify(source, args) {\n            /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n            getNotifier(source).notify(args);\n        },\n        /**\n         * Defines an observable property on an object or prototype.\n         * @param target - The target object to define the observable on.\n         * @param nameOrAccessor - The name of the property to define as observable;\n         * or a custom accessor that specifies the property name and accessor implementation.\n         */\n        defineProperty(target, nameOrAccessor) {\n            if (isString(nameOrAccessor)) {\n                nameOrAccessor = new DefaultObservableAccessor(nameOrAccessor);\n            }\n            getAccessors(target).push(nameOrAccessor);\n            Reflect.defineProperty(target, nameOrAccessor.name, {\n                enumerable: true,\n                get() {\n                    return nameOrAccessor.getValue(this);\n                },\n                set(newValue) {\n                    nameOrAccessor.setValue(this, newValue);\n                },\n            });\n        },\n        /**\n         * Finds all the observable accessors defined on the target,\n         * including its prototype chain.\n         * @param target - The target object to search for accessor on.\n         */\n        getAccessors,\n        /**\n         * Creates a {@link ExpressionNotifier} that can watch the\n         * provided {@link Expression} for changes.\n         * @param expression - The binding to observe.\n         * @param initialSubscriber - An initial subscriber to changes in the binding value.\n         * @param isVolatileBinding - Indicates whether the binding's dependency list must be re-evaluated on every value evaluation.\n         */\n        binding(expression, initialSubscriber, isVolatileBinding = this.isVolatileBinding(expression)) {\n            return new ExpressionNotifierImplementation(expression, initialSubscriber, isVolatileBinding);\n        },\n        /**\n         * Determines whether a binding expression is volatile and needs to have its dependency list re-evaluated\n         * on every evaluation of the value.\n         * @param expression - The binding to inspect.\n         */\n        isVolatileBinding(expression) {\n            return volatileRegex.test(expression.toString());\n        },\n    });\n});\n/**\n * Decorator: Defines an observable property on the target.\n * @param target - The target to define the observable on.\n * @param nameOrAccessor - The property name or accessor to define the observable as.\n * @public\n */\nexport function observable(target, nameOrAccessor) {\n    Observable.defineProperty(target, nameOrAccessor);\n}\n/**\n * Decorator: Marks a property getter as having volatile observable dependencies.\n * @param target - The target that the property is defined on.\n * @param name - The property name.\n * @param name - The existing descriptor.\n * @public\n */\nexport function volatile(target, name, descriptor) {\n    return Object.assign({}, descriptor, {\n        get() {\n            Observable.trackVolatile();\n            return descriptor.get.apply(this);\n        },\n    });\n}\nconst contextEvent = FAST.getById(KernelServiceId.contextEvent, () => {\n    let current = null;\n    return {\n        get() {\n            return current;\n        },\n        set(event) {\n            current = event;\n        },\n    };\n});\n/**\n * Provides additional contextual information available to behaviors and expressions.\n * @public\n */\nexport const ExecutionContext = Object.freeze({\n    /**\n     * A default execution context.\n     */\n    default: {\n        index: 0,\n        length: 0,\n        get event() {\n            return ExecutionContext.getEvent();\n        },\n        eventDetail() {\n            return this.event.detail;\n        },\n        eventTarget() {\n            return this.event.target;\n        },\n    },\n    /**\n     * Gets the current event.\n     * @returns An event object.\n     */\n    getEvent() {\n        return contextEvent.get();\n    },\n    /**\n     * Sets the current event.\n     * @param event - An event object.\n     */\n    setEvent(event) {\n        contextEvent.set(event);\n    },\n});\n","let kernelMode;\nconst kernelAttr = \"fast-kernel\";\ntry {\n    if (document.currentScript) {\n        kernelMode = document.currentScript.getAttribute(kernelAttr);\n    }\n    else {\n        const scripts = document.getElementsByTagName(\"script\");\n        const currentScript = scripts[scripts.length - 1];\n        kernelMode = currentScript.getAttribute(kernelAttr);\n    }\n}\ncatch (e) {\n    kernelMode = \"isolate\";\n}\nlet KernelServiceId;\nswitch (kernelMode) {\n    case \"share\": // share the kernel across major versions\n        KernelServiceId = Object.freeze({\n            updateQueue: 1,\n            observable: 2,\n            contextEvent: 3,\n            elementRegistry: 4,\n        });\n        break;\n    case \"share-v2\": // only share the kernel with other v2 instances\n        KernelServiceId = Object.freeze({\n            updateQueue: 1.2,\n            observable: 2.2,\n            contextEvent: 3.2,\n            elementRegistry: 4.2,\n        });\n        break;\n    default:\n        // fully isolate the kernel from all other FAST instances\n        const postfix = `-${Math.random().toString(36).substring(2, 8)}`;\n        KernelServiceId = Object.freeze({\n            updateQueue: `1.2${postfix}`,\n            observable: `2.2${postfix}`,\n            contextEvent: `3.2${postfix}`,\n            elementRegistry: `4.2${postfix}`,\n        });\n        break;\n}\nexport { KernelServiceId };\n/**\n * Determines whether or not an object is a function.\n * @public\n */\nexport const isFunction = (object) => typeof object === \"function\";\n/**\n * Determines whether or not an object is a string.\n * @public\n */\nexport const isString = (object) => typeof object === \"string\";\n/**\n * A function which does nothing.\n * @public\n */\nexport const noop = () => void 0;\n","import { noop } from \"./interfaces.js\";\nimport \"./polyfills.js\";\n// ensure FAST global - duplicated debug.ts\nconst propConfig = {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n};\nif (globalThis.FAST === void 0) {\n    Reflect.defineProperty(globalThis, \"FAST\", Object.assign({ value: Object.create(null) }, propConfig));\n}\n/**\n * The FAST global.\n * @public\n */\nexport const FAST = globalThis.FAST;\nif (FAST.getById === void 0) {\n    const storage = Object.create(null);\n    Reflect.defineProperty(FAST, \"getById\", Object.assign({ value(id, initialize) {\n            let found = storage[id];\n            if (found === void 0) {\n                found = initialize ? (storage[id] = initialize()) : null;\n            }\n            return found;\n        } }, propConfig));\n}\nif (FAST.error === void 0) {\n    Object.assign(FAST, {\n        warn() { },\n        error(code) {\n            return new Error(`Error ${code}`);\n        },\n        addMessages() { },\n    });\n}\n/**\n * A readonly, empty array.\n * @remarks\n * Typically returned by APIs that return arrays when there are\n * no actual items to return.\n * @public\n */\nexport const emptyArray = Object.freeze([]);\n/**\n * Do not change. Part of shared kernel contract.\n * @internal\n */\nexport function createTypeRegistry() {\n    const typeToDefinition = new Map();\n    return Object.freeze({\n        register(definition) {\n            if (typeToDefinition.has(definition.type)) {\n                return false;\n            }\n            typeToDefinition.set(definition.type, definition);\n            return true;\n        },\n        getByType(key) {\n            return typeToDefinition.get(key);\n        },\n        getForInstance(object) {\n            if (object === null || object === void 0) {\n                return void 0;\n            }\n            return typeToDefinition.get(object.constructor);\n        },\n    });\n}\n/**\n * Creates a function capable of locating metadata associated with a type.\n * @returns A metadata locator function.\n * @internal\n */\nexport function createMetadataLocator() {\n    const metadataLookup = new WeakMap();\n    return function (target) {\n        let metadata = metadataLookup.get(target);\n        if (metadata === void 0) {\n            let currentTarget = Reflect.getPrototypeOf(target);\n            while (metadata === void 0 && currentTarget !== null) {\n                metadata = metadataLookup.get(currentTarget);\n                currentTarget = Reflect.getPrototypeOf(currentTarget);\n            }\n            metadata = metadata === void 0 ? [] : metadata.slice(0);\n            metadataLookup.set(target, metadata);\n        }\n        return metadata;\n    };\n}\n/**\n * Makes a type noop for JSON serialization.\n * @param type - The type to make noop for JSON serialization.\n * @internal\n */\nexport function makeSerializationNoop(type) {\n    type.prototype.toJSON = noop;\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n(function ensureGlobalThis() {\n    if (typeof globalThis !== \"undefined\") {\n        // We're running in a modern environment.\n        return;\n    }\n    // @ts-ignore\n    if (typeof global !== \"undefined\") {\n        // We're running in NodeJS\n        // @ts-ignore\n        global.globalThis = global;\n    }\n    else if (typeof self !== \"undefined\") {\n        self.globalThis = self;\n    }\n    else if (typeof window !== \"undefined\") {\n        // We're running in the browser's main thread.\n        window.globalThis = window;\n    }\n    else {\n        // Hopefully we never get here...\n        // Not all environments allow eval and Function. Use only as a last resort:\n        // eslint-disable-next-line no-new-func\n        const result = new Function(\"return this\")();\n        result.globalThis = result;\n    }\n})();\n","import { KernelServiceId } from \"../interfaces.js\";\nimport { FAST } from \"../platform.js\";\n/**\n * The default UpdateQueue.\n * @public\n */\nexport const Updates = FAST.getById(KernelServiceId.updateQueue, () => {\n    const tasks = [];\n    const pendingErrors = [];\n    const rAF = globalThis.requestAnimationFrame;\n    let updateAsync = true;\n    function throwFirstError() {\n        if (pendingErrors.length) {\n            throw pendingErrors.shift();\n        }\n    }\n    function tryRunTask(task) {\n        try {\n            task.call();\n        }\n        catch (error) {\n            if (updateAsync) {\n                pendingErrors.push(error);\n                setTimeout(throwFirstError, 0);\n            }\n            else {\n                tasks.length = 0;\n                throw error;\n            }\n        }\n    }\n    function process() {\n        const capacity = 1024;\n        let index = 0;\n        while (index < tasks.length) {\n            tryRunTask(tasks[index]);\n            index++;\n            // Prevent leaking memory for long chains of recursive calls to `enqueue`.\n            // If we call `enqueue` within a task scheduled by `enqueue`, the queue will\n            // grow, but to avoid an O(n) walk for every task we execute, we don't\n            // shift tasks off the queue after they have been executed.\n            // Instead, we periodically shift 1024 tasks off the queue.\n            if (index > capacity) {\n                // Manually shift all values starting at the index back to the\n                // beginning of the queue.\n                for (let scan = 0, newLength = tasks.length - index; scan < newLength; scan++) {\n                    tasks[scan] = tasks[scan + index];\n                }\n                tasks.length -= index;\n                index = 0;\n            }\n        }\n        tasks.length = 0;\n    }\n    function enqueue(callable) {\n        tasks.push(callable);\n        if (tasks.length < 2) {\n            updateAsync ? rAF(process) : process();\n        }\n    }\n    return Object.freeze({\n        enqueue,\n        next: () => new Promise(enqueue),\n        process,\n        setMode: (isAsync) => (updateAsync = isAsync),\n    });\n});\n","/**\n * An implementation of {@link Notifier} that efficiently keeps track of\n * subscribers interested in a specific change notification on an\n * observable subject.\n *\n * @remarks\n * This set is optimized for the most common scenario of 1 or 2 subscribers.\n * With this in mind, it can store a subscriber in an internal field, allowing it to avoid Array#push operations.\n * If the set ever exceeds two subscribers, it upgrades to an array automatically.\n * @public\n */\nexport class SubscriberSet {\n    /**\n     * Creates an instance of SubscriberSet for the specified subject.\n     * @param subject - The subject that subscribers will receive notifications from.\n     * @param initialSubscriber - An initial subscriber to changes.\n     */\n    constructor(subject, initialSubscriber) {\n        this.sub1 = void 0;\n        this.sub2 = void 0;\n        this.spillover = void 0;\n        this.subject = subject;\n        this.sub1 = initialSubscriber;\n    }\n    /**\n     * Checks whether the provided subscriber has been added to this set.\n     * @param subscriber - The subscriber to test for inclusion in this set.\n     */\n    has(subscriber) {\n        return this.spillover === void 0\n            ? this.sub1 === subscriber || this.sub2 === subscriber\n            : this.spillover.indexOf(subscriber) !== -1;\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     */\n    subscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.has(subscriber)) {\n                return;\n            }\n            if (this.sub1 === void 0) {\n                this.sub1 = subscriber;\n                return;\n            }\n            if (this.sub2 === void 0) {\n                this.sub2 = subscriber;\n                return;\n            }\n            this.spillover = [this.sub1, this.sub2, subscriber];\n            this.sub1 = void 0;\n            this.sub2 = void 0;\n        }\n        else {\n            const index = spillover.indexOf(subscriber);\n            if (index === -1) {\n                spillover.push(subscriber);\n            }\n        }\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     */\n    unsubscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.sub1 === subscriber) {\n                this.sub1 = void 0;\n            }\n            else if (this.sub2 === subscriber) {\n                this.sub2 = void 0;\n            }\n        }\n        else {\n            const index = spillover.indexOf(subscriber);\n            if (index !== -1) {\n                spillover.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Notifies all subscribers.\n     * @param args - Data passed along to subscribers during notification.\n     */\n    notify(args) {\n        const spillover = this.spillover;\n        const subject = this.subject;\n        if (spillover === void 0) {\n            const sub1 = this.sub1;\n            const sub2 = this.sub2;\n            if (sub1 !== void 0) {\n                sub1.handleChange(subject, args);\n            }\n            if (sub2 !== void 0) {\n                sub2.handleChange(subject, args);\n            }\n        }\n        else {\n            for (let i = 0, ii = spillover.length; i < ii; ++i) {\n                spillover[i].handleChange(subject, args);\n            }\n        }\n    }\n}\n/**\n * An implementation of Notifier that allows subscribers to be notified\n * of individual property changes on an object.\n * @public\n */\nexport class PropertyChangeNotifier {\n    /**\n     * Creates an instance of PropertyChangeNotifier for the specified subject.\n     * @param subject - The object that subscribers will receive notifications for.\n     */\n    constructor(subject) {\n        this.subscribers = {};\n        this.subjectSubscribers = null;\n        this.subject = subject;\n    }\n    /**\n     * Notifies all subscribers, based on the specified property.\n     * @param propertyName - The property name, passed along to subscribers during notification.\n     */\n    notify(propertyName) {\n        var _a, _b;\n        (_a = this.subscribers[propertyName]) === null || _a === void 0 ? void 0 : _a.notify(propertyName);\n        (_b = this.subjectSubscribers) === null || _b === void 0 ? void 0 : _b.notify(propertyName);\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     * @param propertyToWatch - The name of the property that the subscriber is interested in watching for changes.\n     */\n    subscribe(subscriber, propertyToWatch) {\n        var _a, _b;\n        let subscribers;\n        if (propertyToWatch) {\n            subscribers =\n                (_a = this.subscribers[propertyToWatch]) !== null && _a !== void 0 ? _a : (this.subscribers[propertyToWatch] = new SubscriberSet(this.subject));\n        }\n        else {\n            subscribers =\n                (_b = this.subjectSubscribers) !== null && _b !== void 0 ? _b : (this.subjectSubscribers = new SubscriberSet(this.subject));\n        }\n        subscribers.subscribe(subscriber);\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     * @param propertyToUnwatch - The name of the property that the subscriber is no longer interested in watching.\n     */\n    unsubscribe(subscriber, propertyToUnwatch) {\n        var _a, _b;\n        if (propertyToUnwatch) {\n            (_a = this.subscribers[propertyToUnwatch]) === null || _a === void 0 ? void 0 : _a.unsubscribe(subscriber);\n        }\n        else {\n            (_b = this.subjectSubscribers) === null || _b === void 0 ? void 0 : _b.unsubscribe(subscriber);\n        }\n    }\n}\n","import { Observable } from \"../observation/observable.js\";\nimport { isString } from \"../interfaces.js\";\nimport { Updates } from \"../observation/update-queue.js\";\nimport { DOM } from \"../dom.js\";\nimport { createMetadataLocator } from \"../platform.js\";\nconst booleanMode = \"boolean\";\nconst reflectMode = \"reflect\";\n/**\n * Metadata used to configure a custom attribute's behavior.\n * @public\n */\nexport const AttributeConfiguration = Object.freeze({\n    /**\n     * Locates all attribute configurations associated with a type.\n     */\n    locate: createMetadataLocator(),\n});\n/**\n * A {@link ValueConverter} that converts to and from `boolean` values.\n * @remarks\n * Used automatically when the `boolean` {@link AttributeMode} is selected.\n * @public\n */\nexport const booleanConverter = {\n    toView(value) {\n        return value ? \"true\" : \"false\";\n    },\n    fromView(value) {\n        return value === null ||\n            value === void 0 ||\n            value === \"false\" ||\n            value === false ||\n            value === 0\n            ? false\n            : true;\n    },\n};\n/**\n * A {@link ValueConverter} that converts to and from `boolean` values. `null`, `undefined`, `\"\"`,\n * and `void` values are converted to `null`.\n * @public\n */\nexport const nullableBooleanConverter = {\n    toView(value) {\n        return typeof value === \"boolean\" ? value.toString() : \"\";\n    },\n    fromView(value) {\n        return [null, undefined, void 0].includes(value)\n            ? null\n            : booleanConverter.fromView(value);\n    },\n};\nfunction toNumber(value) {\n    if (value === null || value === undefined) {\n        return null;\n    }\n    const number = value * 1;\n    return isNaN(number) ? null : number;\n}\n/**\n * A {@link ValueConverter} that converts to and from `number` values.\n * @remarks\n * This converter allows for nullable numbers, returning `null` if the\n * input was `null`, `undefined`, or `NaN`.\n * @public\n */\nexport const nullableNumberConverter = {\n    toView(value) {\n        const output = toNumber(value);\n        return output ? output.toString() : output;\n    },\n    fromView: toNumber,\n};\n/**\n * An implementation of {@link Accessor} that supports reactivity,\n * change callbacks, attribute reflection, and type conversion for\n * custom elements.\n * @public\n */\nexport class AttributeDefinition {\n    /**\n     * Creates an instance of AttributeDefinition.\n     * @param Owner - The class constructor that owns this attribute.\n     * @param name - The name of the property associated with the attribute.\n     * @param attribute - The name of the attribute in HTML.\n     * @param mode - The {@link AttributeMode} that describes the behavior of this attribute.\n     * @param converter - A {@link ValueConverter} that integrates with the property getter/setter\n     * to convert values to and from a DOM string.\n     */\n    constructor(Owner, name, attribute = name.toLowerCase(), mode = reflectMode, converter) {\n        this.guards = new Set();\n        this.Owner = Owner;\n        this.name = name;\n        this.attribute = attribute;\n        this.mode = mode;\n        this.converter = converter;\n        this.fieldName = `_${name}`;\n        this.callbackName = `${name}Changed`;\n        this.hasCallback = this.callbackName in Owner.prototype;\n        if (mode === booleanMode && converter === void 0) {\n            this.converter = booleanConverter;\n        }\n    }\n    /**\n     * Sets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     * @param value - The value to set the attribute/property to.\n     */\n    setValue(source, newValue) {\n        const oldValue = source[this.fieldName];\n        const converter = this.converter;\n        if (converter !== void 0) {\n            newValue = converter.fromView(newValue);\n        }\n        if (oldValue !== newValue) {\n            source[this.fieldName] = newValue;\n            this.tryReflectToAttribute(source);\n            if (this.hasCallback) {\n                source[this.callbackName](oldValue, newValue);\n            }\n            source.$fastController.notify(this.name);\n        }\n    }\n    /**\n     * Gets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     */\n    getValue(source) {\n        Observable.track(source, this.name);\n        return source[this.fieldName];\n    }\n    /** @internal */\n    onAttributeChangedCallback(element, value) {\n        if (this.guards.has(element)) {\n            return;\n        }\n        this.guards.add(element);\n        this.setValue(element, value);\n        this.guards.delete(element);\n    }\n    tryReflectToAttribute(element) {\n        const mode = this.mode;\n        const guards = this.guards;\n        if (guards.has(element) || mode === \"fromView\") {\n            return;\n        }\n        Updates.enqueue(() => {\n            guards.add(element);\n            const latestValue = element[this.fieldName];\n            switch (mode) {\n                case reflectMode:\n                    const converter = this.converter;\n                    DOM.setAttribute(element, this.attribute, converter !== void 0 ? converter.toView(latestValue) : latestValue);\n                    break;\n                case booleanMode:\n                    DOM.setBooleanAttribute(element, this.attribute, latestValue);\n                    break;\n            }\n            guards.delete(element);\n        });\n    }\n    /**\n     * Collects all attribute definitions associated with the owner.\n     * @param Owner - The class constructor to collect attribute for.\n     * @param attributeLists - Any existing attributes to collect and merge with those associated with the owner.\n     * @internal\n     */\n    static collect(Owner, ...attributeLists) {\n        const attributes = [];\n        attributeLists.push(AttributeConfiguration.locate(Owner));\n        for (let i = 0, ii = attributeLists.length; i < ii; ++i) {\n            const list = attributeLists[i];\n            if (list === void 0) {\n                continue;\n            }\n            for (let j = 0, jj = list.length; j < jj; ++j) {\n                const config = list[j];\n                if (isString(config)) {\n                    attributes.push(new AttributeDefinition(Owner, config));\n                }\n                else {\n                    attributes.push(new AttributeDefinition(Owner, config.property, config.attribute, config.mode, config.converter));\n                }\n            }\n        }\n        return attributes;\n    }\n}\nexport function attr(configOrTarget, prop) {\n    let config;\n    function decorator($target, $prop) {\n        if (arguments.length > 1) {\n            // Non invocation:\n            // - @attr\n            // Invocation with or w/o opts:\n            // - @attr()\n            // - @attr({...opts})\n            config.property = $prop;\n        }\n        AttributeConfiguration.locate($target.constructor).push(config);\n    }\n    if (arguments.length > 1) {\n        // Non invocation:\n        // - @attr\n        config = {};\n        decorator(configOrTarget, prop);\n        return;\n    }\n    // Invocation with or w/o opts:\n    // - @attr()\n    // - @attr({...opts})\n    config = configOrTarget === void 0 ? {} : configOrTarget;\n    return decorator;\n}\n","import \"./interfaces.js\";\nimport { FAST } from \"./platform.js\";\n/**\n * The type of HTML aspect to target.\n * @public\n */\nexport const DOMAspect = Object.freeze({\n    /**\n     * Not aspected.\n     */\n    none: 0,\n    /**\n     * An attribute.\n     */\n    attribute: 1,\n    /**\n     * A boolean attribute.\n     */\n    booleanAttribute: 2,\n    /**\n     * A property.\n     */\n    property: 3,\n    /**\n     * Content\n     */\n    content: 4,\n    /**\n     * A token list.\n     */\n    tokenList: 5,\n    /**\n     * An event.\n     */\n    event: 6,\n});\nconst createHTML = html => html;\nconst fastTrustedType = globalThis.trustedTypes\n    ? globalThis.trustedTypes.createPolicy(\"fast-html\", { createHTML })\n    : { createHTML };\nlet defaultPolicy = Object.freeze({\n    createHTML(value) {\n        return fastTrustedType.createHTML(value);\n    },\n    protect(tagName, aspect, aspectName, sink) {\n        return sink;\n    },\n});\nconst fastPolicy = defaultPolicy;\n/**\n * Common DOM APIs.\n * @public\n */\nexport const DOM = Object.freeze({\n    /**\n     * Gets the dom policy used by the templating system.\n     */\n    get policy() {\n        return defaultPolicy;\n    },\n    /**\n     * Sets the dom policy used by the templating system.\n     * @param policy - The policy to set.\n     * @remarks\n     * This API can only be called once, for security reasons. It should be\n     * called by the application developer at the start of their program.\n     */\n    setPolicy(value) {\n        if (defaultPolicy !== fastPolicy) {\n            throw FAST.error(1201 /* Message.onlySetDOMPolicyOnce */);\n        }\n        defaultPolicy = value;\n    },\n    /**\n     * Sets an attribute value on an element.\n     * @param element - The element to set the attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is `null` or `undefined`, the attribute is removed, otherwise\n     * it is set to the provided value using the standard `setAttribute` API.\n     */\n    setAttribute(element, attributeName, value) {\n        value === null || value === undefined\n            ? element.removeAttribute(attributeName)\n            : element.setAttribute(attributeName, value);\n    },\n    /**\n     * Sets a boolean attribute value.\n     * @param element - The element to set the boolean attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is true, the attribute is added; otherwise it is removed.\n     */\n    setBooleanAttribute(element, attributeName, value) {\n        value\n            ? element.setAttribute(attributeName, \"\")\n            : element.removeAttribute(attributeName);\n    },\n});\n","/**\n * Captures a binding expression along with related information and capabilities.\n *\n * @public\n */\nexport class Binding {\n    /**\n     * Creates a binding.\n     * @param evaluate - Evaluates the binding.\n     * @param policy - The security policy to associate with this binding.\n     * @param isVolatile - Indicates whether the binding is volatile.\n     */\n    constructor(evaluate, policy, isVolatile = false) {\n        this.evaluate = evaluate;\n        this.policy = policy;\n        this.isVolatile = isVolatile;\n    }\n}\n","import { isString, noop } from \"../interfaces.js\";\nimport { HTMLDirective } from \"./html-directive.js\";\nimport { NodeObservationDirective } from \"./node-observation.js\";\n/**\n * The runtime behavior for child node observation.\n * @public\n */\nexport class ChildrenDirective extends NodeObservationDirective {\n    /**\n     * Creates an instance of ChildrenDirective.\n     * @param options - The options to use in configuring the child observation behavior.\n     */\n    constructor(options) {\n        super(options);\n        this.observerProperty = Symbol();\n        this.handleEvent = (mutations, observer) => {\n            const target = observer.target;\n            this.updateTarget(this.getSource(target), this.computeNodes(target));\n        };\n        options.childList = true;\n    }\n    /**\n     * Begins observation of the nodes.\n     * @param target - The target to observe.\n     */\n    observe(target) {\n        let observer = target[this.observerProperty];\n        if (!observer) {\n            observer = new MutationObserver(this.handleEvent);\n            observer.toJSON = noop;\n            target[this.observerProperty] = observer;\n        }\n        observer.target = target;\n        observer.observe(target, this.options);\n    }\n    /**\n     * Disconnects observation of the nodes.\n     * @param target - The target to unobserve.\n     */\n    disconnect(target) {\n        const observer = target[this.observerProperty];\n        observer.target = null;\n        observer.disconnect();\n    }\n    /**\n     * Retrieves the raw nodes that should be assigned to the source property.\n     * @param target - The target to get the node to.\n     */\n    getNodes(target) {\n        if (\"selector\" in this.options) {\n            return Array.from(target.querySelectorAll(this.options.selector));\n        }\n        return Array.from(target.childNodes);\n    }\n}\nHTMLDirective.define(ChildrenDirective);\n/**\n * A directive that observes the `childNodes` of an element and updates a property\n * whenever they change.\n * @param propertyOrOptions - The options used to configure child node observation.\n * @public\n */\nexport function children(propertyOrOptions) {\n    if (isString(propertyOrOptions)) {\n        propertyOrOptions = {\n            property: propertyOrOptions,\n        };\n    }\n    return new ChildrenDirective(propertyOrOptions);\n}\n","import { DOMAspect } from \"../dom.js\";\nimport { createTypeRegistry, makeSerializationNoop } from \"../platform.js\";\nimport { Markup } from \"./markup.js\";\nconst registry = createTypeRegistry();\n/**\n * Instructs the template engine to apply behavior to a node.\n * @public\n */\nexport const HTMLDirective = Object.freeze({\n    /**\n     * Gets the directive definition associated with the instance.\n     * @param instance - The directive instance to retrieve the definition for.\n     */\n    getForInstance: registry.getForInstance,\n    /**\n     * Gets the directive definition associated with the specified type.\n     * @param type - The directive type to retrieve the definition for.\n     */\n    getByType: registry.getByType,\n    /**\n     * Defines an HTMLDirective based on the options.\n     * @param type - The type to define as a directive.\n     * @param options - Options that specify the directive's application.\n     */\n    define(type, options) {\n        options = options || {};\n        options.type = type;\n        registry.register(options);\n        return type;\n    },\n    /**\n     *\n     * @param directive - The directive to assign the aspect to.\n     * @param value - The value to base the aspect determination on.\n     * @remarks\n     * If a falsy value is provided, then the content aspect will be assigned.\n     */\n    assignAspect(directive, value) {\n        if (!value) {\n            directive.aspectType = DOMAspect.content;\n            return;\n        }\n        directive.sourceAspect = value;\n        switch (value[0]) {\n            case \":\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType =\n                    directive.targetAspect === \"classList\"\n                        ? DOMAspect.tokenList\n                        : DOMAspect.property;\n                break;\n            case \"?\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = DOMAspect.booleanAttribute;\n                break;\n            case \"@\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = DOMAspect.event;\n                break;\n            default:\n                directive.targetAspect = value;\n                directive.aspectType = DOMAspect.attribute;\n                break;\n        }\n    },\n});\n/**\n * Decorator: Defines an HTMLDirective.\n * @param options - Provides options that specify the directive's application.\n * @public\n */\nexport function htmlDirective(options) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\n    return function (type) {\n        HTMLDirective.define(type, options);\n    };\n}\n/**\n * A base class used for attribute directives that don't need internal state.\n * @public\n */\nexport class StatelessAttachedAttributeDirective {\n    /**\n     * Creates an instance of RefDirective.\n     * @param options - The options to use in configuring the directive.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     * @remarks\n     * Creates a custom attribute placeholder.\n     */\n    createHTML(add) {\n        return Markup.attribute(add(this));\n    }\n    /**\n     * Creates a behavior.\n     * @param targets - The targets available for behaviors to be attached to.\n     */\n    createBehavior() {\n        return this;\n    }\n}\nmakeSerializationNoop(StatelessAttachedAttributeDirective);\n","const marker = `fast-${Math.random().toString(36).substring(2, 8)}`;\nconst interpolationStart = `${marker}{`;\nconst interpolationEnd = `}${marker}`;\nconst interpolationEndLength = interpolationEnd.length;\nlet id = 0;\n/** @internal */\nexport const nextId = () => `${marker}-${++id}`;\n/**\n * Common APIs related to markup generation.\n * @public\n */\nexport const Markup = Object.freeze({\n    /**\n     * Creates a placeholder string suitable for marking out a location *within*\n     * an attribute value or HTML content.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by binding directives.\n     */\n    interpolation: (id) => `${interpolationStart}${id}${interpolationEnd}`,\n    /**\n     * Creates a placeholder that manifests itself as an attribute on an\n     * element.\n     * @param attributeName - The name of the custom attribute.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by attribute directives such as `ref`, `slotted`, and `children`.\n     */\n    attribute: (id) => `${nextId()}=\"${interpolationStart}${id}${interpolationEnd}\"`,\n    /**\n     * Creates a placeholder that manifests itself as a marker within the DOM structure.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by structural directives such as `repeat`.\n     */\n    comment: (id) => `<!--${interpolationStart}${id}${interpolationEnd}-->`,\n});\n/**\n * Common APIs related to content parsing.\n * @public\n */\nexport const Parser = Object.freeze({\n    /**\n     * Parses text content or HTML attribute content, separating out the static strings\n     * from the directives.\n     * @param value - The content or attribute string to parse.\n     * @param factories - A list of directives to search for in the string.\n     * @returns A heterogeneous array of static strings interspersed with\n     * directives or null if no directives are found in the string.\n     */\n    parse(value, factories) {\n        const parts = value.split(interpolationStart);\n        if (parts.length === 1) {\n            return null;\n        }\n        const result = [];\n        for (let i = 0, ii = parts.length; i < ii; ++i) {\n            const current = parts[i];\n            const index = current.indexOf(interpolationEnd);\n            let literal;\n            if (index === -1) {\n                literal = current;\n            }\n            else {\n                const factoryId = current.substring(0, index);\n                result.push(factories[factoryId]);\n                literal = current.substring(index + interpolationEndLength);\n            }\n            if (literal !== \"\") {\n                result.push(literal);\n            }\n        }\n        return result;\n    },\n});\n","import { emptyArray } from \"../platform.js\";\nimport { StatelessAttachedAttributeDirective } from \"./html-directive.js\";\nconst selectElements = (value) => value.nodeType === 1;\n/**\n * Creates a function that can be used to filter a Node array, selecting only elements.\n * @param selector - An optional selector to restrict the filter to.\n * @public\n */\nexport const elements = (selector) => selector\n    ? value => value.nodeType === 1 && value.matches(selector)\n    : selectElements;\n/**\n * A base class for node observation.\n * @public\n * @remarks\n * Internally used by the SlottedDirective and the ChildrenDirective.\n */\nexport class NodeObservationDirective extends StatelessAttachedAttributeDirective {\n    /**\n     * The unique id of the factory.\n     */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value;\n        this._controllerProperty = `${value}-c`;\n    }\n    /**\n     * Bind this behavior to the source.\n     * @param source - The source to bind to.\n     * @param context - The execution context that the binding is operating within.\n     * @param targets - The targets that behaviors in a view can attach to.\n     */\n    bind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        target[this._controllerProperty] = controller;\n        this.updateTarget(controller.source, this.computeNodes(target));\n        this.observe(target);\n        controller.onUnbind(this);\n    }\n    /**\n     * Unbinds this behavior from the source.\n     * @param source - The source to unbind from.\n     * @param context - The execution context that the binding is operating within.\n     * @param targets - The targets that behaviors in a view can attach to.\n     */\n    unbind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        this.updateTarget(controller.source, emptyArray);\n        this.disconnect(target);\n        target[this._controllerProperty] = null;\n    }\n    /**\n     * Gets the data source for the target.\n     * @param target - The target to get the source for.\n     * @returns The source.\n     */\n    getSource(target) {\n        return target[this._controllerProperty].source;\n    }\n    /**\n     * Updates the source property with the computed nodes.\n     * @param source - The source object to assign the nodes property to.\n     * @param value - The nodes to assign to the source object property.\n     */\n    updateTarget(source, value) {\n        source[this.options.property] = value;\n    }\n    /**\n     * Computes the set of nodes that should be assigned to the source property.\n     * @param target - The target to compute the nodes for.\n     * @returns The computed nodes.\n     * @remarks\n     * Applies filters if provided.\n     */\n    computeNodes(target) {\n        let nodes = this.getNodes(target);\n        if (\"filter\" in this.options) {\n            nodes = nodes.filter(this.options.filter);\n        }\n        return nodes;\n    }\n}\n","import { isFunction, isString } from \"../interfaces.js\";\nimport { Binding } from \"../binding/binding.js\";\nimport { oneWay } from \"../binding/one-way.js\";\nimport { CSSDirective } from \"./css-directive.js\";\nimport { ElementStyles } from \"./element-styles.js\";\nimport { CSSBindingDirective } from \"./css-binding-directive.js\";\nconst marker = `${Math.random().toString(36).substring(2, 8)}`;\nlet varId = 0;\nconst nextCSSVariable = () => `--v${marker}${++varId}`;\nfunction collectStyles(strings, values) {\n    const styles = [];\n    let cssString = \"\";\n    const behaviors = [];\n    const add = (behavior) => {\n        behaviors.push(behavior);\n    };\n    for (let i = 0, ii = strings.length - 1; i < ii; ++i) {\n        cssString += strings[i];\n        let value = values[i];\n        if (isFunction(value)) {\n            value = new CSSBindingDirective(oneWay(value), nextCSSVariable()).createCSS(add);\n        }\n        else if (value instanceof Binding) {\n            value = new CSSBindingDirective(value, nextCSSVariable()).createCSS(add);\n        }\n        else if (CSSDirective.getForInstance(value) !== void 0) {\n            value = value.createCSS(add);\n        }\n        if (value instanceof ElementStyles || value instanceof CSSStyleSheet) {\n            if (cssString.trim() !== \"\") {\n                styles.push(cssString);\n                cssString = \"\";\n            }\n            styles.push(value);\n        }\n        else {\n            cssString += value;\n        }\n    }\n    cssString += strings[strings.length - 1];\n    if (cssString.trim() !== \"\") {\n        styles.push(cssString);\n    }\n    return {\n        styles,\n        behaviors,\n    };\n}\n/**\n * Transforms a template literal string into styles.\n * @param strings - The string fragments that are interpolated with the values.\n * @param values - The values that are interpolated with the string fragments.\n * @remarks\n * The css helper supports interpolation of strings and ElementStyle instances.\n * @public\n */\nexport const css = ((strings, ...values) => {\n    const { styles, behaviors } = collectStyles(strings, values);\n    const elementStyles = new ElementStyles(styles);\n    return behaviors.length ? elementStyles.withBehaviors(...behaviors) : elementStyles;\n});\nclass CSSPartial {\n    constructor(styles, behaviors) {\n        this.behaviors = behaviors;\n        this.css = \"\";\n        const stylesheets = styles.reduce((accumulated, current) => {\n            if (isString(current)) {\n                this.css += current;\n            }\n            else {\n                accumulated.push(current);\n            }\n            return accumulated;\n        }, []);\n        if (stylesheets.length) {\n            this.styles = new ElementStyles(stylesheets);\n        }\n    }\n    createCSS(add) {\n        this.behaviors.forEach(add);\n        if (this.styles) {\n            add(this);\n        }\n        return this.css;\n    }\n    addedCallback(controller) {\n        controller.addStyles(this.styles);\n    }\n    removedCallback(controller) {\n        controller.removeStyles(this.styles);\n    }\n}\nCSSDirective.define(CSSPartial);\ncss.partial = (strings, ...values) => {\n    const { styles, behaviors } = collectStyles(strings, values);\n    return new CSSPartial(styles, behaviors);\n};\n","import { Observable } from \"../observation/observable.js\";\nimport { Binding } from \"./binding.js\";\nclass OneWayBinding extends Binding {\n    createObserver(subscriber) {\n        return Observable.binding(this.evaluate, subscriber, this.isVolatile);\n    }\n}\n/**\n * Creates an standard binding.\n * @param expression - The binding to refresh when changed.\n * @param policy - The security policy to associate with th binding.\n * @param isVolatile - Indicates whether the binding is volatile or not.\n * @returns A binding configuration.\n * @public\n */\nexport function oneWay(expression, policy, isVolatile = Observable.isVolatileBinding(expression)) {\n    return new OneWayBinding(expression, policy, isVolatile);\n}\n/**\n * Creates an event listener binding.\n * @param expression - The binding to invoke when the event is raised.\n * @param options - Event listener options.\n * @returns A binding configuration.\n * @public\n */\nexport function listener(expression, options) {\n    const config = new OneWayBinding(expression);\n    config.options = options;\n    return config;\n}\n","import { createTypeRegistry } from \"../platform.js\";\nconst registry = createTypeRegistry();\n/**\n * Instructs the css engine to provide dynamic styles or\n * associate behaviors with styles.\n * @public\n */\nexport const CSSDirective = Object.freeze({\n    /**\n     * Gets the directive definition associated with the instance.\n     * @param instance - The directive instance to retrieve the definition for.\n     */\n    getForInstance: registry.getForInstance,\n    /**\n     * Gets the directive definition associated with the specified type.\n     * @param type - The directive type to retrieve the definition for.\n     */\n    getByType: registry.getByType,\n    /**\n     * Defines a CSSDirective.\n     * @param type - The type to define as a directive.\n     */\n    define(type) {\n        registry.register({ type });\n        return type;\n    },\n});\n/**\n * Decorator: Defines a CSSDirective.\n * @public\n */\nexport function cssDirective() {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\n    return function (type) {\n        CSSDirective.define(type);\n    };\n}\n","let DefaultStyleStrategy;\nfunction reduceStyles(styles) {\n    return styles\n        .map((x) => x instanceof ElementStyles ? reduceStyles(x.styles) : [x])\n        .reduce((prev, curr) => prev.concat(curr), []);\n}\n/**\n * Represents styles that can be applied to a custom element.\n * @public\n */\nexport class ElementStyles {\n    /**\n     * Creates an instance of ElementStyles.\n     * @param styles - The styles that will be associated with elements.\n     */\n    constructor(styles) {\n        this.styles = styles;\n        this.targets = new WeakSet();\n        this._strategy = null;\n        this.behaviors = styles\n            .map((x) => x instanceof ElementStyles ? x.behaviors : null)\n            .reduce((prev, curr) => (curr === null ? prev : prev === null ? curr : prev.concat(curr)), null);\n    }\n    /**\n     * Gets the StyleStrategy associated with these element styles.\n     */\n    get strategy() {\n        if (this._strategy === null) {\n            this.withStrategy(DefaultStyleStrategy);\n        }\n        return this._strategy;\n    }\n    /** @internal */\n    addStylesTo(target) {\n        this.strategy.addStylesTo(target);\n        this.targets.add(target);\n    }\n    /** @internal */\n    removeStylesFrom(target) {\n        this.strategy.removeStylesFrom(target);\n        this.targets.delete(target);\n    }\n    /** @internal */\n    isAttachedTo(target) {\n        return this.targets.has(target);\n    }\n    /**\n     * Associates behaviors with this set of styles.\n     * @param behaviors - The behaviors to associate.\n     */\n    withBehaviors(...behaviors) {\n        this.behaviors =\n            this.behaviors === null ? behaviors : this.behaviors.concat(behaviors);\n        return this;\n    }\n    /**\n     * Sets the strategy that handles adding/removing these styles for an element.\n     * @param strategy - The strategy to use.\n     */\n    withStrategy(Strategy) {\n        this._strategy = new Strategy(reduceStyles(this.styles));\n        return this;\n    }\n    /**\n     * Sets the default strategy type to use when creating style strategies.\n     * @param Strategy - The strategy type to construct.\n     */\n    static setDefaultStrategy(Strategy) {\n        DefaultStyleStrategy = Strategy;\n    }\n    /**\n     * Normalizes a set of composable style options.\n     * @param styles - The style options to normalize.\n     * @returns A singular ElementStyles instance or undefined.\n     */\n    static normalize(styles) {\n        return styles === void 0\n            ? void 0\n            : Array.isArray(styles)\n                ? new ElementStyles(styles)\n                : styles instanceof ElementStyles\n                    ? styles\n                    : new ElementStyles([styles]);\n    }\n}\n/**\n * Indicates whether the DOM supports the adoptedStyleSheets feature.\n */\nElementStyles.supportsAdoptedStyleSheets = Array.isArray(document.adoptedStyleSheets) &&\n    \"replace\" in CSSStyleSheet.prototype;\n","import { CSSDirective } from \"./css-directive.js\";\nfunction handleChange(directive, controller, observer) {\n    controller.source.style.setProperty(directive.targetAspect, observer.bind(controller));\n}\n/**\n * Enables bindings in CSS.\n *\n * @public\n */\nexport class CSSBindingDirective {\n    /**\n     * Creates an instance of CSSBindingDirective.\n     * @param dataBinding - The binding to use in CSS.\n     * @param targetAspect - The CSS property to target.\n     */\n    constructor(dataBinding, targetAspect) {\n        this.dataBinding = dataBinding;\n        this.targetAspect = targetAspect;\n    }\n    /**\n     * Creates a CSS fragment to interpolate into the CSS document.\n     * @returns - the string to interpolate into CSS\n     */\n    createCSS(add) {\n        add(this);\n        return `var(${this.targetAspect})`;\n    }\n    /**\n     * Executed when this behavior is attached to a controller.\n     * @param controller - Controls the behavior lifecycle.\n     */\n    addedCallback(controller) {\n        var _a;\n        const element = controller.source;\n        if (!element.$cssBindings) {\n            element.$cssBindings = new Map();\n            const setAttribute = element.setAttribute;\n            element.setAttribute = (attr, value) => {\n                setAttribute.call(element, attr, value);\n                if (attr === \"style\") {\n                    element.$cssBindings.forEach((v, k) => handleChange(k, v.controller, v.observer));\n                }\n            };\n        }\n        const observer = (_a = controller[this.targetAspect]) !== null && _a !== void 0 ? _a : (controller[this.targetAspect] = this.dataBinding.createObserver(this, this));\n        observer.controller = controller;\n        controller.source.$cssBindings.set(this, { controller, observer });\n    }\n    /**\n     * Executed when this behavior's host is connected.\n     * @param controller - Controls the behavior lifecycle.\n     */\n    connectedCallback(controller) {\n        handleChange(this, controller, controller[this.targetAspect]);\n    }\n    /**\n     * Executed when this behavior is detached from a controller.\n     * @param controller - Controls the behavior lifecycle.\n     */\n    removedCallback(controller) {\n        if (controller.source.$cssBindings) {\n            controller.source.$cssBindings.delete(this);\n        }\n    }\n    /**\n     * Called when a subject this instance has subscribed to changes.\n     * @param subject - The subject of the change.\n     * @param args - The event args detailing the change that occurred.\n     *\n     * @internal\n     */\n    handleChange(_, observer) {\n        handleChange(this, observer.controller, observer);\n    }\n}\nCSSDirective.define(CSSBindingDirective);\n","import { isFunction } from \"../interfaces.js\";\nimport { ElementController } from \"./element-controller.js\";\nimport { FASTElementDefinition, } from \"./fast-definitions.js\";\n/* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\nfunction createFASTElement(BaseType) {\n    const type = class extends BaseType {\n        constructor() {\n            /* eslint-disable-next-line */\n            super();\n            ElementController.forCustomElement(this);\n        }\n        $emit(type, detail, options) {\n            return this.$fastController.emit(type, detail, options);\n        }\n        connectedCallback() {\n            this.$fastController.connect();\n        }\n        disconnectedCallback() {\n            this.$fastController.disconnect();\n        }\n        attributeChangedCallback(name, oldValue, newValue) {\n            this.$fastController.onAttributeChangedCallback(name, oldValue, newValue);\n        }\n    };\n    FASTElementDefinition.registerBaseType(type);\n    return type;\n}\nfunction compose(type, nameOrDef) {\n    if (isFunction(type)) {\n        return FASTElementDefinition.compose(type, nameOrDef);\n    }\n    return FASTElementDefinition.compose(this, type);\n}\nfunction define(type, nameOrDef) {\n    if (isFunction(type)) {\n        return FASTElementDefinition.compose(type, nameOrDef).define().type;\n    }\n    return FASTElementDefinition.compose(this, type).define().type;\n}\nfunction from(BaseType) {\n    return createFASTElement(BaseType);\n}\n/**\n * A minimal base class for FASTElements that also provides\n * static helpers for working with FASTElements.\n * @public\n */\nexport const FASTElement = Object.assign(createFASTElement(HTMLElement), {\n    /**\n     * Creates a new FASTElement base class inherited from the\n     * provided base type.\n     * @param BaseType - The base element type to inherit from.\n     */\n    from,\n    /**\n     * Defines a platform custom element based on the provided type and definition.\n     * @param type - The custom element type to define.\n     * @param nameOrDef - The name of the element to define or a definition object\n     * that describes the element to define.\n     */\n    define,\n    /**\n     * Defines metadata for a FASTElement which can be used to later define the element.\n     * @public\n     */\n    compose,\n});\n/**\n * Decorator: Defines a platform custom element based on `FASTElement`.\n * @param nameOrDef - The name of the element to define or a definition object\n * that describes the element to define.\n * @public\n */\nexport function customElement(nameOrDef) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\n    return function (type) {\n        define(type, nameOrDef);\n    };\n}\n","import \"../interfaces.js\";\nimport { PropertyChangeNotifier } from \"../observation/notifier.js\";\nimport { ExecutionContext, Observable, SourceLifetime, } from \"../observation/observable.js\";\nimport { FAST, makeSerializationNoop } from \"../platform.js\";\nimport { ElementStyles } from \"../styles/element-styles.js\";\nimport { UnobservableMutationObserver } from \"../utilities.js\";\nimport { FASTElementDefinition } from \"./fast-definitions.js\";\nimport { HydrationMarkup, isHydratable } from \"./hydration.js\";\nconst defaultEventOptions = {\n    bubbles: true,\n    composed: true,\n    cancelable: true,\n};\nconst isConnectedPropertyName = \"isConnected\";\nconst shadowRoots = new WeakMap();\nfunction getShadowRoot(element) {\n    var _a, _b;\n    return (_b = (_a = element.shadowRoot) !== null && _a !== void 0 ? _a : shadowRoots.get(element)) !== null && _b !== void 0 ? _b : null;\n}\nlet elementControllerStrategy;\n/**\n * Controls the lifecycle and rendering of a `FASTElement`.\n * @public\n */\nexport class ElementController extends PropertyChangeNotifier {\n    /**\n     * Creates a Controller to control the specified element.\n     * @param element - The element to be controlled by this controller.\n     * @param definition - The element definition metadata that instructs this\n     * controller in how to handle rendering and other platform integrations.\n     * @internal\n     */\n    constructor(element, definition) {\n        super(element);\n        this.boundObservables = null;\n        this.needsInitialization = true;\n        this.hasExistingShadowRoot = false;\n        this._template = null;\n        this.stage = 3 /* Stages.disconnected */;\n        /**\n         * A guard against connecting behaviors multiple times\n         * during connect in scenarios where a behavior adds\n         * another behavior during it's connectedCallback\n         */\n        this.guardBehaviorConnection = false;\n        this.behaviors = null;\n        /**\n         * Tracks whether behaviors are connected so that\n         * behaviors cant be connected multiple times\n         */\n        this.behaviorsConnected = false;\n        this._mainStyles = null;\n        /**\n         * This allows Observable.getNotifier(...) to return the Controller\n         * when the notifier for the Controller itself is being requested. The\n         * result is that the Observable system does not need to create a separate\n         * instance of Notifier for observables on the Controller. The component and\n         * the controller will now share the same notifier, removing one-object construct\n         * per web component instance.\n         */\n        this.$fastController = this;\n        /**\n         * The view associated with the custom element.\n         * @remarks\n         * If `null` then the element is managing its own rendering.\n         */\n        this.view = null;\n        this.source = element;\n        this.definition = definition;\n        const shadowOptions = definition.shadowOptions;\n        if (shadowOptions !== void 0) {\n            let shadowRoot = element.shadowRoot;\n            if (shadowRoot) {\n                this.hasExistingShadowRoot = true;\n            }\n            else {\n                shadowRoot = element.attachShadow(shadowOptions);\n                if (shadowOptions.mode === \"closed\") {\n                    shadowRoots.set(element, shadowRoot);\n                }\n            }\n        }\n        // Capture any observable values that were set by the binding engine before\n        // the browser upgraded the element. Then delete the property since it will\n        // shadow the getter/setter that is required to make the observable operate.\n        // Later, in the connect callback, we'll re-apply the values.\n        const accessors = Observable.getAccessors(element);\n        if (accessors.length > 0) {\n            const boundObservables = (this.boundObservables = Object.create(null));\n            for (let i = 0, ii = accessors.length; i < ii; ++i) {\n                const propertyName = accessors[i].name;\n                const value = element[propertyName];\n                if (value !== void 0) {\n                    delete element[propertyName];\n                    boundObservables[propertyName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Indicates whether or not the custom element has been\n     * connected to the document.\n     */\n    get isConnected() {\n        Observable.track(this, isConnectedPropertyName);\n        return this.stage === 1 /* Stages.connected */;\n    }\n    /**\n     * The context the expression is evaluated against.\n     */\n    get context() {\n        var _a, _b;\n        return (_b = (_a = this.view) === null || _a === void 0 ? void 0 : _a.context) !== null && _b !== void 0 ? _b : ExecutionContext.default;\n    }\n    /**\n     * Indicates whether the controller is bound.\n     */\n    get isBound() {\n        var _a, _b;\n        return (_b = (_a = this.view) === null || _a === void 0 ? void 0 : _a.isBound) !== null && _b !== void 0 ? _b : false;\n    }\n    /**\n     * Indicates how the source's lifetime relates to the controller's lifetime.\n     */\n    get sourceLifetime() {\n        var _a;\n        return (_a = this.view) === null || _a === void 0 ? void 0 : _a.sourceLifetime;\n    }\n    /**\n     * Gets/sets the template used to render the component.\n     * @remarks\n     * This value can only be accurately read after connect but can be set at any time.\n     */\n    get template() {\n        var _a;\n        // 1. Template overrides take top precedence.\n        if (this._template === null) {\n            const definition = this.definition;\n            if (this.source.resolveTemplate) {\n                // 2. Allow for element instance overrides next.\n                this._template = this.source.resolveTemplate();\n            }\n            else if (definition.template) {\n                // 3. Default to the static definition.\n                this._template = (_a = definition.template) !== null && _a !== void 0 ? _a : null;\n            }\n        }\n        return this._template;\n    }\n    set template(value) {\n        if (this._template === value) {\n            return;\n        }\n        this._template = value;\n        if (!this.needsInitialization) {\n            this.renderTemplate(value);\n        }\n    }\n    /**\n     * The main set of styles used for the component, independent\n     * of any dynamically added styles.\n     */\n    get mainStyles() {\n        var _a;\n        // 1. Styles overrides take top precedence.\n        if (this._mainStyles === null) {\n            const definition = this.definition;\n            if (this.source.resolveStyles) {\n                // 2. Allow for element instance overrides next.\n                this._mainStyles = this.source.resolveStyles();\n            }\n            else if (definition.styles) {\n                // 3. Default to the static definition.\n                this._mainStyles = (_a = definition.styles) !== null && _a !== void 0 ? _a : null;\n            }\n        }\n        return this._mainStyles;\n    }\n    set mainStyles(value) {\n        if (this._mainStyles === value) {\n            return;\n        }\n        if (this._mainStyles !== null) {\n            this.removeStyles(this._mainStyles);\n        }\n        this._mainStyles = value;\n        if (!this.needsInitialization) {\n            this.addStyles(value);\n        }\n    }\n    /**\n     * Registers an unbind handler with the controller.\n     * @param behavior - An object to call when the controller unbinds.\n     */\n    onUnbind(behavior) {\n        var _a;\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.onUnbind(behavior);\n    }\n    /**\n     * Adds the behavior to the component.\n     * @param behavior - The behavior to add.\n     */\n    addBehavior(behavior) {\n        var _a, _b;\n        const targetBehaviors = (_a = this.behaviors) !== null && _a !== void 0 ? _a : (this.behaviors = new Map());\n        const count = (_b = targetBehaviors.get(behavior)) !== null && _b !== void 0 ? _b : 0;\n        if (count === 0) {\n            targetBehaviors.set(behavior, 1);\n            behavior.addedCallback && behavior.addedCallback(this);\n            if (behavior.connectedCallback &&\n                !this.guardBehaviorConnection &&\n                (this.stage === 1 /* Stages.connected */ || this.stage === 0 /* Stages.connecting */)) {\n                behavior.connectedCallback(this);\n            }\n        }\n        else {\n            targetBehaviors.set(behavior, count + 1);\n        }\n    }\n    /**\n     * Removes the behavior from the component.\n     * @param behavior - The behavior to remove.\n     * @param force - Forces removal even if this behavior was added more than once.\n     */\n    removeBehavior(behavior, force = false) {\n        const targetBehaviors = this.behaviors;\n        if (targetBehaviors === null) {\n            return;\n        }\n        const count = targetBehaviors.get(behavior);\n        if (count === void 0) {\n            return;\n        }\n        if (count === 1 || force) {\n            targetBehaviors.delete(behavior);\n            if (behavior.disconnectedCallback && this.stage !== 3 /* Stages.disconnected */) {\n                behavior.disconnectedCallback(this);\n            }\n            behavior.removedCallback && behavior.removedCallback(this);\n        }\n        else {\n            targetBehaviors.set(behavior, count - 1);\n        }\n    }\n    /**\n     * Adds styles to this element. Providing an HTMLStyleElement will attach the element instance to the shadowRoot.\n     * @param styles - The styles to add.\n     */\n    addStyles(styles) {\n        var _a;\n        if (!styles) {\n            return;\n        }\n        const source = this.source;\n        if (styles instanceof HTMLElement) {\n            const target = (_a = getShadowRoot(source)) !== null && _a !== void 0 ? _a : this.source;\n            target.append(styles);\n        }\n        else if (!styles.isAttachedTo(source)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.addStylesTo(source);\n            if (sourceBehaviors !== null) {\n                for (let i = 0, ii = sourceBehaviors.length; i < ii; ++i) {\n                    this.addBehavior(sourceBehaviors[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Removes styles from this element. Providing an HTMLStyleElement will detach the element instance from the shadowRoot.\n     * @param styles - the styles to remove.\n     */\n    removeStyles(styles) {\n        var _a;\n        if (!styles) {\n            return;\n        }\n        const source = this.source;\n        if (styles instanceof HTMLElement) {\n            const target = (_a = getShadowRoot(source)) !== null && _a !== void 0 ? _a : source;\n            target.removeChild(styles);\n        }\n        else if (styles.isAttachedTo(source)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.removeStylesFrom(source);\n            if (sourceBehaviors !== null) {\n                for (let i = 0, ii = sourceBehaviors.length; i < ii; ++i) {\n                    this.removeBehavior(sourceBehaviors[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Runs connected lifecycle behavior on the associated element.\n     */\n    connect() {\n        if (this.stage !== 3 /* Stages.disconnected */) {\n            return;\n        }\n        this.stage = 0 /* Stages.connecting */;\n        this.bindObservables();\n        this.connectBehaviors();\n        if (this.needsInitialization) {\n            this.renderTemplate(this.template);\n            this.addStyles(this.mainStyles);\n            this.needsInitialization = false;\n        }\n        else if (this.view !== null) {\n            this.view.bind(this.source);\n        }\n        this.stage = 1 /* Stages.connected */;\n        Observable.notify(this, isConnectedPropertyName);\n    }\n    bindObservables() {\n        if (this.boundObservables !== null) {\n            const element = this.source;\n            const boundObservables = this.boundObservables;\n            const propertyNames = Object.keys(boundObservables);\n            for (let i = 0, ii = propertyNames.length; i < ii; ++i) {\n                const propertyName = propertyNames[i];\n                element[propertyName] = boundObservables[propertyName];\n            }\n            this.boundObservables = null;\n        }\n    }\n    connectBehaviors() {\n        if (this.behaviorsConnected === false) {\n            const behaviors = this.behaviors;\n            if (behaviors !== null) {\n                this.guardBehaviorConnection = true;\n                for (const key of behaviors.keys()) {\n                    key.connectedCallback && key.connectedCallback(this);\n                }\n                this.guardBehaviorConnection = false;\n            }\n            this.behaviorsConnected = true;\n        }\n    }\n    disconnectBehaviors() {\n        if (this.behaviorsConnected === true) {\n            const behaviors = this.behaviors;\n            if (behaviors !== null) {\n                for (const key of behaviors.keys()) {\n                    key.disconnectedCallback && key.disconnectedCallback(this);\n                }\n            }\n            this.behaviorsConnected = false;\n        }\n    }\n    /**\n     * Runs disconnected lifecycle behavior on the associated element.\n     */\n    disconnect() {\n        if (this.stage !== 1 /* Stages.connected */) {\n            return;\n        }\n        this.stage = 2 /* Stages.disconnecting */;\n        Observable.notify(this, isConnectedPropertyName);\n        if (this.view !== null) {\n            this.view.unbind();\n        }\n        this.disconnectBehaviors();\n        this.stage = 3 /* Stages.disconnected */;\n    }\n    /**\n     * Runs the attribute changed callback for the associated element.\n     * @param name - The name of the attribute that changed.\n     * @param oldValue - The previous value of the attribute.\n     * @param newValue - The new value of the attribute.\n     */\n    onAttributeChangedCallback(name, oldValue, newValue) {\n        const attrDef = this.definition.attributeLookup[name];\n        if (attrDef !== void 0) {\n            attrDef.onAttributeChangedCallback(this.source, newValue);\n        }\n    }\n    /**\n     * Emits a custom HTML event.\n     * @param type - The type name of the event.\n     * @param detail - The event detail object to send with the event.\n     * @param options - The event options. By default bubbles and composed.\n     * @remarks\n     * Only emits events if connected.\n     */\n    emit(type, detail, options) {\n        if (this.stage === 1 /* Stages.connected */) {\n            return this.source.dispatchEvent(new CustomEvent(type, Object.assign(Object.assign({ detail }, defaultEventOptions), options)));\n        }\n        return false;\n    }\n    renderTemplate(template) {\n        var _a;\n        // When getting the host to render to, we start by looking\n        // up the shadow root. If there isn't one, then that means\n        // we're doing a Light DOM render to the element's direct children.\n        const element = this.source;\n        const host = (_a = getShadowRoot(element)) !== null && _a !== void 0 ? _a : element;\n        if (this.view !== null) {\n            // If there's already a view, we need to unbind and remove through dispose.\n            this.view.dispose();\n            this.view = null;\n        }\n        else if (!this.needsInitialization || this.hasExistingShadowRoot) {\n            this.hasExistingShadowRoot = false;\n            // If there was previous custom rendering, we need to clear out the host.\n            for (let child = host.firstChild; child !== null; child = host.firstChild) {\n                host.removeChild(child);\n            }\n        }\n        if (template) {\n            // If a new template was provided, render it.\n            this.view = template.render(element, host, element);\n            this.view.sourceLifetime =\n                SourceLifetime.coupled;\n        }\n    }\n    /**\n     * Locates or creates a controller for the specified element.\n     * @param element - The element to return the controller for.\n     * @remarks\n     * The specified element must have a {@link FASTElementDefinition}\n     * registered either through the use of the {@link customElement}\n     * decorator or a call to `FASTElement.define`.\n     */\n    static forCustomElement(element) {\n        const controller = element.$fastController;\n        if (controller !== void 0) {\n            return controller;\n        }\n        const definition = FASTElementDefinition.getForInstance(element);\n        if (definition === void 0) {\n            throw FAST.error(1401 /* Message.missingElementDefinition */);\n        }\n        return (element.$fastController = new elementControllerStrategy(element, definition));\n    }\n    /**\n     * Sets the strategy that ElementController.forCustomElement uses to construct\n     * ElementController instances for an element.\n     * @param strategy - The strategy to use.\n     */\n    static setStrategy(strategy) {\n        elementControllerStrategy = strategy;\n    }\n}\nmakeSerializationNoop(ElementController);\n// Set default strategy for ElementController\nElementController.setStrategy(ElementController);\n/**\n * Converts a styleTarget into the operative target. When the provided target is an Element\n * that is a FASTElement, the function will return the ShadowRoot for that element. Otherwise,\n * it will return the root node for the element.\n * @param target\n * @returns\n */\nfunction normalizeStyleTarget(target) {\n    var _a;\n    if (\"adoptedStyleSheets\" in target) {\n        return target;\n    }\n    else {\n        return ((_a = getShadowRoot(target)) !== null && _a !== void 0 ? _a : target.getRootNode());\n    }\n}\n// Default StyleStrategy implementations are defined in this module because they\n// require access to element shadowRoots, and we don't want to leak shadowRoot\n// objects out of this module.\n/**\n * https://wicg.github.io/construct-stylesheets/\n * https://developers.google.com/web/updates/2019/02/constructable-stylesheets\n *\n * @internal\n */\nexport class AdoptedStyleSheetsStrategy {\n    constructor(styles) {\n        const styleSheetCache = AdoptedStyleSheetsStrategy.styleSheetCache;\n        this.sheets = styles.map((x) => {\n            if (x instanceof CSSStyleSheet) {\n                return x;\n            }\n            let sheet = styleSheetCache.get(x);\n            if (sheet === void 0) {\n                sheet = new CSSStyleSheet();\n                sheet.replaceSync(x);\n                styleSheetCache.set(x, sheet);\n            }\n            return sheet;\n        });\n    }\n    addStylesTo(target) {\n        addAdoptedStyleSheets(normalizeStyleTarget(target), this.sheets);\n    }\n    removeStylesFrom(target) {\n        removeAdoptedStyleSheets(normalizeStyleTarget(target), this.sheets);\n    }\n}\nAdoptedStyleSheetsStrategy.styleSheetCache = new Map();\nlet id = 0;\nconst nextStyleId = () => `fast-${++id}`;\nfunction usableStyleTarget(target) {\n    return target === document ? document.body : target;\n}\n/**\n * @internal\n */\nexport class StyleElementStrategy {\n    constructor(styles) {\n        this.styles = styles;\n        this.styleClass = nextStyleId();\n    }\n    addStylesTo(target) {\n        target = usableStyleTarget(normalizeStyleTarget(target));\n        const styles = this.styles;\n        const styleClass = this.styleClass;\n        for (let i = 0; i < styles.length; i++) {\n            const element = document.createElement(\"style\");\n            element.innerHTML = styles[i];\n            element.className = styleClass;\n            target.append(element);\n        }\n    }\n    removeStylesFrom(target) {\n        target = usableStyleTarget(normalizeStyleTarget(target));\n        const styles = target.querySelectorAll(`.${this.styleClass}`);\n        for (let i = 0, ii = styles.length; i < ii; ++i) {\n            target.removeChild(styles[i]);\n        }\n    }\n}\nlet addAdoptedStyleSheets = (target, sheets) => {\n    target.adoptedStyleSheets = [...target.adoptedStyleSheets, ...sheets];\n};\nlet removeAdoptedStyleSheets = (target, sheets) => {\n    target.adoptedStyleSheets = target.adoptedStyleSheets.filter((x) => sheets.indexOf(x) === -1);\n};\nif (ElementStyles.supportsAdoptedStyleSheets) {\n    try {\n        // Test if browser implementation uses FrozenArray.\n        // If not, use push / splice to alter the stylesheets\n        // in place. This circumvents a bug in Safari 16.4 where\n        // periodically, assigning the array would previously\n        // cause sheets to be removed.\n        document.adoptedStyleSheets.push();\n        document.adoptedStyleSheets.splice();\n        addAdoptedStyleSheets = (target, sheets) => {\n            target.adoptedStyleSheets.push(...sheets);\n        };\n        removeAdoptedStyleSheets = (target, sheets) => {\n            for (const sheet of sheets) {\n                const index = target.adoptedStyleSheets.indexOf(sheet);\n                if (index !== -1) {\n                    target.adoptedStyleSheets.splice(index, 1);\n                }\n            }\n        };\n    }\n    catch (e) {\n        // Do nothing if an error is thrown, the default\n        // case handles FrozenArray.\n    }\n    ElementStyles.setDefaultStrategy(AdoptedStyleSheetsStrategy);\n}\nelse {\n    ElementStyles.setDefaultStrategy(StyleElementStrategy);\n}\nconst deferHydrationAttribute = \"defer-hydration\";\nconst needsHydrationAttribute = \"needs-hydration\";\n/**\n * An ElementController capable of hydrating FAST elements from\n * Declarative Shadow DOM.\n *\n * @beta\n */\nexport class HydratableElementController extends ElementController {\n    static hydrationObserverHandler(records) {\n        for (const record of records) {\n            HydratableElementController.hydrationObserver.unobserve(record.target);\n            record.target.$fastController.connect();\n        }\n    }\n    connect() {\n        var _a, _b;\n        // Initialize needsHydration on first connect\n        if (this.needsHydration === undefined) {\n            this.needsHydration =\n                this.source.getAttribute(needsHydrationAttribute) !== null;\n        }\n        // If the `defer-hydration` attribute exists on the source,\n        // wait for it to be removed before continuing connection behavior.\n        if (this.source.hasAttribute(deferHydrationAttribute)) {\n            HydratableElementController.hydrationObserver.observe(this.source, {\n                attributeFilter: [deferHydrationAttribute],\n            });\n            return;\n        }\n        // If the controller does not need to be hydrated, defer connection behavior\n        // to the base-class. This case handles element re-connection and initial connection\n        // of elements that did not get declarative shadow-dom emitted, as well as if an extending\n        // class\n        if (!this.needsHydration) {\n            super.connect();\n            return;\n        }\n        if (this.stage !== 3 /* Stages.disconnected */) {\n            return;\n        }\n        this.stage = 0 /* Stages.connecting */;\n        this.bindObservables();\n        this.connectBehaviors();\n        const element = this.source;\n        const host = (_a = getShadowRoot(element)) !== null && _a !== void 0 ? _a : element;\n        if (this.template) {\n            if (isHydratable(this.template)) {\n                let firstChild = host.firstChild;\n                let lastChild = host.lastChild;\n                if (element.shadowRoot === null) {\n                    // handle element boundary markers when shadowRoot is not present\n                    if (HydrationMarkup.isElementBoundaryStartMarker(firstChild)) {\n                        firstChild.data = \"\";\n                        firstChild = firstChild.nextSibling;\n                    }\n                    if (HydrationMarkup.isElementBoundaryEndMarker(lastChild)) {\n                        lastChild.data = \"\";\n                        lastChild = lastChild.previousSibling;\n                    }\n                }\n                this.view = this.template.hydrate(firstChild, lastChild, element);\n                (_b = this.view) === null || _b === void 0 ? void 0 : _b.bind(this.source);\n            }\n            else {\n                this.renderTemplate(this.template);\n            }\n        }\n        this.addStyles(this.mainStyles);\n        this.stage = 1 /* Stages.connected */;\n        this.source.removeAttribute(needsHydrationAttribute);\n        this.needsInitialization = this.needsHydration = false;\n        Observable.notify(this, isConnectedPropertyName);\n    }\n    disconnect() {\n        super.disconnect();\n        HydratableElementController.hydrationObserver.unobserve(this.source);\n    }\n    static install() {\n        ElementController.setStrategy(HydratableElementController);\n    }\n}\nHydratableElementController.hydrationObserver = new UnobservableMutationObserver(HydratableElementController.hydrationObserverHandler);\n","import { DOM } from \"./dom.js\";\nimport { ExecutionContext } from \"./observation/observable.js\";\nimport { nextId } from \"./templating/markup.js\";\n/**\n * Retrieves the \"composed parent\" element of a node, ignoring DOM tree boundaries.\n * When the parent of a node is a shadow-root, it will return the host\n * element of the shadow root. Otherwise it will return the parent node or null if\n * no parent node exists.\n * @param element - The element for which to retrieve the composed parent\n *\n * @public\n */\nexport function composedParent(element) {\n    const parentNode = element.parentElement;\n    if (parentNode) {\n        return parentNode;\n    }\n    else {\n        const rootNode = element.getRootNode();\n        if (rootNode.host instanceof HTMLElement) {\n            // this is shadow-root\n            return rootNode.host;\n        }\n    }\n    return null;\n}\n/**\n * Determines if the reference element contains the test element in a \"composed\" DOM tree that\n * ignores shadow DOM boundaries.\n *\n * Returns true of the test element is a descendent of the reference, or exists in\n * a shadow DOM that is a logical descendent of the reference. Otherwise returns false.\n * @param reference - The element to test for containment against.\n * @param test - The element being tested for containment.\n *\n * @public\n */\nexport function composedContains(reference, test) {\n    let current = test;\n    while (current !== null) {\n        if (current === reference) {\n            return true;\n        }\n        current = composedParent(current);\n    }\n    return false;\n}\n/**\n * An extension of MutationObserver that supports unobserving nodes.\n * @internal\n */\nexport class UnobservableMutationObserver extends MutationObserver {\n    /**\n     * Creates an instance of UnobservableMutationObserver.\n     * @param callback - The callback to invoke when observed nodes are changed.\n     */\n    constructor(callback) {\n        function handler(mutations) {\n            this.callback.call(null, mutations.filter(record => this.observedNodes.has(record.target)));\n        }\n        super(handler);\n        this.callback = callback;\n        this.observedNodes = new Set();\n    }\n    observe(target, options) {\n        this.observedNodes.add(target);\n        super.observe(target, options);\n    }\n    unobserve(target) {\n        this.observedNodes.delete(target);\n        if (this.observedNodes.size < 1) {\n            this.disconnect();\n        }\n    }\n}\n/**\n * Bridges between ViewBehaviors and HostBehaviors, enabling a host to\n * control ViewBehaviors.\n * @public\n */\nexport const ViewBehaviorOrchestrator = Object.freeze({\n    /**\n     * Creates a ViewBehaviorOrchestrator.\n     * @param source - The source to to associate behaviors with.\n     * @returns A ViewBehaviorOrchestrator.\n     */\n    create(source) {\n        const behaviors = [];\n        const targets = {};\n        let unbindables = null;\n        let isConnected = false;\n        return {\n            source,\n            context: ExecutionContext.default,\n            targets,\n            get isBound() {\n                return isConnected;\n            },\n            addBehaviorFactory(factory, target) {\n                var _a, _b, _c, _d;\n                const compiled = factory;\n                compiled.id = (_a = compiled.id) !== null && _a !== void 0 ? _a : nextId();\n                compiled.targetNodeId = (_b = compiled.targetNodeId) !== null && _b !== void 0 ? _b : nextId();\n                compiled.targetTagName = (_c = target.tagName) !== null && _c !== void 0 ? _c : null;\n                compiled.policy = (_d = compiled.policy) !== null && _d !== void 0 ? _d : DOM.policy;\n                this.addTarget(compiled.targetNodeId, target);\n                this.addBehavior(compiled.createBehavior());\n            },\n            addTarget(nodeId, target) {\n                targets[nodeId] = target;\n            },\n            addBehavior(behavior) {\n                behaviors.push(behavior);\n                if (isConnected) {\n                    behavior.bind(this);\n                }\n            },\n            onUnbind(unbindable) {\n                if (unbindables === null) {\n                    unbindables = [];\n                }\n                unbindables.push(unbindable);\n            },\n            connectedCallback(controller) {\n                if (!isConnected) {\n                    isConnected = true;\n                    behaviors.forEach(x => x.bind(this));\n                }\n            },\n            disconnectedCallback(controller) {\n                if (isConnected) {\n                    isConnected = false;\n                    if (unbindables !== null) {\n                        unbindables.forEach(x => x.unbind(this));\n                    }\n                }\n            },\n        };\n    },\n});\n","import { isString, KernelServiceId } from \"../interfaces.js\";\nimport { Observable } from \"../observation/observable.js\";\nimport { createTypeRegistry, FAST } from \"../platform.js\";\nimport { ElementStyles } from \"../styles/element-styles.js\";\nimport { AttributeDefinition } from \"./attributes.js\";\nconst defaultShadowOptions = { mode: \"open\" };\nconst defaultElementOptions = {};\nconst fastElementBaseTypes = new Set();\nconst fastElementRegistry = FAST.getById(KernelServiceId.elementRegistry, () => createTypeRegistry());\n/**\n * Defines metadata for a FASTElement.\n * @public\n */\nexport class FASTElementDefinition {\n    constructor(type, nameOrConfig = type.definition) {\n        var _a;\n        this.platformDefined = false;\n        if (isString(nameOrConfig)) {\n            nameOrConfig = { name: nameOrConfig };\n        }\n        this.type = type;\n        this.name = nameOrConfig.name;\n        this.template = nameOrConfig.template;\n        this.registry = (_a = nameOrConfig.registry) !== null && _a !== void 0 ? _a : customElements;\n        const proto = type.prototype;\n        const attributes = AttributeDefinition.collect(type, nameOrConfig.attributes);\n        const observedAttributes = new Array(attributes.length);\n        const propertyLookup = {};\n        const attributeLookup = {};\n        for (let i = 0, ii = attributes.length; i < ii; ++i) {\n            const current = attributes[i];\n            observedAttributes[i] = current.attribute;\n            propertyLookup[current.name] = current;\n            attributeLookup[current.attribute] = current;\n            Observable.defineProperty(proto, current);\n        }\n        Reflect.defineProperty(type, \"observedAttributes\", {\n            value: observedAttributes,\n            enumerable: true,\n        });\n        this.attributes = attributes;\n        this.propertyLookup = propertyLookup;\n        this.attributeLookup = attributeLookup;\n        this.shadowOptions =\n            nameOrConfig.shadowOptions === void 0\n                ? defaultShadowOptions\n                : nameOrConfig.shadowOptions === null\n                    ? void 0\n                    : Object.assign(Object.assign({}, defaultShadowOptions), nameOrConfig.shadowOptions);\n        this.elementOptions =\n            nameOrConfig.elementOptions === void 0\n                ? defaultElementOptions\n                : Object.assign(Object.assign({}, defaultElementOptions), nameOrConfig.elementOptions);\n        this.styles = ElementStyles.normalize(nameOrConfig.styles);\n        fastElementRegistry.register(this);\n    }\n    /**\n     * Indicates if this element has been defined in at least one registry.\n     */\n    get isDefined() {\n        return this.platformDefined;\n    }\n    /**\n     * Defines a custom element based on this definition.\n     * @param registry - The element registry to define the element in.\n     * @remarks\n     * This operation is idempotent per registry.\n     */\n    define(registry = this.registry) {\n        const type = this.type;\n        if (!registry.get(this.name)) {\n            this.platformDefined = true;\n            registry.define(this.name, type, this.elementOptions);\n        }\n        return this;\n    }\n    /**\n     * Creates an instance of FASTElementDefinition.\n     * @param type - The type this definition is being created for.\n     * @param nameOrDef - The name of the element to define or a config object\n     * that describes the element to define.\n     */\n    static compose(type, nameOrDef) {\n        if (fastElementBaseTypes.has(type) || fastElementRegistry.getByType(type)) {\n            return new FASTElementDefinition(class extends type {\n            }, nameOrDef);\n        }\n        return new FASTElementDefinition(type, nameOrDef);\n    }\n    /**\n     * Registers a FASTElement base type.\n     * @param type - The type to register as a base type.\n     * @internal\n     */\n    static registerBaseType(type) {\n        fastElementBaseTypes.add(type);\n    }\n}\n/**\n * Gets the element definition associated with the specified type.\n * @param type - The custom element type to retrieve the definition for.\n */\nFASTElementDefinition.getByType = fastElementRegistry.getByType;\n/**\n * Gets the element definition associated with the instance.\n * @param instance - The custom element instance to retrieve the definition for.\n */\nFASTElementDefinition.getForInstance = fastElementRegistry.getForInstance;\n","const bindingStartMarker = /fe-b\\$\\$start\\$\\$(\\d+)\\$\\$(.+)\\$\\$fe-b/;\nconst bindingEndMarker = /fe-b\\$\\$end\\$\\$(\\d+)\\$\\$(.+)\\$\\$fe-b/;\nconst repeatViewStartMarker = /fe-repeat\\$\\$start\\$\\$(\\d+)\\$\\$fe-repeat/;\nconst repeatViewEndMarker = /fe-repeat\\$\\$end\\$\\$(\\d+)\\$\\$fe-repeat/;\nconst elementBoundaryStartMarker = /^(?:.{0,1000})fe-eb\\$\\$start\\$\\$(.+?)\\$\\$fe-eb/;\nconst elementBoundaryEndMarker = /fe-eb\\$\\$end\\$\\$(.{0,1000})\\$\\$fe-eb(?:.{0,1000})$/;\nfunction isComment(node) {\n    return node && node.nodeType === Node.COMMENT_NODE;\n}\n/**\n * Markup utilities to aid in template hydration.\n * @internal\n */\nexport const HydrationMarkup = Object.freeze({\n    attributeMarkerName: \"data-fe-b\",\n    attributeBindingSeparator: \" \",\n    contentBindingStartMarker(index, uniqueId) {\n        return `fe-b$$start$$${index}$$${uniqueId}$$fe-b`;\n    },\n    contentBindingEndMarker(index, uniqueId) {\n        return `fe-b$$end$$${index}$$${uniqueId}$$fe-b`;\n    },\n    repeatStartMarker(index) {\n        return `fe-repeat$$start$$${index}$$fe-repeat`;\n    },\n    repeatEndMarker(index) {\n        return `fe-repeat$$end$$${index}$$fe-repeat`;\n    },\n    isContentBindingStartMarker(content) {\n        return bindingStartMarker.test(content);\n    },\n    isContentBindingEndMarker(content) {\n        return bindingEndMarker.test(content);\n    },\n    isRepeatViewStartMarker(content) {\n        return repeatViewStartMarker.test(content);\n    },\n    isRepeatViewEndMarker(content) {\n        return repeatViewEndMarker.test(content);\n    },\n    isElementBoundaryStartMarker(node) {\n        return isComment(node) && elementBoundaryStartMarker.test(node.data.trim());\n    },\n    isElementBoundaryEndMarker(node) {\n        return isComment(node) && elementBoundaryEndMarker.test(node.data);\n    },\n    /**\n     * Returns the indexes of the ViewBehaviorFactories affecting\n     * attributes for the element, or null if no factories were found.\n     */\n    parseAttributeBinding(node) {\n        const attr = node.getAttribute(this.attributeMarkerName);\n        return attr === null\n            ? attr\n            : attr.split(this.attributeBindingSeparator).map(i => parseInt(i));\n    },\n    /**\n     * Parses the ViewBehaviorFactory index from string data. Returns\n     * the binding index or null if the index cannot be retrieved.\n     */\n    parseContentBindingStartMarker(content) {\n        return parseIndexAndIdMarker(bindingStartMarker, content);\n    },\n    parseContentBindingEndMarker(content) {\n        return parseIndexAndIdMarker(bindingEndMarker, content);\n    },\n    /**\n     * Parses the index of a repeat directive from a content string.\n     */\n    parseRepeatStartMarker(content) {\n        return parseIntMarker(repeatViewStartMarker, content);\n    },\n    parseRepeatEndMarker(content) {\n        return parseIntMarker(repeatViewEndMarker, content);\n    },\n    /**\n     * Parses element Id from element boundary markers\n     */\n    parseElementBoundaryStartMarker(content) {\n        return parseStringMarker(elementBoundaryStartMarker, content.trim());\n    },\n    parseElementBoundaryEndMarker(content) {\n        return parseStringMarker(elementBoundaryEndMarker, content);\n    },\n});\nfunction parseIntMarker(regex, content) {\n    const match = regex.exec(content);\n    return match === null ? match : parseInt(match[1]);\n}\nfunction parseStringMarker(regex, content) {\n    const match = regex.exec(content);\n    return match === null ? match : match[1];\n}\nfunction parseIndexAndIdMarker(regex, content) {\n    const match = regex.exec(content);\n    return match === null ? match : [parseInt(match[1]), match[2]];\n}\n/**\n * @internal\n */\nexport const Hydratable = Symbol.for(\"fe-hydration\");\nexport function isHydratable(value) {\n    return value[Hydratable] === Hydratable;\n}\n","import { isFunction, isString } from \"../interfaces.js\";\nimport { Binding } from \"../binding/binding.js\";\nimport { FAST, makeSerializationNoop } from \"../platform.js\";\nimport { oneWay } from \"../binding/one-way.js\";\nimport { oneTime } from \"../binding/one-time.js\";\nimport { HTMLBindingDirective } from \"./html-binding-directive.js\";\nimport { Compiler } from \"./compiler.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { nextId } from \"./markup.js\";\n// Much thanks to LitHTML for working this out!\nconst lastAttributeNameRegex = \n/* eslint-disable-next-line no-control-regex, max-len */\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\nconst noFactories = Object.create(null);\n/**\n * Inlines a template into another template.\n * @public\n */\nexport class InlineTemplateDirective {\n    /**\n     * Creates an instance of InlineTemplateDirective.\n     * @param template - The template to inline.\n     */\n    constructor(html, factories = noFactories) {\n        this.html = html;\n        this.factories = factories;\n    }\n    /**\n     * Creates HTML to be used within a template.\n     * @param add - Can be used to add  behavior factories to a template.\n     */\n    createHTML(add) {\n        const factories = this.factories;\n        for (const key in factories) {\n            add(factories[key]);\n        }\n        return this.html;\n    }\n}\n/**\n * An empty template partial.\n */\nInlineTemplateDirective.empty = new InlineTemplateDirective(\"\");\nHTMLDirective.define(InlineTemplateDirective);\nfunction createHTML(value, prevString, add, definition = HTMLDirective.getForInstance(value)) {\n    if (definition.aspected) {\n        const match = lastAttributeNameRegex.exec(prevString);\n        if (match !== null) {\n            HTMLDirective.assignAspect(value, match[2]);\n        }\n    }\n    return value.createHTML(add);\n}\n/**\n * A template capable of creating HTMLView instances or rendering directly to DOM.\n * @public\n */\nexport class ViewTemplate {\n    /**\n     * Creates an instance of ViewTemplate.\n     * @param html - The html representing what this template will instantiate, including placeholders for directives.\n     * @param factories - The directives that will be connected to placeholders in the html.\n     * @param policy - The security policy to use when compiling this template.\n     */\n    constructor(html, factories = {}, policy) {\n        this.policy = policy;\n        this.result = null;\n        this.html = html;\n        this.factories = factories;\n    }\n    /**\n     * @internal\n     */\n    compile() {\n        if (this.result === null) {\n            this.result = Compiler.compile(this.html, this.factories, this.policy);\n        }\n        return this.result;\n    }\n    /**\n     * Creates an HTMLView instance based on this template definition.\n     * @param hostBindingTarget - The element that host behaviors will be bound to.\n     */\n    create(hostBindingTarget) {\n        return this.compile().createView(hostBindingTarget);\n    }\n    /**\n     * Returns a directive that can inline the template.\n     */\n    inline() {\n        return new InlineTemplateDirective(isString(this.html) ? this.html : this.html.innerHTML, this.factories);\n    }\n    /**\n     * Sets the DOMPolicy for this template.\n     * @param policy - The policy to associated with this template.\n     * @returns The modified template instance.\n     * @remarks\n     * The DOMPolicy can only be set once for a template and cannot be\n     * set after the template is compiled.\n     */\n    withPolicy(policy) {\n        if (this.result) {\n            throw FAST.error(1208 /* Message.cannotSetTemplatePolicyAfterCompilation */);\n        }\n        if (this.policy) {\n            throw FAST.error(1207 /* Message.onlySetTemplatePolicyOnce */);\n        }\n        this.policy = policy;\n        return this;\n    }\n    /**\n     * Creates an HTMLView from this template, binds it to the source, and then appends it to the host.\n     * @param source - The data source to bind the template to.\n     * @param host - The Element where the template will be rendered.\n     * @param hostBindingTarget - An HTML element to target the host bindings at if different from the\n     * host that the template is being attached to.\n     */\n    render(source, host, hostBindingTarget) {\n        const view = this.create(hostBindingTarget);\n        view.bind(source);\n        view.appendTo(host);\n        return view;\n    }\n    /**\n     * Creates a template based on a set of static strings and dynamic values.\n     * @param strings - The static strings to create the template with.\n     * @param values - The dynamic values to create the template with.\n     * @param policy - The DOMPolicy to associated with the template.\n     * @returns A ViewTemplate.\n     * @remarks\n     * This API should not be used directly under normal circumstances because constructing\n     * a template in this way, if not done properly, can open up the application to XSS\n     * attacks. When using this API, provide a strong DOMPolicy that can properly sanitize\n     * and also be sure to manually sanitize all static strings particularly if they can\n     * come from user input.\n     */\n    static create(strings, values, policy) {\n        let html = \"\";\n        const factories = Object.create(null);\n        const add = (factory) => {\n            var _a;\n            const id = (_a = factory.id) !== null && _a !== void 0 ? _a : (factory.id = nextId());\n            factories[id] = factory;\n            return id;\n        };\n        for (let i = 0, ii = strings.length - 1; i < ii; ++i) {\n            const currentString = strings[i];\n            let currentValue = values[i];\n            let definition;\n            html += currentString;\n            if (isFunction(currentValue)) {\n                currentValue = new HTMLBindingDirective(oneWay(currentValue));\n            }\n            else if (currentValue instanceof Binding) {\n                currentValue = new HTMLBindingDirective(currentValue);\n            }\n            else if (!(definition = HTMLDirective.getForInstance(currentValue))) {\n                const staticValue = currentValue;\n                currentValue = new HTMLBindingDirective(oneTime(() => staticValue));\n            }\n            html += createHTML(currentValue, currentString, add, definition);\n        }\n        return new ViewTemplate(html + strings[strings.length - 1], factories, policy);\n    }\n}\nmakeSerializationNoop(ViewTemplate);\n/**\n * Transforms a template literal string into a ViewTemplate.\n * @param strings - The string fragments that are interpolated with the values.\n * @param values - The values that are interpolated with the string fragments.\n * @remarks\n * The html helper supports interpolation of strings, numbers, binding expressions,\n * other template instances, and Directive instances.\n * @public\n */\nexport const html = ((strings, ...values) => {\n    if (Array.isArray(strings) && Array.isArray(strings.raw)) {\n        return ViewTemplate.create(strings, values);\n    }\n    throw FAST.error(1206 /* Message.directCallToHTMLTagNotAllowed */);\n});\nhtml.partial = (html) => {\n    return new InlineTemplateDirective(html);\n};\n","import { makeSerializationNoop } from \"../platform.js\";\nimport { Binding } from \"./binding.js\";\nclass OneTimeBinding extends Binding {\n    createObserver() {\n        return this;\n    }\n    bind(controller) {\n        return this.evaluate(controller.source, controller.context);\n    }\n}\nmakeSerializationNoop(OneTimeBinding);\n/**\n * Creates a one time binding\n * @param expression - The binding to refresh when signaled.\n * @param policy - The security policy to associate with th binding.\n * @returns A binding configuration.\n * @public\n */\nexport function oneTime(expression, policy) {\n    return new OneTimeBinding(expression, policy);\n}\n","import { isHydratable } from \"../components/hydration.js\";\nimport { DOM, DOMAspect } from \"../dom.js\";\nimport \"../interfaces.js\";\nimport { ExecutionContext, } from \"../observation/observable.js\";\nimport { FAST } from \"../platform.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { Markup } from \"./markup.js\";\nimport { HydrationStage } from \"./view.js\";\nfunction isContentTemplate(value) {\n    return value.create !== undefined;\n}\nfunction updateContent(target, aspect, value, controller) {\n    // If there's no actual value, then this equates to the\n    // empty string for the purposes of content bindings.\n    if (value === null || value === undefined) {\n        value = \"\";\n    }\n    // If the value has a \"create\" method, then it's a ContentTemplate.\n    if (isContentTemplate(value)) {\n        target.textContent = \"\";\n        let view = target.$fastView;\n        // If there's no previous view that we might be able to\n        // reuse then create a new view from the template.\n        if (view === void 0) {\n            if (isHydratable(controller) &&\n                isHydratable(value) &&\n                controller.bindingViewBoundaries[this.targetNodeId] !== undefined &&\n                controller.hydrationStage !== HydrationStage.hydrated) {\n                const viewNodes = controller.bindingViewBoundaries[this.targetNodeId];\n                view = value.hydrate(viewNodes.first, viewNodes.last);\n            }\n            else {\n                view = value.create();\n            }\n        }\n        else {\n            // If there is a previous view, but it wasn't created\n            // from the same template as the new value, then we\n            // need to remove the old view if it's still in the DOM\n            // and create a new view from the template.\n            if (target.$fastTemplate !== value) {\n                if (view.isComposed) {\n                    view.remove();\n                    view.unbind();\n                }\n                view = value.create();\n            }\n        }\n        // It's possible that the value is the same as the previous template\n        // and that there's actually no need to compose it.\n        if (!view.isComposed) {\n            view.isComposed = true;\n            view.bind(controller.source, controller.context);\n            view.insertBefore(target);\n            target.$fastView = view;\n            target.$fastTemplate = value;\n        }\n        else if (view.needsBindOnly) {\n            view.needsBindOnly = false;\n            view.bind(controller.source, controller.context);\n        }\n    }\n    else {\n        const view = target.$fastView;\n        // If there is a view and it's currently composed into\n        // the DOM, then we need to remove it.\n        if (view !== void 0 && view.isComposed) {\n            view.isComposed = false;\n            view.remove();\n            if (view.needsBindOnly) {\n                view.needsBindOnly = false;\n            }\n            else {\n                view.unbind();\n            }\n        }\n        target.textContent = value;\n    }\n}\nfunction updateTokenList(target, aspect, value) {\n    var _a;\n    const lookup = `${this.id}-t`;\n    const state = (_a = target[lookup]) !== null && _a !== void 0 ? _a : (target[lookup] = { v: 0, cv: Object.create(null) });\n    const classVersions = state.cv;\n    let version = state.v;\n    const tokenList = target[aspect];\n    // Add the classes, tracking the version at which they were added.\n    if (value !== null && value !== undefined && value.length) {\n        const names = value.split(/\\s+/);\n        for (let i = 0, ii = names.length; i < ii; ++i) {\n            const currentName = names[i];\n            if (currentName === \"\") {\n                continue;\n            }\n            classVersions[currentName] = version;\n            tokenList.add(currentName);\n        }\n    }\n    state.v = version + 1;\n    // If this is the first call to add classes, there's no need to remove old ones.\n    if (version === 0) {\n        return;\n    }\n    // Remove classes from the previous version.\n    version -= 1;\n    for (const name in classVersions) {\n        if (classVersions[name] === version) {\n            tokenList.remove(name);\n        }\n    }\n}\nconst sinkLookup = {\n    [DOMAspect.attribute]: DOM.setAttribute,\n    [DOMAspect.booleanAttribute]: DOM.setBooleanAttribute,\n    [DOMAspect.property]: (t, a, v) => (t[a] = v),\n    [DOMAspect.content]: updateContent,\n    [DOMAspect.tokenList]: updateTokenList,\n    [DOMAspect.event]: () => void 0,\n};\n/**\n * A directive that applies bindings.\n * @public\n */\nexport class HTMLBindingDirective {\n    /**\n     * Creates an instance of HTMLBindingDirective.\n     * @param dataBinding - The binding configuration to apply.\n     */\n    constructor(dataBinding) {\n        this.dataBinding = dataBinding;\n        this.updateTarget = null;\n        /**\n         * The type of aspect to target.\n         */\n        this.aspectType = DOMAspect.content;\n    }\n    /**\n     * Creates HTML to be used within a template.\n     * @param add - Can be used to add  behavior factories to a template.\n     */\n    createHTML(add) {\n        return Markup.interpolation(add(this));\n    }\n    /**\n     * Creates a behavior.\n     */\n    createBehavior() {\n        var _a;\n        if (this.updateTarget === null) {\n            const sink = sinkLookup[this.aspectType];\n            const policy = (_a = this.dataBinding.policy) !== null && _a !== void 0 ? _a : this.policy;\n            if (!sink) {\n                throw FAST.error(1205 /* Message.unsupportedBindingBehavior */);\n            }\n            this.data = `${this.id}-d`;\n            this.updateTarget = policy.protect(this.targetTagName, this.aspectType, this.targetAspect, sink);\n        }\n        return this;\n    }\n    /** @internal */\n    bind(controller) {\n        var _a;\n        const target = controller.targets[this.targetNodeId];\n        const isHydrating = isHydratable(controller) &&\n            controller.hydrationStage &&\n            controller.hydrationStage !== HydrationStage.hydrated;\n        switch (this.aspectType) {\n            case DOMAspect.event:\n                target[this.data] = controller;\n                target.addEventListener(this.targetAspect, this, this.dataBinding.options);\n                break;\n            case DOMAspect.content:\n                controller.onUnbind(this);\n            // intentional fall through\n            default:\n                const observer = (_a = target[this.data]) !== null && _a !== void 0 ? _a : (target[this.data] = this.dataBinding.createObserver(this, this));\n                observer.target = target;\n                observer.controller = controller;\n                if (isHydrating &&\n                    (this.aspectType === DOMAspect.attribute ||\n                        this.aspectType === DOMAspect.booleanAttribute)) {\n                    observer.bind(controller);\n                    // Skip updating target during bind for attributes\n                    break;\n                }\n                this.updateTarget(target, this.targetAspect, observer.bind(controller), controller);\n                break;\n        }\n    }\n    /** @internal */\n    unbind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        const view = target.$fastView;\n        if (view !== void 0 && view.isComposed) {\n            view.unbind();\n            view.needsBindOnly = true;\n        }\n    }\n    /** @internal */\n    handleEvent(event) {\n        const controller = event.currentTarget[this.data];\n        if (controller.isBound) {\n            ExecutionContext.setEvent(event);\n            const result = this.dataBinding.evaluate(controller.source, controller.context);\n            ExecutionContext.setEvent(null);\n            if (result !== true) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** @internal */\n    handleChange(binding, observer) {\n        const target = observer.target;\n        const controller = observer.controller;\n        this.updateTarget(target, this.targetAspect, observer.bind(controller), controller);\n    }\n}\nHTMLDirective.define(HTMLBindingDirective, { aspected: true });\n","var _a;\nimport { Hydratable } from \"../components/hydration.js\";\nimport { buildViewBindingTargets, createRangeForNodes, HydrationTargetElementError, targetFactory, } from \"../hydration/target-builder.js\";\nimport { ExecutionContext, Observable, SourceLifetime, } from \"../observation/observable.js\";\nimport { makeSerializationNoop } from \"../platform.js\";\nfunction removeNodeSequence(firstNode, lastNode) {\n    const parent = firstNode.parentNode;\n    let current = firstNode;\n    let next;\n    while (current !== lastNode) {\n        next = current.nextSibling;\n        if (!next) {\n            throw new Error(`Unmatched first/last child inside \"${lastNode.getRootNode().host.nodeName}\".`);\n        }\n        parent.removeChild(current);\n        current = next;\n    }\n    parent.removeChild(lastNode);\n}\nclass DefaultExecutionContext {\n    constructor() {\n        /**\n         * The index of the current item within a repeat context.\n         */\n        this.index = 0;\n        /**\n         * The length of the current collection within a repeat context.\n         */\n        this.length = 0;\n    }\n    /**\n     * The current event within an event handler.\n     */\n    get event() {\n        return ExecutionContext.getEvent();\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an even index.\n     */\n    get isEven() {\n        return this.index % 2 === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an odd index.\n     */\n    get isOdd() {\n        return this.index % 2 !== 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the first item in the collection.\n     */\n    get isFirst() {\n        return this.index === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is somewhere in the middle of the collection.\n     */\n    get isInMiddle() {\n        return !this.isFirst && !this.isLast;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the last item in the collection.\n     */\n    get isLast() {\n        return this.index === this.length - 1;\n    }\n    /**\n     * Returns the typed event detail of a custom event.\n     */\n    eventDetail() {\n        return this.event.detail;\n    }\n    /**\n     * Returns the typed event target of the event.\n     */\n    eventTarget() {\n        return this.event.target;\n    }\n}\n/**\n * The standard View implementation, which also implements ElementView and SyntheticView.\n * @public\n */\nexport class HTMLView extends DefaultExecutionContext {\n    /**\n     * Constructs an instance of HTMLView.\n     * @param fragment - The html fragment that contains the nodes for this view.\n     * @param behaviors - The behaviors to be applied to this view.\n     */\n    constructor(fragment, factories, targets) {\n        super();\n        this.fragment = fragment;\n        this.factories = factories;\n        this.targets = targets;\n        this.behaviors = null;\n        this.unbindables = [];\n        /**\n         * The data that the view is bound to.\n         */\n        this.source = null;\n        /**\n         * Indicates whether the controller is bound.\n         */\n        this.isBound = false;\n        /**\n         * Indicates how the source's lifetime relates to the controller's lifetime.\n         */\n        this.sourceLifetime = SourceLifetime.unknown;\n        /**\n         * The execution context the view is running within.\n         */\n        this.context = this;\n        this.firstChild = fragment.firstChild;\n        this.lastChild = fragment.lastChild;\n    }\n    /**\n     * Appends the view's DOM nodes to the referenced node.\n     * @param node - The parent node to append the view's DOM nodes to.\n     */\n    appendTo(node) {\n        node.appendChild(this.fragment);\n    }\n    /**\n     * Inserts the view's DOM nodes before the referenced node.\n     * @param node - The node to insert the view's DOM before.\n     */\n    insertBefore(node) {\n        if (this.fragment.hasChildNodes()) {\n            node.parentNode.insertBefore(this.fragment, node);\n        }\n        else {\n            const end = this.lastChild;\n            if (node.previousSibling === end)\n                return;\n            const parentNode = node.parentNode;\n            let current = this.firstChild;\n            let next;\n            while (current !== end) {\n                next = current.nextSibling;\n                parentNode.insertBefore(current, node);\n                current = next;\n            }\n            parentNode.insertBefore(end, node);\n        }\n    }\n    /**\n     * Removes the view's DOM nodes.\n     * The nodes are not disposed and the view can later be re-inserted.\n     */\n    remove() {\n        const fragment = this.fragment;\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while (current !== end) {\n            next = current.nextSibling;\n            fragment.appendChild(current);\n            current = next;\n        }\n        fragment.appendChild(end);\n    }\n    /**\n     * Removes the view and unbinds its behaviors, disposing of DOM nodes afterward.\n     * Once a view has been disposed, it cannot be inserted or bound again.\n     */\n    dispose() {\n        removeNodeSequence(this.firstChild, this.lastChild);\n        this.unbind();\n    }\n    onUnbind(behavior) {\n        this.unbindables.push(behavior);\n    }\n    /**\n     * Binds a view's behaviors to its binding source.\n     * @param source - The binding source for the view's binding behaviors.\n     * @param context - The execution context to run the behaviors within.\n     */\n    bind(source, context = this) {\n        if (this.source === source) {\n            return;\n        }\n        let behaviors = this.behaviors;\n        if (behaviors === null) {\n            this.source = source;\n            this.context = context;\n            this.behaviors = behaviors = new Array(this.factories.length);\n            const factories = this.factories;\n            for (let i = 0, ii = factories.length; i < ii; ++i) {\n                const behavior = factories[i].createBehavior();\n                behavior.bind(this);\n                behaviors[i] = behavior;\n            }\n        }\n        else {\n            if (this.source !== null) {\n                this.evaluateUnbindables();\n            }\n            this.isBound = false;\n            this.source = source;\n            this.context = context;\n            for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n                behaviors[i].bind(this);\n            }\n        }\n        this.isBound = true;\n    }\n    /**\n     * Unbinds a view's behaviors from its binding source.\n     */\n    unbind() {\n        if (!this.isBound || this.source === null) {\n            return;\n        }\n        this.evaluateUnbindables();\n        this.source = null;\n        this.context = this;\n        this.isBound = false;\n    }\n    evaluateUnbindables() {\n        const unbindables = this.unbindables;\n        for (let i = 0, ii = unbindables.length; i < ii; ++i) {\n            unbindables[i].unbind(this);\n        }\n        unbindables.length = 0;\n    }\n    /**\n     * Efficiently disposes of a contiguous range of synthetic view instances.\n     * @param views - A contiguous range of views to be disposed.\n     */\n    static disposeContiguousBatch(views) {\n        if (views.length === 0) {\n            return;\n        }\n        removeNodeSequence(views[0].firstChild, views[views.length - 1].lastChild);\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n            views[i].unbind();\n        }\n    }\n}\nmakeSerializationNoop(HTMLView);\nObservable.defineProperty(HTMLView.prototype, \"index\");\nObservable.defineProperty(HTMLView.prototype, \"length\");\nexport const HydrationStage = {\n    unhydrated: \"unhydrated\",\n    hydrating: \"hydrating\",\n    hydrated: \"hydrated\",\n};\n/** @public */\nexport class HydrationBindingError extends Error {\n    constructor(\n    /**\n     * The error message\n     */\n    message, \n    /**\n     * The factory that was unable to be bound\n     */\n    factory, \n    /**\n     * A DocumentFragment containing a clone of the\n     * view's Nodes.\n     */\n    fragment, \n    /**\n     * String representation of the HTML in the template that\n     * threw the binding error.\n     */\n    templateString) {\n        super(message);\n        this.factory = factory;\n        this.fragment = fragment;\n        this.templateString = templateString;\n    }\n}\nexport class HydrationView extends DefaultExecutionContext {\n    constructor(firstChild, lastChild, sourceTemplate, hostBindingTarget) {\n        super();\n        this.firstChild = firstChild;\n        this.lastChild = lastChild;\n        this.sourceTemplate = sourceTemplate;\n        this.hostBindingTarget = hostBindingTarget;\n        this[_a] = Hydratable;\n        this.context = this;\n        this.source = null;\n        this.isBound = false;\n        this.sourceLifetime = SourceLifetime.unknown;\n        this.unbindables = [];\n        this.fragment = null;\n        this.behaviors = null;\n        this._hydrationStage = HydrationStage.unhydrated;\n        this._bindingViewBoundaries = {};\n        this._targets = {};\n        this.factories = sourceTemplate.compile().factories;\n    }\n    get hydrationStage() {\n        return this._hydrationStage;\n    }\n    get targets() {\n        return this._targets;\n    }\n    get bindingViewBoundaries() {\n        return this._bindingViewBoundaries;\n    }\n    /**\n     * no-op. Hydrated views are don't need to be moved from a documentFragment\n     * to the target node.\n     */\n    insertBefore(node) {\n        // No-op in cases where this is called before the view is removed,\n        // because the nodes will already be in the document and just need hydrating.\n        if (this.fragment === null) {\n            return;\n        }\n        if (this.fragment.hasChildNodes()) {\n            node.parentNode.insertBefore(this.fragment, node);\n        }\n        else {\n            const end = this.lastChild;\n            if (node.previousSibling === end)\n                return;\n            const parentNode = node.parentNode;\n            let current = this.firstChild;\n            let next;\n            while (current !== end) {\n                next = current.nextSibling;\n                parentNode.insertBefore(current, node);\n                current = next;\n            }\n            parentNode.insertBefore(end, node);\n        }\n    }\n    /**\n     * Appends the view to a node. In cases where this is called before the\n     * view has been removed, the method will no-op.\n     * @param node - the node to append the view to.\n     */\n    appendTo(node) {\n        if (this.fragment !== null) {\n            node.appendChild(this.fragment);\n        }\n    }\n    remove() {\n        const fragment = this.fragment || (this.fragment = document.createDocumentFragment());\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while (current !== end) {\n            next = current.nextSibling;\n            if (!next) {\n                throw new Error(`Unmatched first/last child inside \"${end.getRootNode().host.nodeName}\".`);\n            }\n            fragment.appendChild(current);\n            current = next;\n        }\n        fragment.appendChild(end);\n    }\n    bind(source, context = this) {\n        var _b, _c;\n        if (this.hydrationStage !== HydrationStage.hydrated) {\n            this._hydrationStage = HydrationStage.hydrating;\n        }\n        if (this.source === source) {\n            return;\n        }\n        let behaviors = this.behaviors;\n        if (behaviors === null) {\n            this.source = source;\n            this.context = context;\n            try {\n                const { targets, boundaries } = buildViewBindingTargets(this.firstChild, this.lastChild, this.factories);\n                this._targets = targets;\n                this._bindingViewBoundaries = boundaries;\n            }\n            catch (error) {\n                if (error instanceof HydrationTargetElementError) {\n                    let templateString = this.sourceTemplate.html;\n                    if (typeof templateString !== \"string\") {\n                        templateString = templateString.innerHTML;\n                    }\n                    error.templateString = templateString;\n                }\n                throw error;\n            }\n            this.behaviors = behaviors = new Array(this.factories.length);\n            const factories = this.factories;\n            for (let i = 0, ii = factories.length; i < ii; ++i) {\n                const factory = factories[i];\n                if (factory.targetNodeId === \"h\" && this.hostBindingTarget) {\n                    targetFactory(factory, this.hostBindingTarget, this._targets);\n                }\n                // If the binding has been targeted or it is a host binding and the view has a hostBindingTarget\n                if (factory.targetNodeId in this.targets) {\n                    const behavior = factory.createBehavior();\n                    behavior.bind(this);\n                    behaviors[i] = behavior;\n                }\n                else {\n                    let templateString = this.sourceTemplate.html;\n                    if (typeof templateString !== \"string\") {\n                        templateString = templateString.innerHTML;\n                    }\n                    throw new HydrationBindingError(`HydrationView was unable to successfully target bindings inside \"${(_c = ((_b = this.firstChild) === null || _b === void 0 ? void 0 : _b.getRootNode()).host) === null || _c === void 0 ? void 0 : _c.nodeName}\".`, factory, createRangeForNodes(this.firstChild, this.lastChild).cloneContents(), templateString);\n                }\n            }\n        }\n        else {\n            if (this.source !== null) {\n                this.evaluateUnbindables();\n            }\n            this.isBound = false;\n            this.source = source;\n            this.context = context;\n            for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n                behaviors[i].bind(this);\n            }\n        }\n        this.isBound = true;\n        this._hydrationStage = HydrationStage.hydrated;\n    }\n    unbind() {\n        if (!this.isBound || this.source === null) {\n            return;\n        }\n        this.evaluateUnbindables();\n        this.source = null;\n        this.context = this;\n        this.isBound = false;\n    }\n    /**\n     * Removes the view and unbinds its behaviors, disposing of DOM nodes afterward.\n     * Once a view has been disposed, it cannot be inserted or bound again.\n     */\n    dispose() {\n        removeNodeSequence(this.firstChild, this.lastChild);\n        this.unbind();\n    }\n    onUnbind(behavior) {\n        this.unbindables.push(behavior);\n    }\n    evaluateUnbindables() {\n        const unbindables = this.unbindables;\n        for (let i = 0, ii = unbindables.length; i < ii; ++i) {\n            unbindables[i].unbind(this);\n        }\n        unbindables.length = 0;\n    }\n}\n_a = Hydratable;\nmakeSerializationNoop(HydrationView);\n","import { HydrationMarkup } from \"../components/hydration.js\";\nexport class HydrationTargetElementError extends Error {\n    constructor(\n    /**\n     * The error message\n     */\n    message, \n    /**\n     * The Compiled View Behavior Factories that belong to the view.\n     */\n    factories, \n    /**\n     * The node to target factory.\n     */\n    node) {\n        super(message);\n        this.factories = factories;\n        this.node = node;\n    }\n}\nfunction isComment(node) {\n    return node.nodeType === Node.COMMENT_NODE;\n}\nfunction isText(node) {\n    return node.nodeType === Node.TEXT_NODE;\n}\n/**\n * Returns a range object inclusive of all nodes including and between the\n * provided first and last node.\n * @param first - The first node\n * @param last - This last node\n * @returns\n */\nexport function createRangeForNodes(first, last) {\n    const range = document.createRange();\n    range.setStart(first, 0);\n    // The lastIndex should be inclusive of the end of the lastChild. Obtain offset based\n    // on usageNotes:  https://developer.mozilla.org/en-US/docs/Web/API/Range/setEnd#usage_notes\n    range.setEnd(last, isComment(last) || isText(last) ? last.data.length : last.childNodes.length);\n    return range;\n}\nfunction isShadowRoot(node) {\n    return node instanceof DocumentFragment && \"mode\" in node;\n}\n/**\n * Maps {@link CompiledViewBehaviorFactory} ids to the corresponding node targets for the view.\n * @param firstNode - The first node of the view.\n * @param lastNode -  The last node of the view.\n * @param factories - The Compiled View Behavior Factories that belong to the view.\n * @returns - A {@link ViewBehaviorTargets } object for the factories in the view.\n */\nexport function buildViewBindingTargets(firstNode, lastNode, factories) {\n    const range = createRangeForNodes(firstNode, lastNode);\n    const treeRoot = range.commonAncestorContainer;\n    const walker = document.createTreeWalker(treeRoot, NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_COMMENT + NodeFilter.SHOW_TEXT, {\n        acceptNode(node) {\n            return range.comparePoint(node, 0) === 0\n                ? NodeFilter.FILTER_ACCEPT\n                : NodeFilter.FILTER_REJECT;\n        },\n    });\n    const targets = {};\n    const boundaries = {};\n    let node = (walker.currentNode = firstNode);\n    while (node !== null) {\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE: {\n                targetElement(node, factories, targets);\n                break;\n            }\n            case Node.COMMENT_NODE: {\n                targetComment(node, walker, factories, targets, boundaries);\n                break;\n            }\n        }\n        node = walker.nextNode();\n    }\n    range.detach();\n    return { targets, boundaries };\n}\nfunction targetElement(node, factories, targets) {\n    // Check for attributes and map any factories.\n    const attrFactoryIds = HydrationMarkup.parseAttributeBinding(node);\n    if (attrFactoryIds !== null) {\n        for (const id of attrFactoryIds) {\n            if (!factories[id]) {\n                throw new HydrationTargetElementError(`HydrationView was unable to successfully target factory on ${node.nodeName} inside ${node.getRootNode().host.nodeName}. This likely indicates a template mismatch between SSR rendering and hydration.`, factories, node);\n            }\n            targetFactory(factories[id], node, targets);\n        }\n        node.removeAttribute(HydrationMarkup.attributeMarkerName);\n    }\n}\nfunction targetComment(node, walker, factories, targets, boundaries) {\n    if (HydrationMarkup.isElementBoundaryStartMarker(node)) {\n        skipToElementBoundaryEndMarker(node, walker);\n        return;\n    }\n    if (HydrationMarkup.isContentBindingStartMarker(node.data)) {\n        const parsed = HydrationMarkup.parseContentBindingStartMarker(node.data);\n        if (parsed === null) {\n            return;\n        }\n        const [index, id] = parsed;\n        const factory = factories[index];\n        const nodes = [];\n        let current = walker.nextSibling();\n        node.data = \"\";\n        const first = current;\n        // Search for the binding end marker that closes the binding.\n        while (current !== null) {\n            if (isComment(current)) {\n                const parsed = HydrationMarkup.parseContentBindingEndMarker(current.data);\n                if (parsed && parsed[1] === id) {\n                    break;\n                }\n            }\n            nodes.push(current);\n            current = walker.nextSibling();\n        }\n        if (current === null) {\n            const root = node.getRootNode();\n            throw new Error(`Error hydrating Comment node inside \"${isShadowRoot(root) ? root.host.nodeName : root.nodeName}\".`);\n        }\n        current.data = \"\";\n        if (nodes.length === 1 && isText(nodes[0])) {\n            targetFactory(factory, nodes[0], targets);\n        }\n        else {\n            // If current === first, it means there is no content in\n            // the view. This happens when a `when` directive evaluates false,\n            // or whenever a content binding returns null or undefined.\n            // In that case, there will never be any content\n            // to hydrate and Binding can simply create a HTMLView\n            // whenever it needs to.\n            if (current !== first && current.previousSibling !== null) {\n                boundaries[factory.targetNodeId] = {\n                    first,\n                    last: current.previousSibling,\n                };\n            }\n            // Binding evaluates to null / undefined or a template.\n            // If binding revaluates to string, it will replace content in target\n            // So we always insert a text node to ensure that\n            // text content binding will be written to this text node instead of comment\n            const dummyTextNode = current.parentNode.insertBefore(document.createTextNode(\"\"), current);\n            targetFactory(factory, dummyTextNode, targets);\n        }\n    }\n}\n/**\n * Moves TreeWalker to element boundary end marker\n * @param node - element boundary start marker node\n * @param walker - tree walker\n */\nfunction skipToElementBoundaryEndMarker(node, walker) {\n    const id = HydrationMarkup.parseElementBoundaryStartMarker(node.data);\n    let current = walker.nextSibling();\n    while (current !== null) {\n        if (isComment(current)) {\n            const parsed = HydrationMarkup.parseElementBoundaryEndMarker(current.data);\n            if (parsed && parsed === id) {\n                break;\n            }\n        }\n        current = walker.nextSibling();\n    }\n}\nexport function targetFactory(factory, node, targets) {\n    if (factory.targetNodeId === undefined) {\n        // Dev error, this shouldn't ever be thrown\n        throw new Error(\"Factory could not be target to the node\");\n    }\n    targets[factory.targetNodeId] = node;\n}\n","import { isFunction, isString } from \"../interfaces.js\";\nimport { FAST } from \"../platform.js\";\nimport { DOM } from \"../dom.js\";\nimport { oneTime } from \"../binding/one-time.js\";\nimport { oneWay } from \"../binding/one-way.js\";\nimport { nextId, Parser } from \"./markup.js\";\nimport { HTMLBindingDirective } from \"./html-binding-directive.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { HTMLView } from \"./view.js\";\nconst targetIdFrom = (parentId, nodeIndex) => `${parentId}.${nodeIndex}`;\nconst descriptorCache = {};\n// used to prevent creating lots of objects just to track node and index while compiling\nconst next = {\n    index: 0,\n    node: null,\n};\nfunction tryWarn(name) {\n    if (!name.startsWith(\"fast-\")) {\n        FAST.warn(1204 /* Message.hostBindingWithoutHost */, { name });\n    }\n}\nconst warningHost = new Proxy(document.createElement(\"div\"), {\n    get(target, property) {\n        tryWarn(property);\n        const value = Reflect.get(target, property);\n        return isFunction(value) ? value.bind(target) : value;\n    },\n    set(target, property, value) {\n        tryWarn(property);\n        return Reflect.set(target, property, value);\n    },\n});\nclass CompilationContext {\n    constructor(fragment, directives, policy) {\n        this.fragment = fragment;\n        this.directives = directives;\n        this.policy = policy;\n        this.proto = null;\n        this.nodeIds = new Set();\n        this.descriptors = {};\n        this.factories = [];\n    }\n    addFactory(factory, parentId, nodeId, targetIndex, tagName) {\n        var _a, _b;\n        if (!this.nodeIds.has(nodeId)) {\n            this.nodeIds.add(nodeId);\n            this.addTargetDescriptor(parentId, nodeId, targetIndex);\n        }\n        factory.id = (_a = factory.id) !== null && _a !== void 0 ? _a : nextId();\n        factory.targetNodeId = nodeId;\n        factory.targetTagName = tagName;\n        factory.policy = (_b = factory.policy) !== null && _b !== void 0 ? _b : this.policy;\n        this.factories.push(factory);\n    }\n    freeze() {\n        this.proto = Object.create(null, this.descriptors);\n        return this;\n    }\n    addTargetDescriptor(parentId, targetId, targetIndex) {\n        const descriptors = this.descriptors;\n        if (targetId === \"r\" || // root\n            targetId === \"h\" || // host\n            descriptors[targetId]) {\n            return;\n        }\n        if (!descriptors[parentId]) {\n            const index = parentId.lastIndexOf(\".\");\n            const grandparentId = parentId.substring(0, index);\n            const childIndex = parseInt(parentId.substring(index + 1));\n            this.addTargetDescriptor(grandparentId, parentId, childIndex);\n        }\n        let descriptor = descriptorCache[targetId];\n        if (!descriptor) {\n            const field = `_${targetId}`;\n            descriptorCache[targetId] = descriptor = {\n                get() {\n                    var _a;\n                    return ((_a = this[field]) !== null && _a !== void 0 ? _a : (this[field] = this[parentId].childNodes[targetIndex]));\n                },\n            };\n        }\n        descriptors[targetId] = descriptor;\n    }\n    createView(hostBindingTarget) {\n        const fragment = this.fragment.cloneNode(true);\n        const targets = Object.create(this.proto);\n        targets.r = fragment;\n        targets.h = hostBindingTarget !== null && hostBindingTarget !== void 0 ? hostBindingTarget : warningHost;\n        for (const id of this.nodeIds) {\n            targets[id]; // trigger locator\n        }\n        return new HTMLView(fragment, this.factories, targets);\n    }\n}\nfunction compileAttributes(context, parentId, node, nodeId, nodeIndex, includeBasicValues = false) {\n    const attributes = node.attributes;\n    const directives = context.directives;\n    for (let i = 0, ii = attributes.length; i < ii; ++i) {\n        const attr = attributes[i];\n        const attrValue = attr.value;\n        const parseResult = Parser.parse(attrValue, directives);\n        let result = null;\n        if (parseResult === null) {\n            if (includeBasicValues) {\n                result = new HTMLBindingDirective(oneTime(() => attrValue, context.policy));\n                HTMLDirective.assignAspect(result, attr.name);\n            }\n        }\n        else {\n            /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n            result = Compiler.aggregate(parseResult, context.policy);\n        }\n        if (result !== null) {\n            node.removeAttributeNode(attr);\n            i--;\n            ii--;\n            context.addFactory(result, parentId, nodeId, nodeIndex, node.tagName);\n        }\n    }\n}\nfunction compileContent(context, node, parentId, nodeId, nodeIndex) {\n    const parseResult = Parser.parse(node.textContent, context.directives);\n    if (parseResult === null) {\n        next.node = node.nextSibling;\n        next.index = nodeIndex + 1;\n        return next;\n    }\n    let currentNode;\n    let lastNode = (currentNode = node);\n    for (let i = 0, ii = parseResult.length; i < ii; ++i) {\n        const currentPart = parseResult[i];\n        if (i !== 0) {\n            nodeIndex++;\n            nodeId = targetIdFrom(parentId, nodeIndex);\n            currentNode = lastNode.parentNode.insertBefore(document.createTextNode(\"\"), lastNode.nextSibling);\n        }\n        if (isString(currentPart)) {\n            currentNode.textContent = currentPart;\n        }\n        else {\n            currentNode.textContent = \" \";\n            HTMLDirective.assignAspect(currentPart);\n            context.addFactory(currentPart, parentId, nodeId, nodeIndex, null);\n        }\n        lastNode = currentNode;\n    }\n    next.index = nodeIndex + 1;\n    next.node = lastNode.nextSibling;\n    return next;\n}\nfunction compileChildren(context, parent, parentId) {\n    let nodeIndex = 0;\n    let childNode = parent.firstChild;\n    while (childNode) {\n        /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n        const result = compileNode(context, parentId, childNode, nodeIndex);\n        childNode = result.node;\n        nodeIndex = result.index;\n    }\n}\nfunction compileNode(context, parentId, node, nodeIndex) {\n    const nodeId = targetIdFrom(parentId, nodeIndex);\n    switch (node.nodeType) {\n        case 1: // element node\n            compileAttributes(context, parentId, node, nodeId, nodeIndex);\n            compileChildren(context, node, nodeId);\n            break;\n        case 3: // text node\n            return compileContent(context, node, parentId, nodeId, nodeIndex);\n        case 8: // comment\n            const parts = Parser.parse(node.data, context.directives);\n            if (parts !== null) {\n                context.addFactory(\n                /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n                Compiler.aggregate(parts), parentId, nodeId, nodeIndex, null);\n            }\n            break;\n    }\n    next.index = nodeIndex + 1;\n    next.node = node.nextSibling;\n    return next;\n}\nfunction isMarker(node, directives) {\n    return (node &&\n        node.nodeType == 8 &&\n        Parser.parse(node.data, directives) !== null);\n}\nconst templateTag = \"TEMPLATE\";\n/**\n * Common APIs related to compilation.\n * @public\n */\nexport const Compiler = {\n    /**\n     * Compiles a template and associated directives into a compilation\n     * result which can be used to create views.\n     * @param html - The html string or template element to compile.\n     * @param factories - The behavior factories referenced by the template.\n     * @param policy - The security policy to compile the html with.\n     * @remarks\n     * The template that is provided for compilation is altered in-place\n     * and cannot be compiled again. If the original template must be preserved,\n     * it is recommended that you clone the original and pass the clone to this API.\n     * @public\n     */\n    compile(html, factories, policy = DOM.policy) {\n        let template;\n        if (isString(html)) {\n            template = document.createElement(templateTag);\n            template.innerHTML = policy.createHTML(html);\n            const fec = template.content.firstElementChild;\n            if (fec !== null && fec.tagName === templateTag) {\n                template = fec;\n            }\n        }\n        else {\n            template = html;\n        }\n        if (!template.content.firstChild && !template.content.lastChild) {\n            template.content.appendChild(document.createComment(\"\"));\n        }\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1111864\n        const fragment = document.adoptNode(template.content);\n        const context = new CompilationContext(fragment, factories, policy);\n        compileAttributes(context, \"\", template, /* host */ \"h\", 0, true);\n        if (\n        // If the first node in a fragment is a marker, that means it's an unstable first node,\n        // because something like a when, repeat, etc. could add nodes before the marker.\n        // To mitigate this, we insert a stable first node. However, if we insert a node,\n        // that will alter the result of the TreeWalker. So, we also need to offset the target index.\n        isMarker(fragment.firstChild, factories) ||\n            // Or if there is only one node and a directive, it means the template's content\n            // is *only* the directive. In that case, HTMLView.dispose() misses any nodes inserted by\n            // the directive. Inserting a new node ensures proper disposal of nodes added by the directive.\n            (fragment.childNodes.length === 1 && Object.keys(factories).length > 0)) {\n            fragment.insertBefore(document.createComment(\"\"), fragment.firstChild);\n        }\n        compileChildren(context, fragment, /* root */ \"r\");\n        next.node = null; // prevent leaks\n        return context.freeze();\n    },\n    /**\n     * Sets the default compilation strategy that will be used by the ViewTemplate whenever\n     * it needs to compile a view preprocessed with the html template function.\n     * @param strategy - The compilation strategy to use when compiling templates.\n     */\n    setDefaultStrategy(strategy) {\n        this.compile = strategy;\n    },\n    /**\n     * Aggregates an array of strings and directives into a single directive.\n     * @param parts - A heterogeneous array of static strings interspersed with\n     * directives.\n     * @param policy - The security policy to use with the aggregated bindings.\n     * @returns A single inline directive that aggregates the behavior of all the parts.\n     */\n    aggregate(parts, policy = DOM.policy) {\n        if (parts.length === 1) {\n            return parts[0];\n        }\n        let sourceAspect;\n        let isVolatile = false;\n        let bindingPolicy = void 0;\n        const partCount = parts.length;\n        const finalParts = parts.map((x) => {\n            if (isString(x)) {\n                return () => x;\n            }\n            sourceAspect = x.sourceAspect || sourceAspect;\n            isVolatile = isVolatile || x.dataBinding.isVolatile;\n            bindingPolicy = bindingPolicy || x.dataBinding.policy;\n            return x.dataBinding.evaluate;\n        });\n        const expression = (scope, context) => {\n            let output = \"\";\n            for (let i = 0; i < partCount; ++i) {\n                output += finalParts[i](scope, context);\n            }\n            return output;\n        };\n        const directive = new HTMLBindingDirective(oneWay(expression, bindingPolicy !== null && bindingPolicy !== void 0 ? bindingPolicy : policy, isVolatile));\n        HTMLDirective.assignAspect(directive, sourceAspect);\n        return directive;\n    },\n};\n","import { HydrationMarkup, isHydratable } from \"../components/hydration.js\";\nimport { ArrayObserver } from \"../observation/arrays.js\";\nimport { Observable } from \"../observation/observable.js\";\nimport { emptyArray } from \"../platform.js\";\nimport { normalizeBinding } from \"../binding/normalize.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { Markup } from \"./markup.js\";\nimport { HTMLView, HydrationStage } from \"./view.js\";\nconst defaultRepeatOptions = Object.freeze({\n    positioning: false,\n    recycle: true,\n});\nfunction bindWithoutPositioning(view, items, index, controller) {\n    view.context.parent = controller.source;\n    view.context.parentContext = controller.context;\n    view.bind(items[index]);\n}\nfunction bindWithPositioning(view, items, index, controller) {\n    view.context.parent = controller.source;\n    view.context.parentContext = controller.context;\n    view.context.length = items.length;\n    view.context.index = index;\n    view.bind(items[index]);\n}\nfunction isCommentNode(node) {\n    return node.nodeType === Node.COMMENT_NODE;\n}\nexport class HydrationRepeatError extends Error {\n    constructor(\n    /**\n     * The error message\n     */\n    message, propertyBag) {\n        super(message);\n        this.propertyBag = propertyBag;\n    }\n}\n/**\n * A behavior that renders a template for each item in an array.\n * @public\n */\nexport class RepeatBehavior {\n    /**\n     * Creates an instance of RepeatBehavior.\n     * @param location - The location in the DOM to render the repeat.\n     * @param dataBinding - The array to render.\n     * @param isItemsBindingVolatile - Indicates whether the items binding has volatile dependencies.\n     * @param templateBinding - The template to render for each item.\n     * @param isTemplateBindingVolatile - Indicates whether the template binding has volatile dependencies.\n     * @param options - Options used to turn on special repeat features.\n     */\n    constructor(directive) {\n        this.directive = directive;\n        this.items = null;\n        this.itemsObserver = null;\n        this.bindView = bindWithoutPositioning;\n        /** @internal */\n        this.views = [];\n        this.itemsBindingObserver = directive.dataBinding.createObserver(this, directive);\n        this.templateBindingObserver = directive.templateBinding.createObserver(this, directive);\n        if (directive.options.positioning) {\n            this.bindView = bindWithPositioning;\n        }\n    }\n    /**\n     * Bind this behavior.\n     * @param controller - The view controller that manages the lifecycle of this behavior.\n     */\n    bind(controller) {\n        this.location = controller.targets[this.directive.targetNodeId];\n        this.controller = controller;\n        this.items = this.itemsBindingObserver.bind(controller);\n        this.template = this.templateBindingObserver.bind(controller);\n        this.observeItems(true);\n        if (isHydratable(this.template) &&\n            isHydratable(controller) &&\n            controller.hydrationStage !== HydrationStage.hydrated) {\n            this.hydrateViews(this.template);\n        }\n        else {\n            this.refreshAllViews();\n        }\n        controller.onUnbind(this);\n    }\n    /**\n     * Unbinds this behavior.\n     */\n    unbind() {\n        if (this.itemsObserver !== null) {\n            this.itemsObserver.unsubscribe(this);\n        }\n        this.unbindAllViews();\n    }\n    /**\n     * Handles changes in the array, its items, and the repeat template.\n     * @param source - The source of the change.\n     * @param args - The details about what was changed.\n     */\n    handleChange(source, args) {\n        if (args === this.itemsBindingObserver) {\n            this.items = this.itemsBindingObserver.bind(this.controller);\n            this.observeItems();\n            this.refreshAllViews();\n        }\n        else if (args === this.templateBindingObserver) {\n            this.template = this.templateBindingObserver.bind(this.controller);\n            this.refreshAllViews(true);\n        }\n        else if (!args[0]) {\n            return;\n        }\n        else if (args[0].reset) {\n            this.refreshAllViews();\n        }\n        else {\n            this.updateViews(args);\n        }\n    }\n    observeItems(force = false) {\n        if (!this.items) {\n            this.items = emptyArray;\n            return;\n        }\n        const oldObserver = this.itemsObserver;\n        const newObserver = (this.itemsObserver = Observable.getNotifier(this.items));\n        const hasNewObserver = oldObserver !== newObserver;\n        if (hasNewObserver && oldObserver !== null) {\n            oldObserver.unsubscribe(this);\n        }\n        if (hasNewObserver || force) {\n            newObserver.subscribe(this);\n        }\n    }\n    updateViews(splices) {\n        const views = this.views;\n        const bindView = this.bindView;\n        const items = this.items;\n        const template = this.template;\n        const controller = this.controller;\n        const recycle = this.directive.options.recycle;\n        const leftoverViews = [];\n        let leftoverIndex = 0;\n        let availableViews = 0;\n        for (let i = 0, ii = splices.length; i < ii; ++i) {\n            const splice = splices[i];\n            const removed = splice.removed;\n            let removeIndex = 0;\n            let addIndex = splice.index;\n            const end = addIndex + splice.addedCount;\n            const removedViews = views.splice(splice.index, removed.length);\n            const totalAvailableViews = (availableViews =\n                leftoverViews.length + removedViews.length);\n            for (; addIndex < end; ++addIndex) {\n                const neighbor = views[addIndex];\n                const location = neighbor ? neighbor.firstChild : this.location;\n                let view;\n                if (recycle && availableViews > 0) {\n                    if (removeIndex <= totalAvailableViews && removedViews.length > 0) {\n                        view = removedViews[removeIndex];\n                        removeIndex++;\n                    }\n                    else {\n                        view = leftoverViews[leftoverIndex];\n                        leftoverIndex++;\n                    }\n                    availableViews--;\n                }\n                else {\n                    view = template.create();\n                }\n                views.splice(addIndex, 0, view);\n                bindView(view, items, addIndex, controller);\n                view.insertBefore(location);\n            }\n            if (removedViews[removeIndex]) {\n                leftoverViews.push(...removedViews.slice(removeIndex));\n            }\n        }\n        for (let i = leftoverIndex, ii = leftoverViews.length; i < ii; ++i) {\n            leftoverViews[i].dispose();\n        }\n        if (this.directive.options.positioning) {\n            for (let i = 0, viewsLength = views.length; i < viewsLength; ++i) {\n                const context = views[i].context;\n                context.length = viewsLength;\n                context.index = i;\n            }\n        }\n    }\n    refreshAllViews(templateChanged = false) {\n        const items = this.items;\n        const template = this.template;\n        const location = this.location;\n        const bindView = this.bindView;\n        const controller = this.controller;\n        let itemsLength = items.length;\n        let views = this.views;\n        let viewsLength = views.length;\n        if (itemsLength === 0 || templateChanged || !this.directive.options.recycle) {\n            // all views need to be removed\n            HTMLView.disposeContiguousBatch(views);\n            viewsLength = 0;\n        }\n        if (viewsLength === 0) {\n            // all views need to be created\n            this.views = views = new Array(itemsLength);\n            for (let i = 0; i < itemsLength; ++i) {\n                const view = template.create();\n                bindView(view, items, i, controller);\n                views[i] = view;\n                view.insertBefore(location);\n            }\n        }\n        else {\n            // attempt to reuse existing views with new data\n            let i = 0;\n            for (; i < itemsLength; ++i) {\n                if (i < viewsLength) {\n                    const view = views[i];\n                    if (!view) {\n                        const serializer = new XMLSerializer();\n                        throw new HydrationRepeatError(`View is null or undefined inside \"${this.location.getRootNode().host.nodeName}\".`, {\n                            index: i,\n                            hydrationStage: this.controller\n                                .hydrationStage,\n                            itemsLength,\n                            viewsState: views.map(v => (v ? \"hydrated\" : \"empty\")),\n                            viewTemplateString: serializer.serializeToString(template.create().fragment),\n                            rootNodeContent: serializer.serializeToString(this.location.getRootNode()),\n                        });\n                    }\n                    bindView(view, items, i, controller);\n                }\n                else {\n                    const view = template.create();\n                    bindView(view, items, i, controller);\n                    views.push(view);\n                    view.insertBefore(location);\n                }\n            }\n            const removed = views.splice(i, viewsLength - i);\n            for (i = 0, itemsLength = removed.length; i < itemsLength; ++i) {\n                removed[i].dispose();\n            }\n        }\n    }\n    unbindAllViews() {\n        const views = this.views;\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n            const view = views[i];\n            if (!view) {\n                const serializer = new XMLSerializer();\n                throw new HydrationRepeatError(`View is null or undefined inside \"${this.location.getRootNode().host.nodeName}\".`, {\n                    index: i,\n                    hydrationStage: this.controller.hydrationStage,\n                    viewsState: views.map(v => (v ? \"hydrated\" : \"empty\")),\n                    rootNodeContent: serializer.serializeToString(this.location.getRootNode()),\n                });\n            }\n            view.unbind();\n        }\n    }\n    hydrateViews(template) {\n        if (!this.items) {\n            return;\n        }\n        this.views = new Array(this.items.length);\n        let current = this.location.previousSibling;\n        while (current !== null) {\n            if (!isCommentNode(current)) {\n                current = current.previousSibling;\n                continue;\n            }\n            const index = HydrationMarkup.parseRepeatEndMarker(current.data);\n            if (index === null) {\n                current = current.previousSibling;\n                continue;\n            }\n            current.data = \"\";\n            // end of repeat is the previousSibling of end comment\n            const end = current.previousSibling;\n            if (!end) {\n                throw new Error(`Error when hydrating inside \"${this.location.getRootNode().host.nodeName}\": end should never be null.`);\n            }\n            // find start marker\n            let start = end;\n            // How many unmatched end markers we've encountered\n            let unmatchedEndMarkers = 0;\n            while (start !== null) {\n                if (isCommentNode(start)) {\n                    if (HydrationMarkup.isRepeatViewEndMarker(start.data)) {\n                        unmatchedEndMarkers++;\n                    }\n                    else if (HydrationMarkup.isRepeatViewStartMarker(start.data)) {\n                        if (unmatchedEndMarkers) {\n                            unmatchedEndMarkers--;\n                        }\n                        else {\n                            if (HydrationMarkup.parseRepeatStartMarker(start.data) !==\n                                index) {\n                                throw new Error(`Error when hydrating inside \"${this.location.getRootNode().host\n                                    .nodeName}\": Mismatched start and end markers.`);\n                            }\n                            start.data = \"\";\n                            current = start.previousSibling;\n                            // start of repeat content is the nextSibling of start comment\n                            start = start.nextSibling;\n                            const view = template.hydrate(start, end);\n                            this.views[index] = view;\n                            this.bindView(view, this.items, index, this.controller);\n                            break;\n                        }\n                    }\n                }\n                start = start.previousSibling;\n            }\n            if (!start) {\n                throw new Error(`Error when hydrating inside \"${this.location.getRootNode().host.nodeName}\": start should never be null.`);\n            }\n        }\n    }\n}\n/**\n * A directive that configures list rendering.\n * @public\n */\nexport class RepeatDirective {\n    /**\n     * Creates an instance of RepeatDirective.\n     * @param dataBinding - The binding that provides the array to render.\n     * @param templateBinding - The template binding used to obtain a template to render for each item in the array.\n     * @param options - Options used to turn on special repeat features.\n     */\n    constructor(dataBinding, templateBinding, options) {\n        this.dataBinding = dataBinding;\n        this.templateBinding = templateBinding;\n        this.options = options;\n        ArrayObserver.enable();\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     */\n    createHTML(add) {\n        return Markup.comment(add(this));\n    }\n    /**\n     * Creates a behavior for the provided target node.\n     * @param target - The node instance to create the behavior for.\n     */\n    createBehavior() {\n        return new RepeatBehavior(this);\n    }\n}\nHTMLDirective.define(RepeatDirective);\n/**\n * A directive that enables list rendering.\n * @param items - The array to render.\n * @param template - The template or a template binding used obtain a template\n * to render for each item in the array.\n * @param options - Options used to turn on special repeat features.\n * @public\n */\nexport function repeat(items, template, options = defaultRepeatOptions) {\n    const dataBinding = normalizeBinding(items);\n    const templateBinding = normalizeBinding(template);\n    return new RepeatDirective(dataBinding, templateBinding, Object.assign(Object.assign({}, defaultRepeatOptions), options));\n}\n","import { emptyArray } from \"../platform.js\";\nimport { SubscriberSet } from \"./notifier.js\";\nimport { Observable } from \"./observable.js\";\nimport { Updates } from \"./update-queue.js\";\n/**\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   (index, removed, addedCount)\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n * @public\n */\nexport class Splice {\n    /**\n     * Creates a splice.\n     * @param index - The index that the splice occurs at.\n     * @param removed - The items that were removed.\n     * @param addedCount - The  number of items that were added.\n     */\n    constructor(index, removed, addedCount) {\n        this.index = index;\n        this.removed = removed;\n        this.addedCount = addedCount;\n    }\n    /**\n     * Adjusts the splice index based on the provided array.\n     * @param array - The array to adjust to.\n     * @returns The same splice, mutated based on the reference array.\n     */\n    adjustTo(array) {\n        let index = this.index;\n        const arrayLength = array.length;\n        if (index > arrayLength) {\n            index = arrayLength - this.addedCount;\n        }\n        else if (index < 0) {\n            index = arrayLength + this.removed.length + index - this.addedCount;\n        }\n        this.index = index < 0 ? 0 : index;\n        return this;\n    }\n}\n/**\n * Indicates what level of feature support the splice\n * strategy provides.\n * @public\n */\nexport const SpliceStrategySupport = Object.freeze({\n    /**\n     * Only supports resets.\n     */\n    reset: 1,\n    /**\n     * Supports tracking splices and resets.\n     */\n    splice: 2,\n    /**\n     * Supports tracking splices and resets, while applying some form\n     * of optimization, such as merging, to the splices.\n     */\n    optimized: 3,\n});\nconst reset = new Splice(0, emptyArray, 0);\nreset.reset = true;\nconst resetSplices = [reset];\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' to '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    // \"Deletion\" columns\n    const rowCount = oldEnd - oldStart + 1;\n    const columnCount = currentEnd - currentStart + 1;\n    const distances = new Array(rowCount);\n    let north;\n    let west;\n    // \"Addition\" rows. Initialize null column.\n    for (let i = 0; i < rowCount; ++i) {\n        distances[i] = new Array(columnCount);\n        distances[i][0] = i;\n    }\n    // Initialize null row\n    for (let j = 0; j < columnCount; ++j) {\n        distances[0][j] = j;\n    }\n    for (let i = 1; i < rowCount; ++i) {\n        for (let j = 1; j < columnCount; ++j) {\n            if (current[currentStart + j - 1] === old[oldStart + i - 1]) {\n                distances[i][j] = distances[i - 1][j - 1];\n            }\n            else {\n                north = distances[i - 1][j] + 1;\n                west = distances[i][j - 1] + 1;\n                distances[i][j] = north < west ? north : west;\n            }\n        }\n    }\n    return distances;\n}\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n    let i = distances.length - 1;\n    let j = distances[0].length - 1;\n    let current = distances[i][j];\n    const edits = [];\n    while (i > 0 || j > 0) {\n        if (i === 0) {\n            edits.push(2 /* Edit.add */);\n            j--;\n            continue;\n        }\n        if (j === 0) {\n            edits.push(3 /* Edit.delete */);\n            i--;\n            continue;\n        }\n        const northWest = distances[i - 1][j - 1];\n        const west = distances[i - 1][j];\n        const north = distances[i][j - 1];\n        let min;\n        if (west < north) {\n            min = west < northWest ? west : northWest;\n        }\n        else {\n            min = north < northWest ? north : northWest;\n        }\n        if (min === northWest) {\n            if (northWest === current) {\n                edits.push(0 /* Edit.leave */);\n            }\n            else {\n                edits.push(1 /* Edit.update */);\n                current = northWest;\n            }\n            i--;\n            j--;\n        }\n        else if (min === west) {\n            edits.push(3 /* Edit.delete */);\n            i--;\n            current = west;\n        }\n        else {\n            edits.push(2 /* Edit.add */);\n            j--;\n            current = north;\n        }\n    }\n    return edits.reverse();\n}\nfunction sharedPrefix(current, old, searchLength) {\n    for (let i = 0; i < searchLength; ++i) {\n        if (current[i] !== old[i]) {\n            return i;\n        }\n    }\n    return searchLength;\n}\nfunction sharedSuffix(current, old, searchLength) {\n    let index1 = current.length;\n    let index2 = old.length;\n    let count = 0;\n    while (count < searchLength && current[--index1] === old[--index2]) {\n        count++;\n    }\n    return count;\n}\nfunction intersect(start1, end1, start2, end2) {\n    // Disjoint\n    if (end1 < start2 || end2 < start1) {\n        return -1;\n    }\n    // Adjacent\n    if (end1 === start2 || end2 === start1) {\n        return 0;\n    }\n    // Non-zero intersect, span1 first\n    if (start1 < start2) {\n        if (end1 < end2) {\n            return end1 - start2; // Overlap\n        }\n        return end2 - start2; // Contained\n    }\n    // Non-zero intersect, span2 first\n    if (end2 < end1) {\n        return end2 - start1; // Overlap\n    }\n    return end1 - start1; // Contained\n}\n/**\n * @remarks\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n */\nfunction calc(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    let prefixCount = 0;\n    let suffixCount = 0;\n    const minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart === 0 && oldStart === 0) {\n        prefixCount = sharedPrefix(current, old, minLength);\n    }\n    if (currentEnd === current.length && oldEnd === old.length) {\n        suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n    }\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n    if (currentEnd - currentStart === 0 && oldEnd - oldStart === 0) {\n        return emptyArray;\n    }\n    if (currentStart === currentEnd) {\n        const splice = new Splice(currentStart, [], 0);\n        while (oldStart < oldEnd) {\n            splice.removed.push(old[oldStart++]);\n        }\n        return [splice];\n    }\n    else if (oldStart === oldEnd) {\n        return [new Splice(currentStart, [], currentEnd - currentStart)];\n    }\n    const ops = spliceOperationsFromEditDistances(calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));\n    const splices = [];\n    let splice = void 0;\n    let index = currentStart;\n    let oldIndex = oldStart;\n    for (let i = 0; i < ops.length; ++i) {\n        switch (ops[i]) {\n            case 0 /* Edit.leave */:\n                if (splice !== void 0) {\n                    splices.push(splice);\n                    splice = void 0;\n                }\n                index++;\n                oldIndex++;\n                break;\n            case 1 /* Edit.update */:\n                if (splice === void 0) {\n                    splice = new Splice(index, [], 0);\n                }\n                splice.addedCount++;\n                index++;\n                splice.removed.push(old[oldIndex]);\n                oldIndex++;\n                break;\n            case 2 /* Edit.add */:\n                if (splice === void 0) {\n                    splice = new Splice(index, [], 0);\n                }\n                splice.addedCount++;\n                index++;\n                break;\n            case 3 /* Edit.delete */:\n                if (splice === void 0) {\n                    splice = new Splice(index, [], 0);\n                }\n                splice.removed.push(old[oldIndex]);\n                oldIndex++;\n                break;\n            // no default\n        }\n    }\n    if (splice !== void 0) {\n        splices.push(splice);\n    }\n    return splices;\n}\nfunction merge(splice, splices) {\n    let inserted = false;\n    let insertionOffset = 0;\n    for (let i = 0; i < splices.length; i++) {\n        const current = splices[i];\n        current.index += insertionOffset;\n        if (inserted) {\n            continue;\n        }\n        const intersectCount = intersect(splice.index, splice.index + splice.removed.length, current.index, current.index + current.addedCount);\n        if (intersectCount >= 0) {\n            // Merge the two splices\n            splices.splice(i, 1);\n            i--;\n            insertionOffset -= current.addedCount - current.removed.length;\n            splice.addedCount += current.addedCount - intersectCount;\n            const deleteCount = splice.removed.length + current.removed.length - intersectCount;\n            if (!splice.addedCount && !deleteCount) {\n                // merged splice is a noop. discard.\n                inserted = true;\n            }\n            else {\n                let currentRemoved = current.removed;\n                if (splice.index < current.index) {\n                    // some prefix of splice.removed is prepended to current.removed.\n                    const prepend = splice.removed.slice(0, current.index - splice.index);\n                    prepend.push(...currentRemoved);\n                    currentRemoved = prepend;\n                }\n                if (splice.index + splice.removed.length >\n                    current.index + current.addedCount) {\n                    // some suffix of splice.removed is appended to current.removed.\n                    const append = splice.removed.slice(current.index + current.addedCount - splice.index);\n                    currentRemoved.push(...append);\n                }\n                splice.removed = currentRemoved;\n                if (current.index < splice.index) {\n                    splice.index = current.index;\n                }\n            }\n        }\n        else if (splice.index < current.index) {\n            // Insert splice here.\n            inserted = true;\n            splices.splice(i, 0, splice);\n            i++;\n            const offset = splice.addedCount - splice.removed.length;\n            current.index += offset;\n            insertionOffset += offset;\n        }\n    }\n    if (!inserted) {\n        splices.push(splice);\n    }\n}\nfunction project(array, changes) {\n    let splices = [];\n    const initialSplices = [];\n    for (let i = 0, ii = changes.length; i < ii; i++) {\n        merge(changes[i], initialSplices);\n    }\n    for (let i = 0, ii = initialSplices.length; i < ii; ++i) {\n        const splice = initialSplices[i];\n        if (splice.addedCount === 1 && splice.removed.length === 1) {\n            if (splice.removed[0] !== array[splice.index]) {\n                splices.push(splice);\n            }\n            continue;\n        }\n        splices = splices.concat(calc(array, splice.index, splice.index + splice.addedCount, splice.removed, 0, splice.removed.length));\n    }\n    return splices;\n}\n/**\n * A SpliceStrategy that attempts to merge all splices into the minimal set of\n * splices needed to represent the change from the old array to the new array.\n * @public\n */\nlet defaultSpliceStrategy = Object.freeze({\n    support: SpliceStrategySupport.optimized,\n    normalize(previous, current, changes) {\n        if (previous === void 0) {\n            if (changes === void 0) {\n                return emptyArray;\n            }\n            return project(current, changes);\n        }\n        return resetSplices;\n    },\n    pop(array, observer, pop, args) {\n        const notEmpty = array.length > 0;\n        const result = pop.apply(array, args);\n        if (notEmpty) {\n            observer.addSplice(new Splice(array.length, [result], 0));\n        }\n        return result;\n    },\n    push(array, observer, push, args) {\n        const result = push.apply(array, args);\n        observer.addSplice(new Splice(array.length - args.length, [], args.length).adjustTo(array));\n        return result;\n    },\n    reverse(array, observer, reverse, args) {\n        const result = reverse.apply(array, args);\n        observer.reset(array);\n        return result;\n    },\n    shift(array, observer, shift, args) {\n        const notEmpty = array.length > 0;\n        const result = shift.apply(array, args);\n        if (notEmpty) {\n            observer.addSplice(new Splice(0, [result], 0));\n        }\n        return result;\n    },\n    sort(array, observer, sort, args) {\n        const result = sort.apply(array, args);\n        observer.reset(array);\n        return result;\n    },\n    splice(array, observer, splice, args) {\n        const result = splice.apply(array, args);\n        observer.addSplice(new Splice(+args[0], result, args.length > 2 ? args.length - 2 : 0).adjustTo(array));\n        return result;\n    },\n    unshift(array, observer, unshift, args) {\n        const result = unshift.apply(array, args);\n        observer.addSplice(new Splice(0, [], args.length).adjustTo(array));\n        return result;\n    },\n});\n/**\n * Functionality related to tracking changes in arrays.\n * @public\n */\nexport const SpliceStrategy = Object.freeze({\n    /**\n     * A set of changes that represent a full array reset.\n     */\n    reset: resetSplices,\n    /**\n     * Sets the default strategy to use for array observers.\n     * @param strategy - The splice strategy to use.\n     */\n    setDefaultStrategy(strategy) {\n        defaultSpliceStrategy = strategy;\n    },\n});\nfunction setNonEnumerable(target, property, value) {\n    Reflect.defineProperty(target, property, {\n        value,\n        enumerable: false,\n    });\n}\nclass DefaultArrayObserver extends SubscriberSet {\n    constructor(subject) {\n        super(subject);\n        this.oldCollection = void 0;\n        this.splices = void 0;\n        this.needsQueue = true;\n        this._strategy = null;\n        this._lengthObserver = void 0;\n        this.call = this.flush;\n        setNonEnumerable(subject, \"$fastController\", this);\n    }\n    get strategy() {\n        return this._strategy;\n    }\n    set strategy(value) {\n        this._strategy = value;\n    }\n    get lengthObserver() {\n        let observer = this._lengthObserver;\n        if (observer === void 0) {\n            const array = this.subject;\n            this._lengthObserver = observer = {\n                length: array.length,\n                handleChange() {\n                    if (this.length !== array.length) {\n                        this.length = array.length;\n                        Observable.notify(observer, \"length\");\n                    }\n                },\n            };\n            this.subscribe(observer);\n        }\n        return observer;\n    }\n    subscribe(subscriber) {\n        this.flush();\n        super.subscribe(subscriber);\n    }\n    addSplice(splice) {\n        if (this.splices === void 0) {\n            this.splices = [splice];\n        }\n        else {\n            this.splices.push(splice);\n        }\n        this.enqueue();\n    }\n    reset(oldCollection) {\n        this.oldCollection = oldCollection;\n        this.enqueue();\n    }\n    flush() {\n        var _a;\n        const splices = this.splices;\n        const oldCollection = this.oldCollection;\n        if (splices === void 0 && oldCollection === void 0) {\n            return;\n        }\n        this.needsQueue = true;\n        this.splices = void 0;\n        this.oldCollection = void 0;\n        this.notify(((_a = this._strategy) !== null && _a !== void 0 ? _a : defaultSpliceStrategy).normalize(oldCollection, this.subject, splices));\n    }\n    enqueue() {\n        if (this.needsQueue) {\n            this.needsQueue = false;\n            Updates.enqueue(this);\n        }\n    }\n}\nlet enabled = false;\n/**\n * An observer for arrays.\n * @public\n */\nexport const ArrayObserver = Object.freeze({\n    /**\n     * Enables the array observation mechanism.\n     * @remarks\n     * Array observation is enabled automatically when using the\n     * {@link RepeatDirective}, so calling this API manually is\n     * not typically necessary.\n     */\n    enable() {\n        if (enabled) {\n            return;\n        }\n        enabled = true;\n        Observable.setArrayObserverFactory((collection) => new DefaultArrayObserver(collection));\n        const proto = Array.prototype;\n        if (!proto.$fastPatch) {\n            setNonEnumerable(proto, \"$fastPatch\", 1);\n            [\n                proto.pop,\n                proto.push,\n                proto.reverse,\n                proto.shift,\n                proto.sort,\n                proto.splice,\n                proto.unshift,\n            ].forEach(method => {\n                proto[method.name] = function (...args) {\n                    var _a;\n                    const o = this.$fastController;\n                    return o === void 0\n                        ? method.apply(this, args)\n                        : ((_a = o.strategy) !== null && _a !== void 0 ? _a : defaultSpliceStrategy)[method.name](this, o, method, args);\n                };\n            });\n        }\n    },\n});\n/**\n * Enables observing the length of an array.\n * @param array - The array to observe the length of.\n * @returns The length of the array.\n * @public\n */\nexport function lengthOf(array) {\n    if (!array) {\n        return 0;\n    }\n    let arrayObserver = array.$fastController;\n    if (arrayObserver === void 0) {\n        ArrayObserver.enable();\n        arrayObserver = Observable.getNotifier(array);\n    }\n    Observable.track(arrayObserver.lengthObserver, \"length\");\n    return array.length;\n}\n","import { isFunction } from \"../interfaces.js\";\nimport { Binding } from \"./binding.js\";\nimport { oneWay } from \"./one-way.js\";\nimport { oneTime } from \"./one-time.js\";\n/**\n * Normalizes the input value into a binding.\n * @param value - The value to create the default binding for.\n * @returns A binding configuration for the provided value.\n * @public\n */\nexport function normalizeBinding(value) {\n    return isFunction(value)\n        ? oneWay(value)\n        : value instanceof Binding\n            ? value\n            : oneTime(() => value);\n}\n","import { isString } from \"../interfaces.js\";\nimport { HTMLDirective } from \"./html-directive.js\";\nimport { NodeObservationDirective } from \"./node-observation.js\";\nconst slotEvent = \"slotchange\";\n/**\n * The runtime behavior for slotted node observation.\n * @public\n */\nexport class SlottedDirective extends NodeObservationDirective {\n    /**\n     * Begins observation of the nodes.\n     * @param target - The target to observe.\n     */\n    observe(target) {\n        target.addEventListener(slotEvent, this);\n    }\n    /**\n     * Disconnects observation of the nodes.\n     * @param target - The target to unobserve.\n     */\n    disconnect(target) {\n        target.removeEventListener(slotEvent, this);\n    }\n    /**\n     * Retrieves the raw nodes that should be assigned to the source property.\n     * @param target - The target to get the node to.\n     */\n    getNodes(target) {\n        return target.assignedNodes(this.options);\n    }\n    /** @internal */\n    handleEvent(event) {\n        const target = event.currentTarget;\n        this.updateTarget(this.getSource(target), this.computeNodes(target));\n    }\n}\nHTMLDirective.define(SlottedDirective);\n/**\n * A directive that observes the `assignedNodes()` of a slot and updates a property\n * whenever they change.\n * @param propertyOrOptions - The options used to configure slotted node observation.\n * @public\n */\nexport function slotted(propertyOrOptions) {\n    if (isString(propertyOrOptions)) {\n        propertyOrOptions = { property: propertyOrOptions };\n    }\n    return new SlottedDirective(propertyOrOptions);\n}\n","import { isFunction } from \"../interfaces.js\";\nconst noTemplate = () => null;\nfunction normalizeBinding(value) {\n    return value === undefined ? noTemplate : isFunction(value) ? value : () => value;\n}\n/**\n * A directive that enables basic conditional rendering in a template.\n * @param condition - The condition to test for rendering.\n * @param templateOrTemplateBinding - The template or a binding that gets\n * the template to render when the condition is true.\n * @param elseTemplateOrTemplateBinding - Optional template or binding that that\n * gets the template to render when the conditional is false.\n * @public\n */\nexport function when(condition, templateOrTemplateBinding, elseTemplateOrTemplateBinding) {\n    const dataBinding = isFunction(condition) ? condition : () => condition;\n    const templateBinding = normalizeBinding(templateOrTemplateBinding);\n    const elseBinding = normalizeBinding(elseTemplateOrTemplateBinding);\n    return (source, context) => dataBinding(source, context)\n        ? templateBinding(source, context)\n        : elseBinding(source, context);\n}\n","import {Observable as $hgUW1$Observable} from \"@microsoft/fast-element\";\n\n\nclass $e23529bbb092cbf2$export$7254cc27399e90bd {\n    constructor(value = null){\n        /** \n     * Propriété privée pour stocker l'historique des valeurs d'état, limitée aux 10 dernières entrées.\n    */ this._history = [];\n        /** \n     * Propriété privée pour stocker la valeur actuelle de l'état, initialisée à `null`.\n    */ this._value = null;\n        /** \n     * Propriété privée pour notifier les observateurs des changements d'état, initialisée avec `Observable.getNotifier`.\n    */ this._notifier = (0, $hgUW1$Observable).getNotifier(this);\n        this._value = value;\n    }\n    /** \n   * Getter pour la valeur actuelle de l'état. Utilise `Observable.track` pour suivre les changements.\n  */ get value() {\n        (0, $hgUW1$Observable).track(this, \"value\");\n        return this._value;\n    }\n    /**\n   * Setter pour mettre à jour la valeur de l'état. Ajoute la valeur actuelle à l'historique et notifie\n   * les observateurs du changement.\n   * @param {T} value - Nouvelle valeur de l'état.\n  */ set value(value) {\n        this._value = value;\n        this._history = [\n            this._value,\n            ...this._history.reverse()\n        ].reduce((results, value)=>{\n            if (results.length > 10) results.push(value);\n            return results;\n        }, []).reverse();\n        (0, $hgUW1$Observable).notify(this, \"value\");\n    }\n    /**\n   * Méthode statique pour initialiser un nouvel objet `State` avec une valeur initiale facultative.\n   * @param {T} [value=null] - Valeur initiale de l'état.\n   * @returns Une nouvelle instance de `State` avec la valeur spécifiée.\n  */ static init(value = null) {\n        return new $e23529bbb092cbf2$export$7254cc27399e90bd(value);\n    }\n    /**\n   * Renvoie un tableau avec l'état actuel et une fonction pour mettre à jour l'état.\n   * @returns Un tableau contenant l'état actuel et une fonction de mise à jour.\n  */ get mutator() {\n        return [\n            this,\n            (value)=>{\n                this.value = value;\n            }\n        ];\n    }\n    /** \n   * Abonne une fonction de rappel qui sera appelée à chaque changement de valeur de l'état.\n   * @param {function} callback - Fonction à appeler lors d'un changement de valeur.\n  */ subscribe(callback) {\n        this._notifier.subscribe({\n            handleChange: (state, key)=>{\n                callback(state[key]);\n            }\n        });\n    }\n    /**\n   * Convertit l'état en une valeur primitive pour les objets, ou en Proxy pour les objets complexes.\n   * @returns La valeur primitive ou un Proxy pour les objets complexes.\n  */ [Symbol.toPrimitive]() {\n        return typeof this.value != \"object\" ? this.value : new Proxy(this.value, {\n            get (target, key) {\n                return target[key] ? target[key] : undefined;\n            }\n        });\n    }\n}\n\n\n\nfunction $75bc972ccc621f94$export$e6a0daad8304de(value = null) {\n    return (0, $e23529bbb092cbf2$export$7254cc27399e90bd).init(value).mutator;\n}\n\n\n\n\nexport {$e23529bbb092cbf2$export$7254cc27399e90bd as State, $75bc972ccc621f94$export$e6a0daad8304de as createState};\n//# sourceMappingURL=module.js.map\n","export { State } from './models/state.js';\nexport { createState } from './createState.js';","import { Notifier, Observable } from \"@microsoft/fast-element\";\n\n/** \n * La classe `State` gère et suit les valeurs d'état avec des capacités d'historique et d'abonnement.\n */\nexport class State<T = any>{\n\n  /** \n   * Propriété privée pour stocker l'historique des valeurs d'état, limitée aux 10 dernières entrées.\n  */\n  private _history : T[] = [];\n\n  /** \n   * Propriété privée pour stocker la valeur actuelle de l'état, initialisée à `null`.\n  */\n  private _value:T = null;\n\n  /** \n   * Propriété privée pour notifier les observateurs des changements d'état, initialisée avec `Observable.getNotifier`.\n  */\n  private _notifier:Notifier = Observable.getNotifier( this );\n\n  constructor( value = null ){\n    this._value = value;\n  }\n\n\n  /** \n   * Getter pour la valeur actuelle de l'état. Utilise `Observable.track` pour suivre les changements.\n  */\n  get value() {\n    Observable.track(this, 'value');\n    return this._value;\n  };\n\n  /**\n   * Setter pour mettre à jour la valeur de l'état. Ajoute la valeur actuelle à l'historique et notifie\n   * les observateurs du changement.\n   * @param {T} value - Nouvelle valeur de l'état.\n  */\n  set value(value: T) {\n    this._value = value;\n\n    this._history = [ this._value , ...this._history.reverse() ].reduce(( results , value ) => {\n      if(results.length > 10){\n        results.push( value );\n      };\n      return results;\n    } , []).reverse();\n\n    Observable.notify(this, 'value');\n  }\n\n  /**\n   * Méthode statique pour initialiser un nouvel objet `State` avec une valeur initiale facultative.\n   * @param {T} [value=null] - Valeur initiale de l'état.\n   * @returns Une nouvelle instance de `State` avec la valeur spécifiée.\n  */\n  static init<T = any>( value : T = null ){\n    return new State<T>( value );\n  }\n\n  /**\n   * Renvoie un tableau avec l'état actuel et une fonction pour mettre à jour l'état.\n   * @returns Un tableau contenant l'état actuel et une fonction de mise à jour.\n  */\n  get mutator():[ State<T> & T , ( newValue:T ) => void ]{\n    return [ this as any , ( value:T ) => {\n      this.value = value;\n    } ]\n  }\n\n  /** \n   * Abonne une fonction de rappel qui sera appelée à chaque changement de valeur de l'état.\n   * @param {function} callback - Fonction à appeler lors d'un changement de valeur.\n  */\n  subscribe( callback:(newValue: any) => void ){\n    this._notifier.subscribe( { handleChange : ( state , key ) => {\n      callback( state[key] );\n    } } );\n  };\n\n  /**\n   * Convertit l'état en une valeur primitive pour les objets, ou en Proxy pour les objets complexes.\n   * @returns La valeur primitive ou un Proxy pour les objets complexes.\n  */\n  [Symbol.toPrimitive](){\n    return typeof this.value != \"object\" ? this.value : new Proxy( this.value , {\n      get( target , key ){\n        return target[key] ? target[key] : undefined;\n      }\n    } )\n  }\n\n}","import { State } from \"./models/state.js\";\n\n/**\n * La fonction createState crée un état avec une valeur initiale et renvoie son mutateur.\n * @param {T} [value=null] - Le paramètre `value` dans la fonction `createState` est la valeur initiale\n * que vous souhaitez définir pour l'état. Il est facultatif et la valeur par défaut est « null » si\n * aucune valeur n'est fournie lors de l'appel de la fonction.\n * @returns La fonction `createState` renvoie la fonction `mutator` à partir de l'objet `State`\n * initialisé avec la `valeur` fournie.\n * ## Exemple \n * ```typescript\n * let [ counter , setCounter ] = createState<number>(0);\n * \n * counter.subscribe(( newValue ) => {\n *  \n *  console.log({newValue})\n * \n * })\n * ```\n */\nexport function createState< T = any >( value:T = null ):State< T >[\"mutator\"]{\n\n  return State.init( value ).mutator;\n\n}","import {createState as $hgUW1$createState} from \"@lithium-framework/state\";\n\n\nclass $89fec59bbef2bb37$export$98c71376181af907 extends Map {\n    /**\n   * Initialise une nouvelle instance de la classe `_storage` avec des enregistrements initiaux facultatifs et un validateur optionnel.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   * @returns {Storage<RECORD>} Une nouvelle instance de la classe `_storage` initialisée avec les enregistrements et le validateur fournis.\n   * @example\n   * ```typescript\n   * const records = { count: 0, name: \"John\" };\n   * const storage = _storage.init(records);\n   * ```\n   */ static init(records, validator) {\n        return new $89fec59bbef2bb37$export$98c71376181af907(records, validator);\n    }\n    /**\n   * Constructeur qui initialise la classe `_storage` avec des enregistrements optionnels et un validateur.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   */ constructor(records, validator){\n        super();\n        this._validator = null;\n        if (validator) this._validator = validator;\n        // Si des enregistrements sont fournis, les ajouter au _storage\n        if (records) Object.keys(records).forEach((key)=>{\n            this.set(key, (0, $hgUW1$createState)(records[key]));\n        });\n    }\n    /**\n   * Récupère la valeur du stockage en fonction d'une clé spécifiée.\n   * Si un validateur est défini, il valide la nouvelle valeur avant de l'appliquer.\n   * @template T - Le type de la valeur de l'état.\n   * @param {StorageKeys<RECORD>} key - La clé utilisée pour accéder à un enregistrement spécifique en stockage.\n   * @returns {State<T>[\"mutator\"]} La fonction `mutator` associée à la clé spécifiée de l'objet `State`.\n   * @example\n   * ```typescript\n   * const storage = _storage.init({ count: 0 });\n   * const [count, setCount] = storage.get(\"count\");\n   * setCount(10); // met à jour la valeur si la validation réussit\n   * ```\n   */ get(key) {\n        if (!this._validator) return super.get(key);\n        else {\n            let [state, setter] = super.get(key);\n            return [\n                state,\n                (newValue)=>{\n                    let previousValue = state.value;\n                    let result = this._validator(key, previousValue, newValue);\n                    if (result instanceof Promise) result.then(()=>setter(newValue)).catch((error)=>console.error(error));\n                    else if (result == true) setter(newValue);\n                }\n            ];\n        }\n    }\n}\n\n\nfunction $0718d8712747089f$export$d184a47a971dd4b9(records = {}, stateValidator) {\n    // Création d'un proxy contenant le stockage\n    return new Proxy((0, $89fec59bbef2bb37$export$98c71376181af907).init(records, stateValidator), {\n        /**\n     * Intercepte les opérations d'accès aux propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état ou de la méthode accédée.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {any} La méthode ou la valeur de l'état correspondant à la clé.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * console.log(storage.count[0].value); // affiche 0\n     * storage.count ; // met à jour la valeur de count à 5\n     * ```\n    */ get (target, key, receiver) {\n            // Retourne les méthodes du stockage\n            if (target[key]) {\n                if (typeof target[key] == \"function\") return target[key].bind(target);\n                else return target[key];\n            } else if (target.has(key)) return target.get(key);\n            else return undefined;\n        },\n        /**\n     * Intercepte les opérations de mise à jour des propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état à mettre à jour.\n     * @param {any} newValue - La nouvelle valeur à assigner à l'état.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {boolean} Un indicateur de succès de la mise à jour.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * storage.count ; // met à jour la valeur de count à 5\n     * console.log(storage.count[0].value); // affiche 5\n     * ```\n    */ set (target, key, newValue, receiver) {\n            if (target.has(key)) {\n                // Mise à jour du state contenant la valeur\n                target.get(key)[1](newValue);\n                return true;\n            } else return undefined;\n        }\n    });\n}\n\n\n\n\nexport {$0718d8712747089f$export$d184a47a971dd4b9 as createStorage};\n//# sourceMappingURL=module.js.map\n","export { createStorage } from './create-storage.js';\nexport type { Storage , StorageKeys , StorageValues , StateValidator } from './models/storage.js'","import { _storage, Storage, StateValidator } from './models/storage.js';\n\n/**\n * La fonction `createStorage` crée un objet proxy pour gérer le stockage avec des méthodes d'accès et de mise à jour des données.\n * @template RECORD - Le type de l'enregistrement de stockage.\n * @param {Partial<RECORD>} [records={}] - Un objet partiel de type `RECORD`, contenant des données initiales pour le stockage. \n * @param {StateValidator} [stateValidator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n * @returns {Storage<RECORD>} Un objet Proxy qui entoure l'objet de stockage créé en appelant `_storage.init` avec les enregistrements fournis.\n * @example\n * ```typescript\n * const initialData = { counter: 0, name: \"Alice\" };\n * const validator: StateValidator<number> = (key, previousValue, newValue) => newValue >= 0;\n * const storage = createStorage(initialData, validator);\n * \n * let [ counter , setCounter ] = storage.get('counter');\n * setCounter( 10 ); // met à jour la valeur si la validation réussit\n * console.log(+counter); // affiche 10\n * ```\n */\nexport function createStorage<RECORD extends Record<string, any>>(records: Partial<RECORD> = {}, stateValidator?: StateValidator): Storage<RECORD> {\n\n  // Création d'un proxy contenant le stockage\n  return new Proxy(_storage.init<RECORD>(records as RECORD, stateValidator), {\n\n    /**\n     * Intercepte les opérations d'accès aux propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état ou de la méthode accédée.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {any} La méthode ou la valeur de l'état correspondant à la clé.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * console.log(storage.count[0].value); // affiche 0\n     * storage.count ; // met à jour la valeur de count à 5\n     * ```\n    */\n    get(target, key: string & any, receiver) {\n      // Retourne les méthodes du stockage\n      if (target[key]) {\n        if (typeof target[key] == \"function\") return (target[key] as any).bind(target);\n        // Retourne les variables du stockage\n        else return target[key];\n      }\n      // Si la clé n'est pas dans le stockage\n      // Vérification de la présence de la clé dans le map du stockage\n      // Si présence de celle-ci, elle est retournée\n      else if (target.has(key)) return target.get(key);\n      // Sinon la clé n'existe pas et retourne undefined\n      else return undefined;\n    },\n\n    /**\n     * Intercepte les opérations de mise à jour des propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état à mettre à jour.\n     * @param {any} newValue - La nouvelle valeur à assigner à l'état.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {boolean} Un indicateur de succès de la mise à jour.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * storage.count ; // met à jour la valeur de count à 5\n     * console.log(storage.count[0].value); // affiche 5\n     * ```\n    */\n    set(target, key: string & any, newValue, receiver) {\n      if (target.has(key)) {\n        // Mise à jour du state contenant la valeur\n        target.get(key)[1](newValue);\n        return true;\n      }\n      // Sinon return undefined\n      else return undefined;\n    }\n  }) as any;\n\n}\n","import { State, createState } from '@lithium-framework/state';\n\n/**\n * Représente la fonction appelée lors du changement d'un état.\n * Cette fonction permet de valider la nouvelle valeur avant de l'appliquer à l'état.\n * La nouvelle valeur est stockée dans le state correspondant en fonction du succès ou de l'échec de l'opération.\n *\n * @template T - Le type de la valeur de l'état.\n * @param {string} key - La clé de l'état en cours de modification.\n * @param {T} previousValue - La valeur précédente de l'état avant la modification.\n * @param {T} newValue - La nouvelle valeur proposée pour l'état.\n * @returns {Promise<any> | boolean} - Une promesse ou une valeur booléenne indiquant le succès ou l'échec de la modification.\n * @example\n * ```typescript\n * const validator: StateValidator<number> = (key, previousValue, newValue) => {\n *   if (newValue >= 0) return true;\n *   return false;\n * };\n * ```\n */\nexport type StateValidator<T = any> = (key: string, previousValue: T, newValue: T) => Promise<any> | boolean;\n\n/** \n * Type représentant les clés des valeurs d'un enregistrement.\n * @template RECORD - Le type de l'enregistrement.\n */\nexport type StorageKeys<RECORD> = keyof RECORD;\n\n/** \n * Type représentant les mutateurs des valeurs d'un enregistrement.\n * @template RECORD - Le type de l'enregistrement.\n */\nexport type StorageValues<RECORD> = State<RECORD[StorageKeys<RECORD>]>[\"mutator\"];\n\n/** \n * La classe `_storage` étend `Map` pour stocker les valeurs d'état et fournit des méthodes\n * d'initialisation et d'accès aux mutateurs par clé.\n * @template RECORD - Le type de l'enregistrement stocké.\n */\nexport class _storage<RECORD extends Record<string, any>> extends Map<StorageKeys<RECORD>, StorageValues<RECORD>> {\n\n  private _validator: StateValidator = null;\n\n  /**\n   * Initialise une nouvelle instance de la classe `_storage` avec des enregistrements initiaux facultatifs et un validateur optionnel.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   * @returns {Storage<RECORD>} Une nouvelle instance de la classe `_storage` initialisée avec les enregistrements et le validateur fournis.\n   * @example\n   * ```typescript\n   * const records = { count: 0, name: \"John\" };\n   * const storage = _storage.init(records);\n   * ```\n   */\n  static init<RECORD extends Record<string, any>>(records?: RECORD, validator?: StateValidator): Storage<RECORD> {\n    return new _storage<RECORD>(records, validator) as Storage<RECORD>;\n  }\n\n  /**\n   * Constructeur qui initialise la classe `_storage` avec des enregistrements optionnels et un validateur.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   */\n  constructor(records?: RECORD, validator?: StateValidator) {\n    super();\n\n    if (validator) this._validator = validator;\n\n    // Si des enregistrements sont fournis, les ajouter au _storage\n    if (records) {\n      Object.keys(records).forEach((key) => {\n        this.set(key, createState(records[key]));\n      });\n    }\n  }\n\n  /**\n   * Récupère la valeur du stockage en fonction d'une clé spécifiée.\n   * Si un validateur est défini, il valide la nouvelle valeur avant de l'appliquer.\n   * @template T - Le type de la valeur de l'état.\n   * @param {StorageKeys<RECORD>} key - La clé utilisée pour accéder à un enregistrement spécifique en stockage.\n   * @returns {State<T>[\"mutator\"]} La fonction `mutator` associée à la clé spécifiée de l'objet `State`.\n   * @example\n   * ```typescript\n   * const storage = _storage.init({ count: 0 });\n   * const [count, setCount] = storage.get(\"count\");\n   * setCount(10); // met à jour la valeur si la validation réussit\n   * ```\n   */\n  get<T = any>(key: StorageKeys<RECORD>): State<T>[\"mutator\"] {\n    if (!this._validator) return super.get(key)!;\n\n    else {\n      let [state, setter] = super.get(key)!;\n      return [state, (newValue: T) => {\n        let previousValue = state.value;\n        let result = this._validator(key as string, previousValue, newValue);\n\n        if (result instanceof Promise) {\n          result\n            .then(() => setter(newValue as any))\n            .catch((error) => console.error(error));\n        } else if (result == true) {\n          setter(newValue as any);\n        }\n      }];\n    }\n  }\n}\n\n/** \n * Type `Storage` qui étend partiellement `_storage`.\n * @template RECORD - Le type de l'enregistrement.\n */\nexport type Storage<RECORD extends Record<string, any>> = _storage<RECORD> & { [key in StorageKeys<RECORD>]: StorageValues<RECORD> };\n","import $hgUW1$getrandomvalues from \"get-random-values\";\n\n// ===============================================\n// https://www.npmjs.com/package/get-random-values\n// ===============================================\n\nclass $149c1bd638913645$export$74e446f6456d826d extends String {\n    /**\n   * Obtient l'identifiant de composant en extrayant la première partie de l'UUID.\n   * @returns L'identifiant de composant.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.componentId); // '123456789012'\n   * ```\n  */ get componentId() {\n        return this.split(\"-\")[0];\n    }\n    /**\n   * Obtient la première section de l'UUID après division par '-'.\n   * @returns La première section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section1); // '1234'\n   * ```\n  */ get section1() {\n        return this.split(\"-\")[1];\n    }\n    /**\n   * Obtient la deuxième section de l'UUID après division par '-'.\n   * @returns La deuxième section de l'UUID.\n   * @example\n   * ```typescipt\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section2); // '5678'\n   * ```\n  */ get section2() {\n        return this.split(\"-\")[2];\n    }\n    /**\n   * Obtient la troisième section de l'UUID après division par '-'.\n   * @returns La troisième section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section3); // '90ab'\n   * ```\n  */ get section3() {\n        return this.split(\"-\")[3];\n    }\n    /**\n   * Obtient l'identifiant de collection en extrayant la cinquième partie de l'UUID.\n   * @returns L'identifiant de collection.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.collectionId); // 'abcdefabcdef'\n   * ```\n  */ get collectionId() {\n        return this.split(\"-\")[4];\n    }\n    /**\n   * Obtient l'identifiant parent en concaténant les sections 1, 2 et 3.\n   * @returns L'identifiant parent.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.parentId); // '1234567890ab'\n   * ```\n  */ get parentId() {\n        return [\n            this.section1,\n            this.section2,\n            this.section3\n        ].join(\"\");\n    }\n    /**\n   * Étend l'UUID hiérarchique avec des options personnalisées.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  const extendedUUID = uuid.extend({ parentId: '098765432109', collectionId: 'abcdefabcdef' });\n   *  console.log(extendedUUID); // Un nouvel _HUID avec les sections mises à jour.\n   * ```\n  */ extend(options) {\n        return $149c1bd638913645$export$31b40729666a4ae0.hv1({\n            parentId: this.componentId,\n            collectionId: this.collectionId\n        });\n    }\n}\nclass $149c1bd638913645$export$31b40729666a4ae0 {\n    /**\n   * Obtient une valeur par défaut pour l'identifiant de composant.\n   * @returns '000000000000' en tant que ComponentId.\n  */ static get componentId() {\n        return \"000000000000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la première section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment1() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la deuxième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment2() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la troisième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment3() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour l'identifiant de collection.\n   * @returns '000000000000' en tant que CollectionId.\n  */ static get collectionId() {\n        return \"000000000000\";\n    }\n    /**\n   * Obtient un UUID NIL (null) par défaut.\n   * @returns L'UUID NIL sous forme de chaîne.\n  */ static get NIL() {\n        return new $149c1bd638913645$export$74e446f6456d826d(`${$149c1bd638913645$export$31b40729666a4ae0.componentId}-${$149c1bd638913645$export$31b40729666a4ae0.segment1}-${$149c1bd638913645$export$31b40729666a4ae0.segment2}-${$149c1bd638913645$export$31b40729666a4ae0.segment3}-${$149c1bd638913645$export$31b40729666a4ae0.collectionId}`);\n    }\n    /**\n   * Encode une chaîne de longueur fixe en remplaçant certains caractères par des valeurs hexadécimales aléatoires.\n   * @param chaine - Une chaîne de longueur fixe.\n   * @returns Une chaîne de longueur fixe avec des valeurs hexadécimales aléatoires.\n   * @example\n   * ```typescript\n   *  const encoded = uuid.encode('123456789012');\n   *  console.log(encoded); // '1a2b3c4d5e6f'\n   * ```\n  */ static encode(chaine) {\n        return chaine.replace(/[018]/g, (c)=>{\n            return (c ^ (0, $hgUW1$getrandomvalues)(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n        });\n    }\n    /**\n   * Génère un UUID de version 4 en utilisant des valeurs aléatoires.\n   * @returns Un UUID de version 4 sous forme de chaîne.\n   * @example\n   * ```typescript\n   *  const uuidV4 = uuid.v4();\n   *  console.log(uuidV4); // Un UUID de version 4.\n   * ```\n  */ static v4() {\n        return $149c1bd638913645$export$31b40729666a4ae0.NIL.replace(/[018]/g, (c)=>{\n            return (c ^ (0, $hgUW1$getrandomvalues)(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n        });\n    }\n    /**\n   * Génère un UUID hiérarchique en fonction des options fournies.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const hierarchicalUUID = uuid.hv1({ parentId: '123456789012', collectionId: 'abcdefabcdef' });\n   *  console.log(hierarchicalUUID); // Un nouvel UUID hiérarchique (_HUID).\n   * ```\n  */ static hv1(options) {\n        if (!options) options = {\n            parentId: null,\n            collectionId: null\n        };\n        let componentId = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.componentId);\n        let segment1 = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.segment1);\n        let segment2 = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.segment2);\n        let segment3 = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.segment3);\n        let collectionId = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.collectionId);\n        if (options.parentId && options.parentId.length == 12) {\n            segment1 = options.parentId.slice(0, 4);\n            segment2 = options.parentId.slice(4, 8);\n            segment3 = options.parentId.slice(8, 12);\n        } else console.error(\"parentId.length exeded 12 char length.\");\n        if (options.collectionId) collectionId = options.collectionId;\n        return new $149c1bd638913645$export$74e446f6456d826d(`${componentId}-${segment1}-${segment2}-${segment3}-${collectionId}`);\n    }\n}\n\n\nexport {$149c1bd638913645$export$74e446f6456d826d as _HUID, $149c1bd638913645$export$31b40729666a4ae0 as uuid};\n//# sourceMappingURL=module.js.map\n","// ===============================================\n// https://www.npmjs.com/package/get-random-values\n// ===============================================\nimport { default as getRandomValues } from 'get-random-values';\n\nexport type FixedLengthString<Length extends number> = string & { __fixedLength: Length };\nexport type ComponentId = FixedLengthString<12>;\nexport type Segment = FixedLengthString<4>;\nexport type ParentSegementId = `${Segment}-${Segment}-${Segment}`;\nexport type CollectionId = FixedLengthString<12>;\nexport type HUID = `${ComponentId}-${ParentSegementId}-${CollectionId}`;\n\n/** \n * Interface pour les options de l'UUID hiérarchique.\n */\nexport interface HierarchicalUUIDOptions {\n  /** \n   * Identifiant parent (optionnel). \n   */\n  parentId?: FixedLengthString<12>;\n\n  /**\n   * Identifiant de collection (optionnel).\n   */\n  collectionId?: FixedLengthString<12>;\n}\n\n/** \n * Classe _HUID pour manipuler les UUID hiérarchiques.\n*/\nexport class _HUID extends String{\n\n  /**\n   * Obtient l'identifiant de composant en extrayant la première partie de l'UUID.\n   * @returns L'identifiant de composant.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.componentId); // '123456789012'\n   * ```\n  */\n  get componentId(){ return this.split('-')[0] as ComponentId; }\n\n  /**\n   * Obtient la première section de l'UUID après division par '-'.\n   * @returns La première section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section1); // '1234'\n   * ```\n  */\n  get section1(){ return this.split('-')[1] as Segment; }\n\n  /**\n   * Obtient la deuxième section de l'UUID après division par '-'.\n   * @returns La deuxième section de l'UUID.\n   * @example\n   * ```typescipt\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section2); // '5678'\n   * ```\n  */\n  get section2(){ return this.split('-')[2] as Segment; }\n\n  /**\n   * Obtient la troisième section de l'UUID après division par '-'.\n   * @returns La troisième section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section3); // '90ab'\n   * ```\n  */\n  get section3(){ return this.split('-')[3] as Segment; }\n\n  /**\n   * Obtient l'identifiant de collection en extrayant la cinquième partie de l'UUID.\n   * @returns L'identifiant de collection.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.collectionId); // 'abcdefabcdef'\n   * ```\n  */\n  get collectionId(){ return this.split('-')[4] as CollectionId; }\n\n  /**\n   * Obtient l'identifiant parent en concaténant les sections 1, 2 et 3.\n   * @returns L'identifiant parent.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.parentId); // '1234567890ab'\n   * ```\n  */\n  get parentId(){ return [this.section1,this.section2,this.section3].join('') as FixedLengthString<12>; }\n\n  /**\n   * Étend l'UUID hiérarchique avec des options personnalisées.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  const extendedUUID = uuid.extend({ parentId: '098765432109', collectionId: 'abcdefabcdef' });\n   *  console.log(extendedUUID); // Un nouvel _HUID avec les sections mises à jour.\n   * ```\n  */\n  extend(options?:HierarchicalUUIDOptions){\n\n    return uuid.hv1({\n      parentId : this.componentId,\n      collectionId : this.collectionId,\n    })\n\n  }\n\n}\n\n/** \n * Classe pour générer des UUID.\n*/\nexport class uuid{\n\n  /**\n   * Obtient une valeur par défaut pour l'identifiant de composant.\n   * @returns '000000000000' en tant que ComponentId.\n  */\n  static get componentId(){ return '000000000000' as ComponentId; }\n\n  /**\n   * Obtient une valeur par défaut pour la première section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment1(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour la deuxième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment2(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour la troisième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment3(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour l'identifiant de collection.\n   * @returns '000000000000' en tant que CollectionId.\n  */\n  static get collectionId(){ return '000000000000' as CollectionId; }\n\n  /**\n   * Obtient un UUID NIL (null) par défaut.\n   * @returns L'UUID NIL sous forme de chaîne.\n  */\n  static get NIL(){ return new _HUID(`${uuid.componentId}-${uuid.segment1}-${uuid.segment2}-${uuid.segment3}-${uuid.collectionId}`); }\n\n  /**\n   * Encode une chaîne de longueur fixe en remplaçant certains caractères par des valeurs hexadécimales aléatoires.\n   * @param chaine - Une chaîne de longueur fixe.\n   * @returns Une chaîne de longueur fixe avec des valeurs hexadécimales aléatoires.\n   * @example\n   * ```typescript\n   *  const encoded = uuid.encode('123456789012');\n   *  console.log(encoded); // '1a2b3c4d5e6f'\n   * ```\n  */\n  static encode< N extends number = 4 | 12 >( chaine:FixedLengthString<N> ){\n    return chaine.replace(/[018]/g, (c:any) =>\n    {\n      return (c ^ getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    }) as FixedLengthString<N> | FixedLengthString<N>\n  }\n\n  /**\n   * Génère un UUID de version 4 en utilisant des valeurs aléatoires.\n   * @returns Un UUID de version 4 sous forme de chaîne.\n   * @example\n   * ```typescript\n   *  const uuidV4 = uuid.v4();\n   *  console.log(uuidV4); // Un UUID de version 4.\n   * ```\n  */\n  static v4(  ) {\n\n    return uuid.NIL.replace(/[018]/g, (c:any) =>\n      {\n        return (c ^ getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n      }\n    ) as `${string}-${string}-${string}-${string}-${string}`;\n\n  }\n\n  /**\n   * Génère un UUID hiérarchique en fonction des options fournies.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const hierarchicalUUID = uuid.hv1({ parentId: '123456789012', collectionId: 'abcdefabcdef' });\n   *  console.log(hierarchicalUUID); // Un nouvel UUID hiérarchique (_HUID).\n   * ```\n  */\n  static hv1( options?:HierarchicalUUIDOptions ) {\n\n    if(!options)options = {\n      parentId : null,\n      collectionId : null\n    };\n\n    let componentId = uuid.encode( uuid.componentId );\n    let segment1 = uuid.encode( uuid.segment1 );\n    let segment2 = uuid.encode( uuid.segment2 );\n    let segment3 = uuid.encode( uuid.segment3 );\n    let collectionId = uuid.encode( uuid.collectionId );\n\n    if(options.parentId && options.parentId.length == 12){\n      segment1 = options.parentId.slice(0,4) as FixedLengthString<4>;\n      segment2 = options.parentId.slice(4,8) as FixedLengthString<4>;\n      segment3 = options.parentId.slice(8,12) as FixedLengthString<4>;\n    }\n    else console.error( 'parentId.length exeded 12 char length.' )\n\n    if(options.collectionId)collectionId = options.collectionId;\n\n    return new _HUID(`${ componentId }-${ segment1 }-${ segment2 }-${ segment3 }-${ collectionId }`);\n\n  }\n\n}","/* eslint-disable no-var, operator-linebreak */\n\nvar window = require('global/window');\nvar nodeCrypto = require('crypto');\n\n/**\n * @template {ArrayBufferView | null} T\n * @param {T} buf\n * @returns {T}\n */\nfunction getRandomValues(buf) {\n  if (window.crypto && window.crypto.getRandomValues) {\n    return window.crypto.getRandomValues(buf);\n  }\n  if (typeof window.msCrypto === 'object' && typeof window.msCrypto.getRandomValues === 'function') {\n    return window.msCrypto.getRandomValues(buf);\n  }\n  if (nodeCrypto.randomBytes) {\n    if (!(buf instanceof Uint8Array)) {\n      throw new TypeError('expected Uint8Array');\n    }\n    if (buf.length > 65536) {\n      var e = new Error();\n      // @ts-expect-error\n      e.code = 22;\n      e.message = 'Failed to execute \\'getRandomValues\\' on \\'Crypto\\': The ' +\n        'ArrayBufferView\\'s byte length (' + buf.length + ') exceeds the ' +\n        'number of bytes of entropy available via this API (65536).';\n      e.name = 'QuotaExceededError';\n      throw e;\n    }\n    var bytes = nodeCrypto.randomBytes(buf.length);\n    buf.set(bytes);\n    return buf;\n  }\n  else {\n    throw new Error('No secure random number generator available.');\n  }\n}\n\nmodule.exports = getRandomValues;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","\"use strict\";"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$interopDefault","a","__esModule","default","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$12b925683b720d81$export$b3890eb0ae9dca99","$12b925683b720d81$export$c0bb0b647f701bb5","$12b925683b720d81$export$7f8b9f308979d41d","customElement","$kyf8E","$hIJMY","$7v8l6","$d4xDP","$23el4","$cTUOC","$d8FOX","$lhgTg","$4VObL","$dgoyj","$TMf7M","$dLl2P","$ipcC9","$juDPm","$6iBHo","$jbBC9","$bdZ6n","$12b925683b720d81$var$$parcel$export","$12b925683b720d81$var$$parcel$exportWildcard","dest","source","keys","forEach","key","prototype","hasOwnProperty","$12b925683b720d81$var$$ed2a677aa7485959$exports","$12b925683b720d81$export$1053a9be1bcefef9","$12b925683b720d81$export$b176171395436676","initialObject","observabe","createProxy","constructor","$data","value","Observable","Proxy","store","propKey","result","error","console","$12b925683b720d81$export$dcc5cf24d8fb3b41","$12b925683b720d81$var$$535bb7ac3b1a1d6d$exports","$12b925683b720d81$var$$b1b98f19caab25c2$exports","$12b925683b720d81$export$683a0e8baad8b9c3","attr","$12b925683b720d81$var$$a1f8df21dd3b8ee9$exports","$12b925683b720d81$export$ca000e230c0caa3e","target","propertyKey","constructible","states","$states","newValue","observable","options","$12b925683b720d81$var$$ed2a677aa7485959$var$_classPrivateFieldLooseBase","t","TypeError","$12b925683b720d81$var$$ed2a677aa7485959$var$id","$12b925683b720d81$var$$ed2a677aa7485959$var$_state_keys","data","writable","createState","includes","JSON","parse","push","stringify","fromEntries","Map","Array","from","useState","log","createConsumable","assign","template","container","document","body","context","render","$12b925683b720d81$var$$5193209399721411$exports","when","repeat","children","elements","slotted","$12b925683b720d81$var$$21522158c10703ef$exports","$12b925683b720d81$export$ca3487b83ec6860a","$12b925683b720d81$export$5761d9f85430a54b","$12b925683b720d81$export$eaa89ade56b7c0c1","Binding","createObserver","subscriber","directive","bind","controller","HTMLBindingDirective","fn","callback","x","createBehavior","targetNodeId","targets","then","HTMLElement","parentElement","catch","html","unbind","use","HTMLDirective","define","$12b925683b720d81$var$$f6651d38d609160e$exports","$12b925683b720d81$export$7d1e3a5e95ceca43","$12b925683b720d81$export$1ef8aea9a6de98d","$12b925683b720d81$export$eff4d24c3ff7876e","StatelessAttachedAttributeDirective","lastChild","$12b925683b720d81$var$$c66c6ea353620255$exports","$12b925683b720d81$export$28205fa712822499","$12b925683b720d81$export$792c882b75ca2192","$12b925683b720d81$export$60241385465d0a34","state","_state","mutator","_callback","view","subscribe","dispose","textContent","$12b925683b720d81$var$$6e530dd7df9f7fe5$exports","$12b925683b720d81$export$81053cd05d55c9d8","$12b925683b720d81$export$18211b6e76035cfa","$12b925683b720d81$export$1d567c320f4763bc","css","style","$12b925683b720d81$var$$15db1e855f042fe6$exports","$12b925683b720d81$export$f36d8f10294685f8","$12b925683b720d81$export$51c6edf8ee19b71a","$12b925683b720d81$export$a40009bd2c363351","loading","$12b925683b720d81$var$$fde9406d76ec24a9$exports","$12b925683b720d81$export$77cea355fa80b5f4","State","createStorage","uuid","$12b925683b720d81$var$$c5a7ff2cef84a00c$exports","ViewTemplate","HTMLView","volatile","FASTElement","connectedCallback","$ef62b9d3f31c76fb$export$9a9eae009eb8780f","$ef62b9d3f31c76fb$export$77cea355fa80b5f4","$ef62b9d3f31c76fb$export$5ab46cbf6120b33a","$ef62b9d3f31c76fb$export$e338fff42eed603a","$ef62b9d3f31c76fb$export$f7c638676c8af91d","$gAsSx","$c22v8","$igor1","$aEJPD","freeze","unknown","coupled","FAST","getById","KernelServiceId","watcher","queueUpdate","Updates","enqueue","volatileRegex","notifierLookup","WeakMap","createArrayObserver","array","getNotifier","_a","found","$fastController","isArray","PropertyChangeNotifier","getAccessors","createMetadataLocator","DefaultObservableAccessor","name","field","getValue","watch","setValue","oldValue","isFunction","notify","ExpressionNotifierImplementation","SubscriberSet","expression","initialSubscriber","isVolatileBinding","needsRefresh","needsQueue","isAsync","first","last","propertySource","propertyName","notifier","next","setMode","observe","isBound","requiresUnbind","onUnbind","sourceLifetime","previousWatcher","disconnect","current","unsubscribe","prev","prevValue","handleChange","records","makeSerializationNoop","setArrayObserverFactory","factory","track","trackVolatile","args","nameOrAccessor","isString","Reflect","binding","test","toString","descriptor","apply","$ef62b9d3f31c76fb$var$contextEvent","contextEvent","event","index","length","getEvent","eventDetail","detail","eventTarget","setEvent","$c13668d379adbe73$var$kernelMode","$c13668d379adbe73$export$f2080b9a9a32b8d3","$c13668d379adbe73$export$f6e2535fb5126e54","$c13668d379adbe73$export$844ec244b1367d54","$c13668d379adbe73$export$8793edee2d425525","$c13668d379adbe73$var$kernelAttr","currentScript","getAttribute","scripts","getElementsByTagName","updateQueue","elementRegistry","postfix","Math","random","substring","object","$8c279ca4e9142d99$export$360e186c37756536","$8c279ca4e9142d99$export$d3ae4127996a91af","$8c279ca4e9142d99$export$a31396a98752ddb5","$8c279ca4e9142d99$export$df500aa24c905daf","$8c279ca4e9142d99$export$997c5e5ecebc1b61","$8c279ca4e9142d99$var$propConfig","create","storage","initialize","warn","addMessages","typeToDefinition","definition","has","type","getByType","getForInstance","metadataLookup","metadata","currentTarget","getPrototypeOf","slice","toJSON","noop","self","window","Function","$d4bcacde05b75881$export$26ef613a0934aa5f","tasks","pendingErrors","rAF","requestAnimationFrame","updateAsync","throwFirstError","shift","process","tryRunTask","task","setTimeout","scan","newLength","callable","Promise","$7c21311213c59972$export$f35d03caf9a2ecdf","$7c21311213c59972$export$af6e57f0938b1389","subject","sub1","sub2","spillover","indexOf","splice","i","ii","subscribers","subjectSubscribers","_b","propertyToWatch","propertyToUnwatch","$ce6a1072f08e6fbd$export$722ab06c0d846d74","$ce6a1072f08e6fbd$export$7aabe8b3a840d2fd","$1hYzh","$ce6a1072f08e6fbd$var$booleanMode","$ce6a1072f08e6fbd$var$reflectMode","$ce6a1072f08e6fbd$export$8b80b92e472f3c0a","locate","$ce6a1072f08e6fbd$export$2aee1c8d7bab360b","toView","fromView","Owner","attribute","toLowerCase","mode","converter","guards","Set","fieldName","callbackName","hasCallback","tryReflectToAttribute","onAttributeChangedCallback","element","add","delete","latestValue","DOM","setAttribute","setBooleanAttribute","collect","attributeLists","attributes","list","j","jj","config","property","configOrTarget","prop","decorator","$target","$prop","arguments","$0f065c80a7a62032$export$b0076a1a9e24da9","$0f065c80a7a62032$export$cb0933279c36a66b","none","booleanAttribute","content","tokenList","$0f065c80a7a62032$var$createHTML","$0f065c80a7a62032$var$fastTrustedType","trustedTypes","createPolicy","createHTML","$0f065c80a7a62032$var$defaultPolicy","protect","tagName","aspect","aspectName","sink","$0f065c80a7a62032$var$fastPolicy","policy","setPolicy","attributeName","removeAttribute","$5761e5ae35fd42b5$export$f4f50f872cf9bd86","evaluate","isVolatile","$9845be8c3e2f80c3$export$bacb5cc5a11aef16","$9845be8c3e2f80c3$export$8e0d942365449f1b","NodeObservationDirective","observerProperty","Symbol","handleEvent","mutations","observer","updateTarget","getSource","computeNodes","childList","MutationObserver","getNodes","querySelectorAll","selector","childNodes","propertyOrOptions","$9a7fd090e761b084$export$3b3d5ef3c555d599","$9a7fd090e761b084$export$683728dd3b823b8d","$lMiZS","$9a7fd090e761b084$var$registry","createTypeRegistry","assignAspect","aspectType","DOMAspect","sourceAspect","targetAspect","Markup","$fdacd11ac8a6d66d$export$79a1817568da084b","$fdacd11ac8a6d66d$export$b925b7ba50a6200f","$fdacd11ac8a6d66d$export$7acfa6ed01010e37","$fdacd11ac8a6d66d$var$marker","$fdacd11ac8a6d66d$var$interpolationStart","$fdacd11ac8a6d66d$var$interpolationEnd","$fdacd11ac8a6d66d$var$interpolationEndLength","$fdacd11ac8a6d66d$var$id","interpolation","comment","factories","parts","split","literal","factoryId","$990c767fbea0e9a3$export$7a5d735b2ab6389d","$990c767fbea0e9a3$export$755ec928f38200a4","$990c767fbea0e9a3$var$selectElements","nodeType","matches","_id","_controllerProperty","emptyArray","nodes","filter","$17e6fc0171954cb0$export$dbf350e5966cf602","$2m4Ni","$iCh8k","$1Z57f","$d8Jf8","$17e6fc0171954cb0$var$marker","$17e6fc0171954cb0$var$varId","$17e6fc0171954cb0$var$nextCSSVariable","$17e6fc0171954cb0$var$collectStyles","strings","values","styles","cssString","behaviors","behavior","CSSBindingDirective","oneWay","createCSS","CSSDirective","ElementStyles","CSSStyleSheet","trim","elementStyles","withBehaviors","$17e6fc0171954cb0$var$CSSPartial","stylesheets","reduce","accumulated","addedCallback","addStyles","removedCallback","removeStyles","partial","$1b715ad6d7c3a5da$export$d013c21e6c7cf47e","$1b715ad6d7c3a5da$var$OneWayBinding","$d8d910eea2a60f2c$export$c6882ecf5b9a1390","$d8d910eea2a60f2c$var$registry","$171f74d9f37122c1$var$DefaultStyleStrategy","$171f74d9f37122c1$export$5cb32fda821782e2","WeakSet","_strategy","map","curr","concat","strategy","withStrategy","addStylesTo","removeStylesFrom","isAttachedTo","Strategy","$171f74d9f37122c1$var$reduceStyles","setDefaultStrategy","normalize","supportsAdoptedStyleSheets","adoptedStyleSheets","$990f1e0f523f32f7$export$a4f733160e5c8f6c","$990f1e0f523f32f7$var$handleChange","setProperty","dataBinding","$cssBindings","k","_","$026c7ebbac8e86db$export$904ba5187827962e","$026c7ebbac8e86db$export$da64fc29f17f9d0e","$z0YX2","$4Xo4x","$026c7ebbac8e86db$var$createFASTElement","BaseType","ElementController","forCustomElement","$emit","emit","connect","disconnectedCallback","attributeChangedCallback","FASTElementDefinition","registerBaseType","$026c7ebbac8e86db$var$define","nameOrDef","compose","$069408055684e624$var$elementControllerStrategy","$069408055684e624$export$c72c0f72b4b26c7e","$6qpMz","$aWVYn","$069408055684e624$var$defaultEventOptions","bubbles","composed","cancelable","$069408055684e624$var$isConnectedPropertyName","$069408055684e624$var$shadowRoots","$069408055684e624$var$getShadowRoot","shadowRoot","boundObservables","needsInitialization","hasExistingShadowRoot","_template","stage","guardBehaviorConnection","behaviorsConnected","_mainStyles","shadowOptions","attachShadow","accessors","isConnected","ExecutionContext","resolveTemplate","renderTemplate","mainStyles","resolveStyles","addBehavior","targetBehaviors","count","removeBehavior","force","append","sourceBehaviors","removeChild","bindObservables","connectBehaviors","propertyNames","disconnectBehaviors","attrDef","attributeLookup","dispatchEvent","CustomEvent","host","child","firstChild","SourceLifetime","setStrategy","$069408055684e624$var$normalizeStyleTarget","getRootNode","$069408055684e624$export$ff9a4b215f625f9a","styleSheetCache","sheets","sheet","replaceSync","$069408055684e624$var$addAdoptedStyleSheets","$069408055684e624$var$removeAdoptedStyleSheets","$069408055684e624$var$id","$069408055684e624$var$nextStyleId","$069408055684e624$var$usableStyleTarget","styleClass","createElement","innerHTML","className","$069408055684e624$var$deferHydrationAttribute","$069408055684e624$var$needsHydrationAttribute","$069408055684e624$export$263e00ec4c78a647","hydrationObserverHandler","record","hydrationObserver","unobserve","undefined","needsHydration","hasAttribute","attributeFilter","isHydratable","HydrationMarkup","isElementBoundaryStartMarker","nextSibling","isElementBoundaryEndMarker","previousSibling","hydrate","install","UnobservableMutationObserver","$4ad92ba3e9c374f7$export$f68c7a96500f2aea","observedNodes","size","unbindables","addBehaviorFactory","_c","_d","compiled","nextId","targetTagName","addTarget","nodeId","unbindable","$39bf58553b4fcc86$export$dbb8b6d358bc70ba","$39bf58553b4fcc86$var$defaultShadowOptions","$39bf58553b4fcc86$var$defaultElementOptions","$39bf58553b4fcc86$var$fastElementBaseTypes","$39bf58553b4fcc86$var$fastElementRegistry","nameOrConfig","platformDefined","registry","customElements","proto","AttributeDefinition","observedAttributes","propertyLookup","elementOptions","isDefined","$7f8c4a5b7179e36c$export$d9a04faa81df4f36","$7f8c4a5b7179e36c$export$7393b5ded7a91eb8","$7f8c4a5b7179e36c$export$9934e196b2f5d5b7","$7f8c4a5b7179e36c$var$bindingStartMarker","$7f8c4a5b7179e36c$var$bindingEndMarker","$7f8c4a5b7179e36c$var$repeatViewStartMarker","$7f8c4a5b7179e36c$var$repeatViewEndMarker","$7f8c4a5b7179e36c$var$elementBoundaryStartMarker","$7f8c4a5b7179e36c$var$elementBoundaryEndMarker","$7f8c4a5b7179e36c$var$isComment","node","Node","COMMENT_NODE","attributeMarkerName","attributeBindingSeparator","contentBindingStartMarker","uniqueId","contentBindingEndMarker","repeatStartMarker","repeatEndMarker","isContentBindingStartMarker","isContentBindingEndMarker","isRepeatViewStartMarker","isRepeatViewEndMarker","parseAttributeBinding","parseInt","parseContentBindingStartMarker","$7f8c4a5b7179e36c$var$parseIndexAndIdMarker","parseContentBindingEndMarker","parseRepeatStartMarker","$7f8c4a5b7179e36c$var$parseIntMarker","parseRepeatEndMarker","parseElementBoundaryStartMarker","$7f8c4a5b7179e36c$var$parseStringMarker","parseElementBoundaryEndMarker","regex","match","exec","for","$f7d8498dd9e90f88$export$98f7e629c251afe6","$f7d8498dd9e90f88$export$c0bb0b647f701bb5","$91MUc","$fzuOp","$f7d8498dd9e90f88$var$lastAttributeNameRegex","$f7d8498dd9e90f88$var$noFactories","$f7d8498dd9e90f88$export$f5439a5bc3830f91","empty","compile","Compiler","hostBindingTarget","createView","inline","withPolicy","appendTo","currentString","currentValue","staticValue","oneTime","$f7d8498dd9e90f88$var$createHTML","prevString","aspected","raw","$692a24aa15eb5881$export$62b137a205137697","$692a24aa15eb5881$var$OneTimeBinding","$39736ac061ae0d00$export$c590b280af2e6950","$39736ac061ae0d00$var$sinkLookup","$fastView","bindingViewBoundaries","hydrationStage","HydrationStage","hydrated","viewNodes","$fastTemplate","isComposed","remove","needsBindOnly","insertBefore","lookup","cv","classVersions","version","names","currentName","isHydrating","addEventListener","preventDefault","$0a7a8f365b51993e$export$1b0b7079c4551d79","$0a7a8f365b51993e$export$a8d753d276b93290","$0a7a8f365b51993e$var$_a","$cNDgh","$0a7a8f365b51993e$var$removeNodeSequence","firstNode","lastNode","parent","parentNode","nodeName","$0a7a8f365b51993e$var$DefaultExecutionContext","isEven","isOdd","isFirst","isInMiddle","isLast","fragment","appendChild","hasChildNodes","end","evaluateUnbindables","disposeContiguousBatch","views","unhydrated","hydrating","$0a7a8f365b51993e$export$ba65c3a861c05521","message","templateString","Hydratable","sourceTemplate","_hydrationStage","_bindingViewBoundaries","_targets","createDocumentFragment","boundaries","buildViewBindingTargets","HydrationTargetElementError","targetFactory","createRangeForNodes","cloneContents","$02679f08f8c3af0e$export$431d786e0fa03e5f","$02679f08f8c3af0e$export$33c30cbe164cb415","$02679f08f8c3af0e$export$26216c5b533261dd","$02679f08f8c3af0e$export$814fd3cda928c189","$02679f08f8c3af0e$var$isComment","$02679f08f8c3af0e$var$isText","TEXT_NODE","range","createRange","setStart","setEnd","treeRoot","commonAncestorContainer","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","acceptNode","comparePoint","FILTER_ACCEPT","FILTER_REJECT","currentNode","ELEMENT_NODE","$02679f08f8c3af0e$var$targetElement","attrFactoryIds","$02679f08f8c3af0e$var$targetComment","$02679f08f8c3af0e$var$skipToElementBoundaryEndMarker","parsed","root","$02679f08f8c3af0e$var$isShadowRoot","DocumentFragment","createTextNode","nextNode","detach","$b562068d8ce9f5d0$export$3a6335acfcf707c9","$b562068d8ce9f5d0$var$targetIdFrom","parentId","nodeIndex","$b562068d8ce9f5d0$var$descriptorCache","$b562068d8ce9f5d0$var$next","$b562068d8ce9f5d0$var$tryWarn","startsWith","$b562068d8ce9f5d0$var$warningHost","$b562068d8ce9f5d0$var$CompilationContext","directives","nodeIds","descriptors","addFactory","targetIndex","addTargetDescriptor","targetId","lastIndexOf","grandparentId","childIndex","cloneNode","r","h","$b562068d8ce9f5d0$var$compileAttributes","includeBasicValues","attrValue","parseResult","Parser","aggregate","removeAttributeNode","$b562068d8ce9f5d0$var$templateTag","fec","firstElementChild","createComment","adoptNode","$b562068d8ce9f5d0$var$compileChildren","childNode","$b562068d8ce9f5d0$var$compileNode","$b562068d8ce9f5d0$var$compileContent","currentPart","bindingPolicy","partCount","finalParts","scope","output","$a04ffd294f1ed5e3$export$76d90c956114f2c2","$1S7Vh","$fOqr6","$a04ffd294f1ed5e3$var$defaultRepeatOptions","positioning","recycle","$a04ffd294f1ed5e3$var$bindWithoutPositioning","items","parentContext","$a04ffd294f1ed5e3$var$bindWithPositioning","$a04ffd294f1ed5e3$var$isCommentNode","$a04ffd294f1ed5e3$export$be1769e3b8cade2","propertyBag","$a04ffd294f1ed5e3$export$9320ef0c85148109","itemsObserver","bindView","itemsBindingObserver","templateBindingObserver","templateBinding","location","observeItems","hydrateViews","refreshAllViews","unbindAllViews","reset","updateViews","oldObserver","newObserver","hasNewObserver","splices","leftoverViews","leftoverIndex","availableViews","removed","removeIndex","addIndex","addedCount","removedViews","totalAvailableViews","neighbor","viewsLength","templateChanged","itemsLength","serializer","XMLSerializer","viewsState","viewTemplateString","serializeToString","rootNodeContent","start","unmatchedEndMarkers","$a04ffd294f1ed5e3$export$3e91f6eae87714ce","ArrayObserver","enable","normalizeBinding","$15d0fae2631964a9$export$ddffcc348cf2aba1","$15d0fae2631964a9$export$ceb3ee475cfd64d1","adjustTo","arrayLength","$15d0fae2631964a9$export$2bfb3010befe266c","optimized","$15d0fae2631964a9$var$reset","$15d0fae2631964a9$var$resetSplices","$15d0fae2631964a9$var$defaultSpliceStrategy","support","previous","changes","$15d0fae2631964a9$var$project","initialSplices","$15d0fae2631964a9$var$merge","inserted","insertionOffset","start1","end1","start2","end2","intersectCount","deleteCount","currentRemoved","prepend","offset","$15d0fae2631964a9$var$calc","currentStart","currentEnd","old","oldStart","oldEnd","prefixCount","suffixCount","minLength","min","$15d0fae2631964a9$var$sharedPrefix","searchLength","$15d0fae2631964a9$var$sharedSuffix","index1","index2","ops","$15d0fae2631964a9$var$spliceOperationsFromEditDistances","distances","edits","northWest","west","north","reverse","$15d0fae2631964a9$var$calcEditDistances","rowCount","columnCount","oldIndex","pop","notEmpty","addSplice","sort","unshift","$15d0fae2631964a9$var$setNonEnumerable","$15d0fae2631964a9$var$DefaultArrayObserver","oldCollection","_lengthObserver","flush","lengthObserver","$15d0fae2631964a9$var$enabled","collection","$fastPatch","method","o","$b830082deda01e3f$export$6cdc818096b8be3c","$d66458b7b8a1796f$export$e2355138873b532d","$d66458b7b8a1796f$var$slotEvent","$d66458b7b8a1796f$export$321a4334e9cbbbe2","removeEventListener","assignedNodes","$e30fb6903e5b5f84$export$a55877ca9db47377","$e30fb6903e5b5f84$var$noTemplate","$e30fb6903e5b5f84$var$normalizeBinding","condition","templateOrTemplateBinding","elseTemplateOrTemplateBinding","elseBinding","$4961aabe115191b8$export$7254cc27399e90bd","$4961aabe115191b8$export$e6a0daad8304de","_history","_value","_notifier","results","toPrimitive","$df7c38d5e4d71f03$export$d184a47a971dd4b9","$df7c38d5e4d71f03$var$$89fec59bbef2bb37$export$98c71376181af907","validator","_validator","setter","previousValue","stateValidator","receiver","$82c04e2e766830d9$export$31b40729666a4ae0","$kQys5","$82c04e2e766830d9$export$74e446f6456d826d","String","componentId","section1","section2","section3","collectionId","join","extend","hv1","segment1","segment2","segment3","NIL","encode","chaine","replace","c","Uint8Array","v4","$649pq","$kjyEk","buf","crypto","getRandomValues","msCrypto","randomBytes","bytes","$46aa6a3fd4f85b01$var$win","ObservableObject","_state_keys","_classPrivateFieldLooseKey","ViewExecutionContext","Record","T","States","_classPrivateFieldLooseBase","ViewContext","createObservableObject","Key","Value","DecoratorAttributeConfiguration","attrState","Subscriber","BindingDirective","ExpressionObserver","AsyncAppendBindig","AsyncAppendDirective","asyncAppend","IElementRef","createRef","RefDirective","ref","StateBindig","StateDirective","Properties","StyleBindig","StyleDirective","UntilBindig","UntilDirective","until","_html","HTMLTemplateTag","WebComponent","Notifier","Storage","StorageKeys","StorageValues","StateValidator","_storage","Partial","RECORD","FixedLengthString","__fixedLength","Length","ComponentId","Segment","ParentSegementId","CollectionId","HUID","HierarchicalUUIDOptions","_HUID","N"],"version":3,"file":"index.2df65ba6.js.map"}