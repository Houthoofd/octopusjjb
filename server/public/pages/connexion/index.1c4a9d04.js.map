{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,SCKA,IAAI,EAA8B,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,EAAE,AAAE,GAIlC,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC;;;;;;;;;;;;;UAaJ,CAAC,CAET,CAAC,CA0DH,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO","sources":["<anon>","ui/src/pages/connexion/index.ts"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirec605\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirec605\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $1BF7I = parcelRequire(\"1BF7I\");\nparcelRequire(\"lTDtW\");\nlet $b1aeced00c83354b$var$template = (0, $1BF7I.html)`${(context)=>{\n    return (0, $1BF7I.html)`<div>\r\n        <h1>Connexion</h1>\r\n        <form>\r\n            <div class='input-fields'>\r\n                <label for=\"email\">E-mail</label>\r\n                <input type=\"email\">\r\n            </div>\r\n            <div class='input-fields'>\r\n                <label for=\"password\">Mot de passe</label>\r\n                <input type=\"password\">\r\n            </div>\r\n            <button type=\"submit\">Connexion</button>\r\n        </form>\r\n    </div>`;\n}}`;\n// document.addEventListener('DOMContentLoaded', () => {\n//     const form = document.querySelector('form');\n//     const messageContainer = document.createElement('div');\n//     form?.appendChild(messageContainer);\n//     if (form) {\n//         form.addEventListener('submit', (e) => {\n//             e.preventDefault();\n//             const inputs = document.querySelectorAll('input');\n//             const email = (inputs[0] as HTMLInputElement).value;\n//             const password = (inputs[1] as HTMLInputElement).value;\n//             if (!email || !password) {\n//                 messageContainer.textContent = \"Veuillez remplir tous les champs.\";\n//                 return;\n//             }\n//             const data = { email, password };\n//             console.log(data)\n//             fetch('http://localhost:3000/connexion/', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json'\n//                 },\n//                 body: JSON.stringify(data)\n//             })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Erreur serveur.');\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 if (data.length > 0) {\n//                     console.log(data);\n//                 } else {\n//                     messageContainer.textContent = 'Utilisateur non trouvé ou mot de passe incorrect.';\n//                 }\n//                 console.log('Réponse du serveur:', data);\n//             })\n//             .catch(error => {\n//                 messageContainer.textContent = 'Erreur lors de la connexion.';\n//                 console.error('Erreur lors de la requête fetch:', error);\n//             });\n//         });\n//     }\n// });\n(0, $1BF7I.render)($b1aeced00c83354b$var$template);\n\n\n//# sourceMappingURL=index.1c4a9d04.js.map\n","import { render , html, ViewTemplate , ViewContext } from '@lithium-framework/core';\r\nimport '@lithium-framework/router-element'\r\n\r\n\r\n\r\nlet template: ViewTemplate<any> = html`${( context:ViewContext )=>{\r\n\r\n\r\n\r\n  return html`<div>\r\n        <h1>Connexion</h1>\r\n        <form>\r\n            <div class='input-fields'>\r\n                <label for=\"email\">E-mail</label>\r\n                <input type=\"email\">\r\n            </div>\r\n            <div class='input-fields'>\r\n                <label for=\"password\">Mot de passe</label>\r\n                <input type=\"password\">\r\n            </div>\r\n            <button type=\"submit\">Connexion</button>\r\n        </form>\r\n    </div>`;\r\n\r\n}}`\r\n\r\n\r\n// document.addEventListener('DOMContentLoaded', () => {\r\n//     const form = document.querySelector('form');\r\n//     const messageContainer = document.createElement('div');\r\n//     form?.appendChild(messageContainer);\r\n\r\n//     if (form) {\r\n//         form.addEventListener('submit', (e) => {\r\n//             e.preventDefault();\r\n\r\n//             const inputs = document.querySelectorAll('input');\r\n//             const email = (inputs[0] as HTMLInputElement).value;\r\n//             const password = (inputs[1] as HTMLInputElement).value;\r\n\r\n//             if (!email || !password) {\r\n//                 messageContainer.textContent = \"Veuillez remplir tous les champs.\";\r\n//                 return;\r\n//             }\r\n\r\n//             const data = { email, password };\r\n//             console.log(data)\r\n\r\n//             fetch('http://localhost:3000/connexion/', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json'\r\n//                 },\r\n//                 body: JSON.stringify(data)\r\n//             })\r\n//             .then(response => {\r\n//                 if (!response.ok) {\r\n//                     throw new Error('Erreur serveur.');\r\n//                 }\r\n//                 return response.json();\r\n//             })\r\n//             .then(data => {\r\n//                 if (data.length > 0) {\r\n//                     console.log(data);\r\n//                 } else {\r\n//                     messageContainer.textContent = 'Utilisateur non trouvé ou mot de passe incorrect.';\r\n//                 }\r\n//                 console.log('Réponse du serveur:', data);\r\n//             })\r\n//             .catch(error => {\r\n//                 messageContainer.textContent = 'Erreur lors de la connexion.';\r\n//                 console.error('Erreur lors de la requête fetch:', error);\r\n//             });\r\n//         });\r\n//     }\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\nrender(template);"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$1BF7I","$b1aeced00c83354b$var$template","html","context","render"],"version":3,"file":"index.1c4a9d04.js.map"}