{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,S,E,SCKA,IAAI,EAA8B,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,EAAE,AAAE,GAGlC,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC;;;;;yBAKW,EAAE,KAAQ,OAAO,QAAQ,CAAC,IAAI,CAAG,OAAQ,EAAE;;;;yBAI3C,EAAE,KAAQ,OAAO,QAAQ,CAAC,IAAI,CAAG,cAAe,EAAE;;;;yBAIlD,EAAE,KAAQ,OAAO,QAAQ,CAAC,IAAI,CAAG,QAAS,EAAE;;;;yBAI5C,EAAE,KAAQ,OAAO,QAAQ,CAAC,IAAI,CAAG,SAAU,EAAE;;;;;;;;;;;;;;;;;;;YAmB1D,CAAC,CAEX,CAAC,CAGH,SAAS,gBAAgB,CAAC,mBAAoB,KAC1C,IAAM,EAAmB,SAAS,aAAa,CAAC,OAC1C,EAAkB,SAAS,gBAAgB,CAAC,4BAA4B,CAAC,EAAE,CAC3E,EAAU,SAAS,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAEnD,MAAM,+BAAgC,CAClC,OAAQ,MACR,QAAS,CACL,eAAgB,kBACpB,CACJ,GACC,IAAI,CAAC,AAAA,IACF,GAAI,CAAC,EAAS,EAAE,CACZ,MAAM,AAAI,MAAM,mBAEpB,OAAO,EAAS,IAAI,EACxB,GACC,IAAI,CAAC,AAAA,IACF,GAAI,EAAK,MAAM,CAAG,EACd,IAAK,IAAI,KAAQ,EAAM,CACnB,IAAI,EAAe,AAoGnC,SAA2B,CAAa,EACpC,IAAM,EAAO,IAAI,KAAK,GAChB,EAAO,EAAK,WAAW,GACvB,EAAQ,OAAO,EAAK,QAAQ,GAAK,GAAG,QAAQ,CAAC,EAAG,KAChD,EAAM,OAAO,EAAK,OAAO,IAAI,QAAQ,CAAC,EAAG,KAC/C,MAAO,CAAC,EAAE,EAAK,CAAC,EAAE,EAAM,CAAC,EAAE,EAAI,CAAC,AACpC,EA1GqD,EAAK,UAAU,EAC9C,EAAM,SAAS,aAAa,CAAC,OACnC,EAAI,YAAY,CAAC,QAAS,aAE1B,IAAM,EAAO,SAAS,aAAa,CAAC,OACpC,EAAK,YAAY,CAAC,QAAS,cAE3B,IAAM,EAAa,SAAS,aAAa,CAAC,OAC1C,EAAW,YAAY,CAAC,QAAS,qBAEjC,IAAM,EAAW,SAAS,aAAa,CAAC,OACxC,EAAS,YAAY,CAAC,QAAS,mBAE/B,IAAM,EAAY,SAAS,aAAa,CAAC,OACzC,EAAU,YAAY,CAAC,QAAS,uBAEhC,IAAM,EAAoB,SAAS,aAAa,CAAC,UACjD,EAAkB,YAAY,CAAC,QAAS,eACxC,EAAkB,SAAS,CAAG,cAE9B,IAAM,EAAgB,SAAS,aAAa,CAAC,OAC7C,EAAa,YAAY,CAAC,QAAS,cACnC,EAAa,SAAS,CAAG,CAAC;;;;gBAI1B,CAAC,CAED,EAAK,SAAS,CAAG,EACjB,EAAW,SAAS,CAAG,EAAK,WAAW,CACvC,EAAS,SAAS,CAAG,EAAK,SAAS,CACnC,EAAU,SAAS,CAAG,EAAK,UAAU,CAErC,EAAI,WAAW,CAAC,GAChB,EAAI,WAAW,CAAC,GAChB,EAAI,WAAW,CAAC,GAChB,EAAI,WAAW,CAAC,GAChB,EAAI,WAAW,CAAC,GAChB,EAAI,WAAW,CAAC,GAChB,EAAQ,WAAW,CAAC,GAEpB,EAAkB,gBAAgB,CAAC,QAAS,AAAC,IAMzC,QAAQ,GAAG,CAAC,iBADS,AA8DzC,SAA0B,CAAU,EAChC,GAAM,CAAC,EAAM,EAAO,EAAI,CAAG,EAAW,KAAK,CAAC,KAC5C,OAAO,IAAI,KAAK,CAAC,EAAE,EAAK,CAAC,EAAE,EAAM,CAAC,EAAE,EAAI,UAAU,CAAC,EAAE,WAAW,EACpE,EAjE0D,AAHvB,AADA,EAAE,MAAM,CACD,UAAU,CAGa,QAAQ,CAAC,EAAE,CAAC,SAAS,GAIlE,IAAM,EAAY,aAAa,OAAO,CAAC,cACnC,EACA,MAAM,sCAAuC,CACzC,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,CAAE,WAAY,CAAU,EACjD,GACC,IAAI,CAAC,AAAA,IACF,GAAI,CAAC,EAAS,EAAE,CACZ,MAAM,AAAI,MAAM,mBAEpB,OAAO,EAAS,IAAI,EACxB,GACC,IAAI,CAAC,AAAA,IACJ,EAAgB,SAAS,CAAC,MAAM,CAAC,UAC/B,WAAW,KACT,EAAgB,SAAS,CAAC,MAAM,CAAC,SACrC,EAAG,IACL,GACC,KAAK,CAAC,AAAA,IACH,QAAQ,KAAK,CAAC,mCAAoC,EACtD,GAEA,QAAQ,KAAK,CAAC,4CAEtB,EACJ,MAEA,EAAiB,WAAW,CAAG,oBAEnC,QAAQ,GAAG,CAAC,sBAAuB,EACvC,GACC,KAAK,CAAC,AAAA,IACH,EAAiB,SAAS,CAAG,oBAC7B,QAAQ,KAAK,CAAC,mCAAoC,EACtD,GAEA,IAAM,EAAa,SAAS,cAAc,CAAC,UACvC,GACA,EAAW,gBAAgB,CAAC,QAAS,AAAC,IAClC,EAAE,cAAc,GAChB,aAAa,KAAK,GAClB,eAAe,KAAK,GACpB,OAAO,QAAQ,CAAC,IAAI,CAAG,GAC3B,EAER,GAqBA,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO","sources":["<anon>","ui/src/pages/cours/index.ts"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirec605\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirec605\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $1BF7I = parcelRequire(\"1BF7I\");\nparcelRequire(\"lTDtW\");\nparcelRequire(\"5OQrz\");\nlet $bf8412e7020956f2$var$template = (0, $1BF7I.html)`${(context)=>{\n    return (0, $1BF7I.html)`<pf-page masterhead-no-icon masterhead-no-branding drawer-inline drawer-expanded drawer-static drawer-panel-left >\r\n    <div slot = \"drawer-panel\">\r\n      <pf-navigation>\r\n        <pf-navigation-list>\r\n            <pf-navigation-list-item\r\n              @mousedown=${()=>{\n        window.location.href = \"cours\";\n    }}>\r\n                Cours\r\n            </pf-navigation-list-item>\r\n            <pf-navigation-list-item\r\n              @mousedown=${()=>{\n        window.location.href = \"informations\";\n    }}>\r\n                Informations supplémentaires\r\n            </pf-navigation-list-item>\r\n            <pf-navigation-list-item\r\n              @mousedown=${()=>{\n        window.location.href = \"compte\";\n    }}>\r\n                Compte\r\n            </pf-navigation-list-item>\r\n            <pf-navigation-list-item\r\n              @mousedown=${()=>{\n        window.location.href = \"profile\";\n    }}>\r\n                Profile\r\n            </pf-navigation-list-item>\r\n        </pf-navigation-list>\r\n      </pf-navigation>\r\n    </div>\r\n    <div>\r\n      <pf-panel header scrollable>\r\n        <h1 slot = \"header\" >Cours</h1>\r\n        <div>\r\n\r\n        </div>\r\n      </pf-panel>\r\n    </div>\r\n    <pf-panel class=\"notification-box\">\r\n      <pf-alert success>\r\n        <slot>Vous venez de vous inscrire avec success !</slot>\r\n      </pf-alert>\r\n    </pf-panel>\r\n  </pf-page>`;\n}}`;\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const messageContainer = document.createElement(\"div\");\n    const notificationBox = document.querySelectorAll(\"pf-panel.notification-box\")[0];\n    const content = document.querySelectorAll(\"div\")[2];\n    fetch(\"http://localhost:3000/cours/\", {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    }).then((response)=>{\n        if (!response.ok) throw new Error(\"Erreur serveur.\");\n        return response.json();\n    }).then((data)=>{\n        if (data.length > 0) for (let item of data){\n            let formatedDate = $bf8412e7020956f2$var$formatDateFromISO(item.date_cours);\n            const raw = document.createElement(\"div\");\n            raw.setAttribute(\"class\", \"raw-infos\");\n            const date = document.createElement(\"div\");\n            date.setAttribute(\"class\", \"date-infos\");\n            const heureDebut = document.createElement(\"div\");\n            heureDebut.setAttribute(\"class\", \"heure-debut-infos\");\n            const heureFin = document.createElement(\"div\");\n            heureFin.setAttribute(\"class\", \"heure-fin-infos\");\n            const typeCours = document.createElement(\"div\");\n            typeCours.setAttribute(\"class\", \"type-de-cours-infos\");\n            const inscriptionButton = document.createElement(\"button\");\n            inscriptionButton.setAttribute(\"class\", \"inscription\");\n            inscriptionButton.innerHTML = \"Inscription\";\n            const svgContainer = document.createElement(\"div\");\n            svgContainer.setAttribute(\"class\", \"down-arrow\");\n            svgContainer.innerHTML = `\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" style=\"fill: rgba(0, 0, 0, 1); transform: ; msFilter:;\">\r\n                    <path d=\"M11.178 19.569a.998.998 0 0 0 1.644 0l9-13A.999.999 0 0 0 21 5H3a1.002 1.002 0 0 0-.822 1.569l9 13z\"></path>\r\n                </svg>\r\n                `;\n            date.innerHTML = formatedDate;\n            heureDebut.innerHTML = item.heure_debut;\n            heureFin.innerHTML = item.heure_fin;\n            typeCours.innerHTML = item.type_cours;\n            raw.appendChild(date);\n            raw.appendChild(heureDebut);\n            raw.appendChild(heureFin);\n            raw.appendChild(typeCours);\n            raw.appendChild(inscriptionButton);\n            raw.appendChild(svgContainer);\n            content.appendChild(raw);\n            inscriptionButton.addEventListener(\"click\", (e)=>{\n                const target = e.target;\n                const parent = target.parentNode;\n                // récupération de la date //\n                const formatedDate = $bf8412e7020956f2$var$convertToISODate(parent.children[0].innerHTML);\n                console.log(\"Date format\\xe9e:\", formatedDate);\n                // fetch pour récupérer l'id de l'utilisateur //\n                const firstName = localStorage.getItem(\"first_name\");\n                if (firstName) fetch(\"http://localhost:3000/inscriptions/\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        first_name: firstName\n                    })\n                }).then((response)=>{\n                    if (!response.ok) throw new Error(\"Erreur serveur.\");\n                    return response.json();\n                }).then((data)=>{\n                    notificationBox.classList.toggle(\"active\");\n                    setTimeout(()=>{\n                        notificationBox.classList.remove(\"active\");\n                    }, 2000);\n                }).catch((error)=>{\n                    console.error(\"Erreur lors de la requ\\xeate fetch:\", error);\n                });\n                else console.error(\"Aucun pr\\xe9nom trouv\\xe9 dans le localStorage.\");\n            });\n        }\n        else messageContainer.textContent = \"Cours non trouv\\xe9s\";\n        console.log(\"R\\xe9ponse du serveur:\", data);\n    }).catch((error)=>{\n        messageContainer.innerHTML = \"Cours non trouv\\xe9s\";\n        console.error(\"Erreur lors de la requ\\xeate fetch:\", error);\n    });\n    const logoutLink = document.getElementById(\"logout\");\n    if (logoutLink) logoutLink.addEventListener(\"click\", (e)=>{\n        e.preventDefault();\n        localStorage.clear();\n        sessionStorage.clear();\n        window.location.href = \"/\";\n    });\n});\nfunction $bf8412e7020956f2$var$formatDateFromISO(isoDateString) {\n    const date = new Date(isoDateString);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    return `${year}-${month}-${day}`;\n}\nfunction $bf8412e7020956f2$var$convertToISODate(dateString) {\n    const [year, month, day] = dateString.split(\"-\");\n    return new Date(`${year}-${month}-${day}T00:00:00Z`).toISOString();\n}\n(0, $1BF7I.render)($bf8412e7020956f2$var$template);\n\n\n//# sourceMappingURL=index.819c830c.js.map\n","import { render , html, ViewTemplate , ViewContext } from '@lithium-framework/core';\r\nimport '@lithium-framework/router-element';\r\nimport 'unofficial-pf-v5-wc';\r\n\r\n\r\nlet template: ViewTemplate<any> = html`${( context:ViewContext )=>{\r\n\r\n\r\n  return html`<pf-page masterhead-no-icon masterhead-no-branding drawer-inline drawer-expanded drawer-static drawer-panel-left >\r\n    <div slot = \"drawer-panel\">\r\n      <pf-navigation>\r\n        <pf-navigation-list>\r\n            <pf-navigation-list-item\r\n              @mousedown=${() => { window.location.href = \"cours\" }}>\r\n                Cours\r\n            </pf-navigation-list-item>\r\n            <pf-navigation-list-item\r\n              @mousedown=${() => { window.location.href = \"informations\" }}>\r\n                Informations supplémentaires\r\n            </pf-navigation-list-item>\r\n            <pf-navigation-list-item\r\n              @mousedown=${() => { window.location.href = \"compte\" }}>\r\n                Compte\r\n            </pf-navigation-list-item>\r\n            <pf-navigation-list-item\r\n              @mousedown=${() => { window.location.href = \"profile\" }}>\r\n                Profile\r\n            </pf-navigation-list-item>\r\n        </pf-navigation-list>\r\n      </pf-navigation>\r\n    </div>\r\n    <div>\r\n      <pf-panel header scrollable>\r\n        <h1 slot = \"header\" >Cours</h1>\r\n        <div>\r\n\r\n        </div>\r\n      </pf-panel>\r\n    </div>\r\n    <pf-panel class=\"notification-box\">\r\n      <pf-alert success>\r\n        <slot>Vous venez de vous inscrire avec success !</slot>\r\n      </pf-alert>\r\n    </pf-panel>\r\n  </pf-page>`;\r\n\r\n}}`\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const messageContainer = document.createElement('div');\r\n    const notificationBox = document.querySelectorAll('pf-panel.notification-box')[0]\r\n    const content = document.querySelectorAll('div')[2];\r\n\r\n    fetch('http://localhost:3000/cours/', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Erreur serveur.');\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(data => {\r\n        if (data.length > 0) {\r\n            for (let item of data) {\r\n                let formatedDate = formatDateFromISO(item.date_cours);\r\n                const raw = document.createElement('div');\r\n                raw.setAttribute('class', 'raw-infos');\r\n\r\n                const date = document.createElement('div');\r\n                date.setAttribute('class', 'date-infos');\r\n\r\n                const heureDebut = document.createElement('div');\r\n                heureDebut.setAttribute('class', 'heure-debut-infos');\r\n\r\n                const heureFin = document.createElement('div');\r\n                heureFin.setAttribute('class', 'heure-fin-infos');\r\n\r\n                const typeCours = document.createElement('div');\r\n                typeCours.setAttribute('class', 'type-de-cours-infos');\r\n\r\n                const inscriptionButton = document.createElement('button');\r\n                inscriptionButton.setAttribute('class', 'inscription');\r\n                inscriptionButton.innerHTML = 'Inscription';\r\n\r\n                const svgContainer  = document.createElement('div');\r\n                svgContainer.setAttribute('class', 'down-arrow');\r\n                svgContainer.innerHTML = `\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" style=\"fill: rgba(0, 0, 0, 1); transform: ; msFilter:;\">\r\n                    <path d=\"M11.178 19.569a.998.998 0 0 0 1.644 0l9-13A.999.999 0 0 0 21 5H3a1.002 1.002 0 0 0-.822 1.569l9 13z\"></path>\r\n                </svg>\r\n                `;\r\n\r\n                date.innerHTML = formatedDate;\r\n                heureDebut.innerHTML = item.heure_debut;\r\n                heureFin.innerHTML = item.heure_fin;\r\n                typeCours.innerHTML = item.type_cours;\r\n\r\n                raw.appendChild(date);\r\n                raw.appendChild(heureDebut);\r\n                raw.appendChild(heureFin);\r\n                raw.appendChild(typeCours);\r\n                raw.appendChild(inscriptionButton);\r\n                raw.appendChild(svgContainer);\r\n                content.appendChild(raw);\r\n\r\n                inscriptionButton.addEventListener('click', (e) => {\r\n                    const target = e.target as HTMLElement;\r\n                    const parent = target.parentNode as HTMLElement;\r\n                    \r\n                    // récupération de la date //\r\n                    const formatedDate = convertToISODate(parent.children[0].innerHTML);\r\n                    console.log('Date formatée:', formatedDate);\r\n\r\n                    // fetch pour récupérer l'id de l'utilisateur //\r\n                    const firstName = localStorage.getItem('first_name');\r\n                    if (firstName) {\r\n                        fetch('http://localhost:3000/inscriptions/', {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                            body: JSON.stringify({ first_name: firstName })\r\n                        })\r\n                        .then(response => {\r\n                            if (!response.ok) {\r\n                                throw new Error('Erreur serveur.');\r\n                            }\r\n                            return response.json();\r\n                        })\r\n                        .then(data => {\r\n                          notificationBox.classList.toggle('active');\r\n                            setTimeout(() => {\r\n                              notificationBox.classList.remove('active');\r\n                          }, 2000);\r\n                        })\r\n                        .catch(error => {\r\n                            console.error('Erreur lors de la requête fetch:', error);\r\n                        });\r\n                    } else {\r\n                        console.error('Aucun prénom trouvé dans le localStorage.');\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            messageContainer.textContent = 'Cours non trouvés';\r\n        }\r\n        console.log('Réponse du serveur:', data);\r\n    })\r\n    .catch(error => {\r\n        messageContainer.innerHTML = \"Cours non trouvés\";\r\n        console.error('Erreur lors de la requête fetch:', error);\r\n    });\r\n\r\n    const logoutLink = document.getElementById('logout');\r\n    if (logoutLink) {\r\n        logoutLink.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n            localStorage.clear();\r\n            sessionStorage.clear();\r\n            window.location.href = '/';\r\n        });\r\n    }\r\n});\r\n\r\nfunction formatDateFromISO(isoDateString) {\r\n    const date = new Date(isoDateString);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n}\r\n\r\nfunction convertToISODate(dateString) {\r\n    const [year, month, day] = dateString.split('-');\r\n    return new Date(`${year}-${month}-${day}T00:00:00Z`).toISOString();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nrender(template);"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$1BF7I","$bf8412e7020956f2$var$template","html","context","window","location","href","document","addEventListener","messageContainer","createElement","notificationBox","querySelectorAll","content","fetch","method","headers","then","response","ok","json","data","length","item","formatedDate","$bf8412e7020956f2$var$formatDateFromISO","isoDateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","date_cours","raw","setAttribute","heureDebut","heureFin","typeCours","inscriptionButton","innerHTML","svgContainer","heure_debut","heure_fin","type_cours","appendChild","e","console","log","$bf8412e7020956f2$var$convertToISODate","dateString","split","toISOString","parent","target","parentNode","children","firstName","localStorage","getItem","body","JSON","stringify","first_name","classList","toggle","setTimeout","remove","catch","error","textContent","logoutLink","getElementById","preventDefault","clear","sessionStorage","render"],"version":3,"file":"index.819c830c.js.map"}