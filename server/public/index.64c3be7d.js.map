{"mappings":"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","sources":["<anon>","ui/src/index.ts","node_modules/tslib/tslib.es6.js","../../PatternFlyLithium/unofficial-pf-v5-wc/src/models/index.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/src/models/PfWebComponent.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/module.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/index.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/decorators/index.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/decorators/attributeState.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/decorators/state.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/decorators/effect.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/models/effects.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/directives/index.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/directives/assyncAppend.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/directives/ref.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/directives/state.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/directives/style.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/directives/until.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/utils/index.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/utils/observable-object/index.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/utils/observable-object/models.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/utils/observable-array/index.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/webComponent/index.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/webComponent/model.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/controllers/bindEffect.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/controllers/bindState.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/controllers/bindConsumable.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/templateComponent/index.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/templateComponent/model.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/templateComponent/types.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/templateComponent/interfaces.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/functions/index.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/core/dist/src/functions/render.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/components/attributes.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/observation/observable.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/interfaces.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/platform.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/polyfills.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/observation/update-queue.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/observation/notifier.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/dom.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/binding/binding.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/templating/children.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/templating/html-directive.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/templating/markup.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/templating/node-observation.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/styles/css.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/binding/one-way.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/styles/css-directive.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/styles/element-styles.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/styles/css-binding-directive.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/components/fast-element.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/components/element-controller.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/utilities.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/components/fast-definitions.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/components/hydration.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/templating/template.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/binding/one-time.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/templating/html-binding-directive.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/templating/view.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/hydration/target-builder.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/templating/compiler.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/templating/repeat.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/observation/arrays.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/binding/normalize.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/templating/slotted.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@microsoft/fast-element/dist/esm/templating/when.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/state/dist/module.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/state/dist/src/index.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/state/dist/src/models/state.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/state/dist/src/createState.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/context/dist/module.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/context/dist/src/index.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/context/dist/src/create-storage.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/context/dist/src/models/storage.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/huid/dist/module.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/@lithium-framework/huid/dist/src/index.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/get-random-values/index.js","../../PatternFlyLithium/unofficial-pf-v5-wc/node_modules/global/window.js","../../PatternFlyLithium/unofficial-pf-v5-wc/src/controllers/handle-boolean-attribute.ts","../../PatternFlyLithium/unofficial-pf-v5-wc/src/controllers/cretate-on-slot-change-handler.ts"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirec605\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirec605\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol */ var $5c96a02c592fcff1$var$extendStatics = function(d, b) {\n    $5c96a02c592fcff1$var$extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return $5c96a02c592fcff1$var$extendStatics(d, b);\n};\nfunction $5c96a02c592fcff1$export$a8ba968b8961cb8a(d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    $5c96a02c592fcff1$var$extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar $5c96a02c592fcff1$export$18ce0697a983be9b = function() {\n    $5c96a02c592fcff1$export$18ce0697a983be9b = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return $5c96a02c592fcff1$export$18ce0697a983be9b.apply(this, arguments);\n};\nfunction $5c96a02c592fcff1$export$3c9a16f847548506(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") {\n        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction $5c96a02c592fcff1$export$29e00dfd3077644b(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction $5c96a02c592fcff1$export$d5ad3fd78186038f(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction $5c96a02c592fcff1$export$3a84e1ae4e97e9b0(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) {\n        if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n        return f;\n    }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for(var i = decorators.length - 1; i >= 0; i--){\n        var context = {};\n        for(var p in contextIn)context[p] = p === \"access\" ? {} : contextIn[p];\n        for(var p in contextIn.access)context.access[p] = contextIn.access[p];\n        context.addInitializer = function(f) {\n            if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n            extraInitializers.push(accept(f || null));\n        };\n        var result = (0, decorators[i])(kind === \"accessor\" ? {\n            get: descriptor.get,\n            set: descriptor.set\n        } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        } else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n}\nfunction $5c96a02c592fcff1$export$d831c04e792af3d(thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for(var i = 0; i < initializers.length; i++)value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    return useValue ? value : void 0;\n}\nfunction $5c96a02c592fcff1$export$6a2a36740a146cb8(x) {\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\n}\nfunction $5c96a02c592fcff1$export$d1a06452d3489bc7(f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", {\n        configurable: true,\n        value: prefix ? \"\".concat(prefix, \" \", name) : name\n    });\n}\nfunction $5c96a02c592fcff1$export$f1db080c865becb9(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction $5c96a02c592fcff1$export$1050f835b63b671e(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction $5c96a02c592fcff1$export$67ebef60e6f28a6(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nvar $5c96a02c592fcff1$export$45d3717a4c69092e = Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    };\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n};\nfunction $5c96a02c592fcff1$export$f33643c0debef087(m, o) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) $5c96a02c592fcff1$export$45d3717a4c69092e(o, m, p);\n}\nfunction $5c96a02c592fcff1$export$19a8beecd37a4c45(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction $5c96a02c592fcff1$export$8d051b38c9118094(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction $5c96a02c592fcff1$export$afc72e2116322959() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat($5c96a02c592fcff1$export$8d051b38c9118094(arguments[i]));\n    return ar;\n}\nfunction $5c96a02c592fcff1$export$6388937ca91ccae8() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\nfunction $5c96a02c592fcff1$export$1216008129fb82ed(to, from, pack) {\n    if (pack || arguments.length === 2) {\n        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}\nfunction $5c96a02c592fcff1$export$10c90e4f7922046c(v) {\n    return this instanceof $5c96a02c592fcff1$export$10c90e4f7922046c ? (this.v = v, this) : new $5c96a02c592fcff1$export$10c90e4f7922046c(v);\n}\nfunction $5c96a02c592fcff1$export$e427f37a30a4de9b(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function awaitReturn(f) {\n        return function(v) {\n            return Promise.resolve(v).then(f, reject);\n        };\n    }\n    function verb(n, f) {\n        if (g[n]) {\n            i[n] = function(v) {\n                return new Promise(function(a, b) {\n                    q.push([\n                        n,\n                        v,\n                        a,\n                        b\n                    ]) > 1 || resume(n, v);\n                });\n            };\n            if (f) i[n] = f(i[n]);\n        }\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $5c96a02c592fcff1$export$10c90e4f7922046c ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction $5c96a02c592fcff1$export$bbd80228419bb833(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: $5c96a02c592fcff1$export$10c90e4f7922046c(o[n](v)),\n                done: false\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction $5c96a02c592fcff1$export$e3b29a3d6162315f(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof $5c96a02c592fcff1$export$19a8beecd37a4c45 === \"function\" ? $5c96a02c592fcff1$export$19a8beecd37a4c45(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction $5c96a02c592fcff1$export$4fb47efe1390b86f(cooked, raw) {\n    if (Object.defineProperty) Object.defineProperty(cooked, \"raw\", {\n        value: raw\n    });\n    else cooked.raw = raw;\n    return cooked;\n}\nvar $5c96a02c592fcff1$var$__setModuleDefault = Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n};\nfunction $5c96a02c592fcff1$export$c21735bcef00d192(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) $5c96a02c592fcff1$export$45d3717a4c69092e(result, mod, k);\n    }\n    $5c96a02c592fcff1$var$__setModuleDefault(result, mod);\n    return result;\n}\nfunction $5c96a02c592fcff1$export$da59b14a69baef04(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction $5c96a02c592fcff1$export$d5dcaf168c640c35(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nfunction $5c96a02c592fcff1$export$d40a35129aaff81f(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\nfunction $5c96a02c592fcff1$export$81fdc39f203e4e04(state, receiver) {\n    if (receiver === null || typeof receiver !== \"object\" && typeof receiver !== \"function\") throw new TypeError(\"Cannot use 'in' operator on non-object\");\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\nfunction $5c96a02c592fcff1$export$88ac25d8e944e405(env, value, async) {\n    if (value !== null && value !== void 0) {\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n        var dispose, inner;\n        if (async) {\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n            dispose = value[Symbol.asyncDispose];\n        }\n        if (dispose === void 0) {\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n            dispose = value[Symbol.dispose];\n            if (async) inner = dispose;\n        }\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n        if (inner) dispose = function() {\n            try {\n                inner.call(this);\n            } catch (e) {\n                return Promise.reject(e);\n            }\n        };\n        env.stack.push({\n            value: value,\n            dispose: dispose,\n            async: async\n        });\n    } else if (async) env.stack.push({\n        async: true\n    });\n    return value;\n}\nvar $5c96a02c592fcff1$var$_SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function(error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nfunction $5c96a02c592fcff1$export$8f076105dc360e92(env) {\n    function fail(e) {\n        env.error = env.hasError ? new $5c96a02c592fcff1$var$_SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n        env.hasError = true;\n    }\n    function next() {\n        while(env.stack.length){\n            var rec = env.stack.pop();\n            try {\n                var result = rec.dispose && rec.dispose.call(rec.value);\n                if (rec.async) return Promise.resolve(result).then(next, function(e) {\n                    fail(e);\n                    return next();\n                });\n            } catch (e) {\n                fail(e);\n            }\n        }\n        if (env.hasError) throw env.error;\n    }\n    return next();\n}\nvar $5c96a02c592fcff1$export$2e2bcd8739ae039 = {\n    __extends: $5c96a02c592fcff1$export$a8ba968b8961cb8a,\n    __assign: $5c96a02c592fcff1$export$18ce0697a983be9b,\n    __rest: $5c96a02c592fcff1$export$3c9a16f847548506,\n    __decorate: $5c96a02c592fcff1$export$29e00dfd3077644b,\n    __param: $5c96a02c592fcff1$export$d5ad3fd78186038f,\n    __metadata: $5c96a02c592fcff1$export$f1db080c865becb9,\n    __awaiter: $5c96a02c592fcff1$export$1050f835b63b671e,\n    __generator: $5c96a02c592fcff1$export$67ebef60e6f28a6,\n    __createBinding: $5c96a02c592fcff1$export$45d3717a4c69092e,\n    __exportStar: $5c96a02c592fcff1$export$f33643c0debef087,\n    __values: $5c96a02c592fcff1$export$19a8beecd37a4c45,\n    __read: $5c96a02c592fcff1$export$8d051b38c9118094,\n    __spread: $5c96a02c592fcff1$export$afc72e2116322959,\n    __spreadArrays: $5c96a02c592fcff1$export$6388937ca91ccae8,\n    __spreadArray: $5c96a02c592fcff1$export$1216008129fb82ed,\n    __await: $5c96a02c592fcff1$export$10c90e4f7922046c,\n    __asyncGenerator: $5c96a02c592fcff1$export$e427f37a30a4de9b,\n    __asyncDelegator: $5c96a02c592fcff1$export$bbd80228419bb833,\n    __asyncValues: $5c96a02c592fcff1$export$e3b29a3d6162315f,\n    __makeTemplateObject: $5c96a02c592fcff1$export$4fb47efe1390b86f,\n    __importStar: $5c96a02c592fcff1$export$c21735bcef00d192,\n    __importDefault: $5c96a02c592fcff1$export$da59b14a69baef04,\n    __classPrivateFieldGet: $5c96a02c592fcff1$export$d5dcaf168c640c35,\n    __classPrivateFieldSet: $5c96a02c592fcff1$export$d40a35129aaff81f,\n    __classPrivateFieldIn: $5c96a02c592fcff1$export$81fdc39f203e4e04,\n    __addDisposableResource: $5c96a02c592fcff1$export$88ac25d8e944e405,\n    __disposeResources: $5c96a02c592fcff1$export$8f076105dc360e92\n};\n\n\n\nvar $1BF7I = parcelRequire(\"1BF7I\");\nlet $553e78d6498b7d22$var$kernelMode;\nconst $553e78d6498b7d22$var$kernelAttr = \"fast-kernel\";\ntry {\n    if (document.currentScript) $553e78d6498b7d22$var$kernelMode = document.currentScript.getAttribute($553e78d6498b7d22$var$kernelAttr);\n    else {\n        const scripts = document.getElementsByTagName(\"script\");\n        const currentScript = scripts[scripts.length - 1];\n        $553e78d6498b7d22$var$kernelMode = currentScript.getAttribute($553e78d6498b7d22$var$kernelAttr);\n    }\n} catch (e) {\n    $553e78d6498b7d22$var$kernelMode = \"isolate\";\n}\nlet $553e78d6498b7d22$export$f2080b9a9a32b8d3;\nswitch($553e78d6498b7d22$var$kernelMode){\n    case \"share\":\n        $553e78d6498b7d22$export$f2080b9a9a32b8d3 = Object.freeze({\n            updateQueue: 1,\n            observable: 2,\n            contextEvent: 3,\n            elementRegistry: 4\n        });\n        break;\n    case \"share-v2\":\n        $553e78d6498b7d22$export$f2080b9a9a32b8d3 = Object.freeze({\n            updateQueue: 1.2,\n            observable: 2.2,\n            contextEvent: 3.2,\n            elementRegistry: 4.2\n        });\n        break;\n    default:\n        // fully isolate the kernel from all other FAST instances\n        const postfix = `-${Math.random().toString(36).substring(2, 8)}`;\n        $553e78d6498b7d22$export$f2080b9a9a32b8d3 = Object.freeze({\n            updateQueue: `1.2${postfix}`,\n            observable: `2.2${postfix}`,\n            contextEvent: `3.2${postfix}`,\n            elementRegistry: `4.2${postfix}`\n        });\n        break;\n}\nconst $553e78d6498b7d22$export$f6e2535fb5126e54 = (object)=>typeof object === \"function\";\nconst $553e78d6498b7d22$export$844ec244b1367d54 = (object)=>typeof object === \"string\";\nconst $553e78d6498b7d22$export$8793edee2d425525 = ()=>void 0;\n\n\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */ (function ensureGlobalThis() {\n    if (typeof globalThis !== \"undefined\") // We're running in a modern environment.\n    return;\n    // @ts-ignore\n    if (typeof $parcel$global !== \"undefined\") // We're running in NodeJS\n    // @ts-ignore\n    $parcel$global.globalThis = $parcel$global;\n    else if (typeof self !== \"undefined\") self.globalThis = self;\n    else if (typeof window !== \"undefined\") // We're running in the browser's main thread.\n    window.globalThis = window;\n    else {\n        // Hopefully we never get here...\n        // Not all environments allow eval and Function. Use only as a last resort:\n        // eslint-disable-next-line no-new-func\n        const result = new Function(\"return this\")();\n        result.globalThis = result;\n    }\n})();\n\n\n// ensure FAST global - duplicated debug.ts\nconst $e1d30cf6f8cb997c$var$propConfig = {\n    configurable: false,\n    enumerable: false,\n    writable: false\n};\nif (globalThis.FAST === void 0) Reflect.defineProperty(globalThis, \"FAST\", Object.assign({\n    value: Object.create(null)\n}, $e1d30cf6f8cb997c$var$propConfig));\nconst $e1d30cf6f8cb997c$export$360e186c37756536 = globalThis.FAST;\nif ($e1d30cf6f8cb997c$export$360e186c37756536.getById === void 0) {\n    const storage = Object.create(null);\n    Reflect.defineProperty($e1d30cf6f8cb997c$export$360e186c37756536, \"getById\", Object.assign({\n        value (id, initialize) {\n            let found = storage[id];\n            if (found === void 0) found = initialize ? storage[id] = initialize() : null;\n            return found;\n        }\n    }, $e1d30cf6f8cb997c$var$propConfig));\n}\nif ($e1d30cf6f8cb997c$export$360e186c37756536.error === void 0) Object.assign($e1d30cf6f8cb997c$export$360e186c37756536, {\n    warn () {},\n    error (code) {\n        return new Error(`Error ${code}`);\n    },\n    addMessages () {}\n});\nconst $e1d30cf6f8cb997c$export$d3ae4127996a91af = Object.freeze([]);\nfunction $e1d30cf6f8cb997c$export$a31396a98752ddb5() {\n    const typeToDefinition = new Map();\n    return Object.freeze({\n        register (definition) {\n            if (typeToDefinition.has(definition.type)) return false;\n            typeToDefinition.set(definition.type, definition);\n            return true;\n        },\n        getByType (key) {\n            return typeToDefinition.get(key);\n        },\n        getForInstance (object) {\n            if (object === null || object === void 0) return void 0;\n            return typeToDefinition.get(object.constructor);\n        }\n    });\n}\nfunction $e1d30cf6f8cb997c$export$df500aa24c905daf() {\n    const metadataLookup = new WeakMap();\n    return function(target) {\n        let metadata = metadataLookup.get(target);\n        if (metadata === void 0) {\n            let currentTarget = Reflect.getPrototypeOf(target);\n            while(metadata === void 0 && currentTarget !== null){\n                metadata = metadataLookup.get(currentTarget);\n                currentTarget = Reflect.getPrototypeOf(currentTarget);\n            }\n            metadata = metadata === void 0 ? [] : metadata.slice(0);\n            metadataLookup.set(target, metadata);\n        }\n        return metadata;\n    };\n}\nfunction $e1d30cf6f8cb997c$export$997c5e5ecebc1b61(type) {\n    type.prototype.toJSON = (0, $553e78d6498b7d22$export$8793edee2d425525);\n}\n\n\n\n\nconst $73a7523c4c03f465$export$26ef613a0934aa5f = (0, $e1d30cf6f8cb997c$export$360e186c37756536).getById((0, $553e78d6498b7d22$export$f2080b9a9a32b8d3).updateQueue, ()=>{\n    const tasks = [];\n    const pendingErrors = [];\n    const rAF = globalThis.requestAnimationFrame;\n    let updateAsync = true;\n    function throwFirstError() {\n        if (pendingErrors.length) throw pendingErrors.shift();\n    }\n    function tryRunTask(task) {\n        try {\n            task.call();\n        } catch (error) {\n            if (updateAsync) {\n                pendingErrors.push(error);\n                setTimeout(throwFirstError, 0);\n            } else {\n                tasks.length = 0;\n                throw error;\n            }\n        }\n    }\n    function process() {\n        const capacity = 1024;\n        let index = 0;\n        while(index < tasks.length){\n            tryRunTask(tasks[index]);\n            index++;\n            // Prevent leaking memory for long chains of recursive calls to `enqueue`.\n            // If we call `enqueue` within a task scheduled by `enqueue`, the queue will\n            // grow, but to avoid an O(n) walk for every task we execute, we don't\n            // shift tasks off the queue after they have been executed.\n            // Instead, we periodically shift 1024 tasks off the queue.\n            if (index > capacity) {\n                // Manually shift all values starting at the index back to the\n                // beginning of the queue.\n                for(let scan = 0, newLength = tasks.length - index; scan < newLength; scan++)tasks[scan] = tasks[scan + index];\n                tasks.length -= index;\n                index = 0;\n            }\n        }\n        tasks.length = 0;\n    }\n    function enqueue(callable) {\n        tasks.push(callable);\n        if (tasks.length < 2) updateAsync ? rAF(process) : process();\n    }\n    return Object.freeze({\n        enqueue: enqueue,\n        next: ()=>new Promise(enqueue),\n        process: process,\n        setMode: (isAsync)=>updateAsync = isAsync\n    });\n});\n\n\n/**\n * An implementation of {@link Notifier} that efficiently keeps track of\n * subscribers interested in a specific change notification on an\n * observable subject.\n *\n * @remarks\n * This set is optimized for the most common scenario of 1 or 2 subscribers.\n * With this in mind, it can store a subscriber in an internal field, allowing it to avoid Array#push operations.\n * If the set ever exceeds two subscribers, it upgrades to an array automatically.\n * @public\n */ class $0f21edcca411263f$export$f35d03caf9a2ecdf {\n    /**\n     * Creates an instance of SubscriberSet for the specified subject.\n     * @param subject - The subject that subscribers will receive notifications from.\n     * @param initialSubscriber - An initial subscriber to changes.\n     */ constructor(subject, initialSubscriber){\n        this.sub1 = void 0;\n        this.sub2 = void 0;\n        this.spillover = void 0;\n        this.subject = subject;\n        this.sub1 = initialSubscriber;\n    }\n    /**\n     * Checks whether the provided subscriber has been added to this set.\n     * @param subscriber - The subscriber to test for inclusion in this set.\n     */ has(subscriber) {\n        return this.spillover === void 0 ? this.sub1 === subscriber || this.sub2 === subscriber : this.spillover.indexOf(subscriber) !== -1;\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     */ subscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.has(subscriber)) return;\n            if (this.sub1 === void 0) {\n                this.sub1 = subscriber;\n                return;\n            }\n            if (this.sub2 === void 0) {\n                this.sub2 = subscriber;\n                return;\n            }\n            this.spillover = [\n                this.sub1,\n                this.sub2,\n                subscriber\n            ];\n            this.sub1 = void 0;\n            this.sub2 = void 0;\n        } else {\n            const index = spillover.indexOf(subscriber);\n            if (index === -1) spillover.push(subscriber);\n        }\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     */ unsubscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.sub1 === subscriber) this.sub1 = void 0;\n            else if (this.sub2 === subscriber) this.sub2 = void 0;\n        } else {\n            const index = spillover.indexOf(subscriber);\n            if (index !== -1) spillover.splice(index, 1);\n        }\n    }\n    /**\n     * Notifies all subscribers.\n     * @param args - Data passed along to subscribers during notification.\n     */ notify(args) {\n        const spillover = this.spillover;\n        const subject = this.subject;\n        if (spillover === void 0) {\n            const sub1 = this.sub1;\n            const sub2 = this.sub2;\n            if (sub1 !== void 0) sub1.handleChange(subject, args);\n            if (sub2 !== void 0) sub2.handleChange(subject, args);\n        } else for(let i = 0, ii = spillover.length; i < ii; ++i)spillover[i].handleChange(subject, args);\n    }\n}\nclass $0f21edcca411263f$export$af6e57f0938b1389 {\n    /**\n     * Creates an instance of PropertyChangeNotifier for the specified subject.\n     * @param subject - The object that subscribers will receive notifications for.\n     */ constructor(subject){\n        this.subscribers = {};\n        this.subjectSubscribers = null;\n        this.subject = subject;\n    }\n    /**\n     * Notifies all subscribers, based on the specified property.\n     * @param propertyName - The property name, passed along to subscribers during notification.\n     */ notify(propertyName) {\n        var _a, _b;\n        (_a = this.subscribers[propertyName]) === null || _a === void 0 || _a.notify(propertyName);\n        (_b = this.subjectSubscribers) === null || _b === void 0 || _b.notify(propertyName);\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     * @param propertyToWatch - The name of the property that the subscriber is interested in watching for changes.\n     */ subscribe(subscriber, propertyToWatch) {\n        var _a, _b;\n        let subscribers;\n        if (propertyToWatch) subscribers = (_a = this.subscribers[propertyToWatch]) !== null && _a !== void 0 ? _a : this.subscribers[propertyToWatch] = new $0f21edcca411263f$export$f35d03caf9a2ecdf(this.subject);\n        else subscribers = (_b = this.subjectSubscribers) !== null && _b !== void 0 ? _b : this.subjectSubscribers = new $0f21edcca411263f$export$f35d03caf9a2ecdf(this.subject);\n        subscribers.subscribe(subscriber);\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     * @param propertyToUnwatch - The name of the property that the subscriber is no longer interested in watching.\n     */ unsubscribe(subscriber, propertyToUnwatch) {\n        var _a, _b;\n        if (propertyToUnwatch) (_a = this.subscribers[propertyToUnwatch]) === null || _a === void 0 || _a.unsubscribe(subscriber);\n        else (_b = this.subjectSubscribers) === null || _b === void 0 || _b.unsubscribe(subscriber);\n    }\n}\n\n\nconst $536bd8e250404810$export$9a9eae009eb8780f = Object.freeze({\n    /**\n     * The source to controller lifetime relationship is unknown.\n     */ unknown: void 0,\n    /**\n     * The source and controller lifetimes are coupled to one another.\n     * They can/will be GC'd together.\n     */ coupled: 1\n});\nconst $536bd8e250404810$export$77cea355fa80b5f4 = (0, $e1d30cf6f8cb997c$export$360e186c37756536).getById((0, $553e78d6498b7d22$export$f2080b9a9a32b8d3).observable, ()=>{\n    const queueUpdate = (0, $73a7523c4c03f465$export$26ef613a0934aa5f).enqueue;\n    const volatileRegex = /(:|&&|\\|\\||if|\\?\\.)/;\n    const notifierLookup = new WeakMap();\n    let watcher = void 0;\n    let createArrayObserver = (array)=>{\n        throw (0, $e1d30cf6f8cb997c$export$360e186c37756536).error(1101 /* Message.needsArrayObservation */ );\n    };\n    function getNotifier(source) {\n        var _a;\n        let found = (_a = source.$fastController) !== null && _a !== void 0 ? _a : notifierLookup.get(source);\n        if (found === void 0) Array.isArray(source) ? found = createArrayObserver(source) : notifierLookup.set(source, found = new (0, $0f21edcca411263f$export$af6e57f0938b1389)(source));\n        return found;\n    }\n    const getAccessors = (0, $e1d30cf6f8cb997c$export$df500aa24c905daf)();\n    class DefaultObservableAccessor {\n        constructor(name){\n            this.name = name;\n            this.field = `_${name}`;\n            this.callback = `${name}Changed`;\n        }\n        getValue(source) {\n            if (watcher !== void 0) watcher.watch(source, this.name);\n            return source[this.field];\n        }\n        setValue(source, newValue) {\n            const field = this.field;\n            const oldValue = source[field];\n            if (oldValue !== newValue) {\n                source[field] = newValue;\n                const callback = source[this.callback];\n                if ((0, $553e78d6498b7d22$export$f6e2535fb5126e54)(callback)) callback.call(source, oldValue, newValue);\n                getNotifier(source).notify(this.name);\n            }\n        }\n    }\n    class ExpressionNotifierImplementation extends (0, $0f21edcca411263f$export$f35d03caf9a2ecdf) {\n        constructor(expression, initialSubscriber, isVolatileBinding = false){\n            super(expression, initialSubscriber);\n            this.expression = expression;\n            this.isVolatileBinding = isVolatileBinding;\n            this.needsRefresh = true;\n            this.needsQueue = true;\n            this.isAsync = true;\n            this.first = this;\n            this.last = null;\n            this.propertySource = void 0;\n            this.propertyName = void 0;\n            this.notifier = void 0;\n            this.next = void 0;\n        }\n        setMode(isAsync) {\n            this.isAsync = this.needsQueue = isAsync;\n        }\n        bind(controller) {\n            this.controller = controller;\n            const value = this.observe(controller.source, controller.context);\n            if (!controller.isBound && this.requiresUnbind(controller)) controller.onUnbind(this);\n            return value;\n        }\n        requiresUnbind(controller) {\n            return controller.sourceLifetime !== $536bd8e250404810$export$9a9eae009eb8780f.coupled || this.first !== this.last || this.first.propertySource !== controller.source;\n        }\n        unbind(controller) {\n            this.dispose();\n        }\n        observe(source, context) {\n            if (this.needsRefresh && this.last !== null) this.dispose();\n            const previousWatcher = watcher;\n            watcher = this.needsRefresh ? this : void 0;\n            this.needsRefresh = this.isVolatileBinding;\n            let result;\n            try {\n                result = this.expression(source, context);\n            } finally{\n                watcher = previousWatcher;\n            }\n            return result;\n        }\n        // backwards compat with v1 kernel\n        disconnect() {\n            this.dispose();\n        }\n        dispose() {\n            if (this.last !== null) {\n                let current = this.first;\n                while(current !== void 0){\n                    current.notifier.unsubscribe(this, current.propertyName);\n                    current = current.next;\n                }\n                this.last = null;\n                this.needsRefresh = this.needsQueue = this.isAsync;\n            }\n        }\n        watch(propertySource, propertyName) {\n            const prev = this.last;\n            const notifier = getNotifier(propertySource);\n            const current = prev === null ? this.first : {};\n            current.propertySource = propertySource;\n            current.propertyName = propertyName;\n            current.notifier = notifier;\n            notifier.subscribe(this, propertyName);\n            if (prev !== null) {\n                if (!this.needsRefresh) {\n                    // Declaring the variable prior to assignment below circumvents\n                    // a bug in Angular's optimization process causing infinite recursion\n                    // of this watch() method. Details https://github.com/microsoft/fast/issues/4969\n                    let prevValue;\n                    watcher = void 0;\n                    /* eslint-disable-next-line */ prevValue = prev.propertySource[prev.propertyName];\n                    /* eslint-disable-next-line */ watcher = this;\n                    if (propertySource === prevValue) this.needsRefresh = true;\n                }\n                prev.next = current;\n            }\n            this.last = current;\n        }\n        handleChange() {\n            if (this.needsQueue) {\n                this.needsQueue = false;\n                queueUpdate(this);\n            } else if (!this.isAsync) this.call();\n        }\n        call() {\n            if (this.last !== null) {\n                this.needsQueue = this.isAsync;\n                this.notify(this);\n            }\n        }\n        *records() {\n            let next = this.first;\n            while(next !== void 0){\n                yield next;\n                next = next.next;\n            }\n        }\n    }\n    (0, $e1d30cf6f8cb997c$export$997c5e5ecebc1b61)(ExpressionNotifierImplementation);\n    return Object.freeze({\n        /**\n         * @internal\n         * @param factory - The factory used to create array observers.\n         */ setArrayObserverFactory (factory) {\n            createArrayObserver = factory;\n        },\n        getNotifier: /**\n         * Gets a notifier for an object or Array.\n         * @param source - The object or Array to get the notifier for.\n         */ getNotifier,\n        /**\n         * Records a property change for a source object.\n         * @param source - The object to record the change against.\n         * @param propertyName - The property to track as changed.\n         */ track (source, propertyName) {\n            watcher && watcher.watch(source, propertyName);\n        },\n        /**\n         * Notifies watchers that the currently executing property getter or function is volatile\n         * with respect to its observable dependencies.\n         */ trackVolatile () {\n            watcher && (watcher.needsRefresh = true);\n        },\n        /**\n         * Notifies subscribers of a source object of changes.\n         * @param source - the object to notify of changes.\n         * @param args - The change args to pass to subscribers.\n         */ notify (source, args) {\n            /* eslint-disable-next-line @typescript-eslint/no-use-before-define */ getNotifier(source).notify(args);\n        },\n        /**\n         * Defines an observable property on an object or prototype.\n         * @param target - The target object to define the observable on.\n         * @param nameOrAccessor - The name of the property to define as observable;\n         * or a custom accessor that specifies the property name and accessor implementation.\n         */ defineProperty (target, nameOrAccessor) {\n            if ((0, $553e78d6498b7d22$export$844ec244b1367d54)(nameOrAccessor)) nameOrAccessor = new DefaultObservableAccessor(nameOrAccessor);\n            getAccessors(target).push(nameOrAccessor);\n            Reflect.defineProperty(target, nameOrAccessor.name, {\n                enumerable: true,\n                get () {\n                    return nameOrAccessor.getValue(this);\n                },\n                set (newValue) {\n                    nameOrAccessor.setValue(this, newValue);\n                }\n            });\n        },\n        getAccessors: /**\n         * Finds all the observable accessors defined on the target,\n         * including its prototype chain.\n         * @param target - The target object to search for accessor on.\n         */ getAccessors,\n        /**\n         * Creates a {@link ExpressionNotifier} that can watch the\n         * provided {@link Expression} for changes.\n         * @param expression - The binding to observe.\n         * @param initialSubscriber - An initial subscriber to changes in the binding value.\n         * @param isVolatileBinding - Indicates whether the binding's dependency list must be re-evaluated on every value evaluation.\n         */ binding (expression, initialSubscriber, isVolatileBinding = this.isVolatileBinding(expression)) {\n            return new ExpressionNotifierImplementation(expression, initialSubscriber, isVolatileBinding);\n        },\n        /**\n         * Determines whether a binding expression is volatile and needs to have its dependency list re-evaluated\n         * on every evaluation of the value.\n         * @param expression - The binding to inspect.\n         */ isVolatileBinding (expression) {\n            return volatileRegex.test(expression.toString());\n        }\n    });\n});\nfunction $536bd8e250404810$export$5ab46cbf6120b33a(target, nameOrAccessor) {\n    $536bd8e250404810$export$77cea355fa80b5f4.defineProperty(target, nameOrAccessor);\n}\nfunction $536bd8e250404810$export$e338fff42eed603a(target, name, descriptor) {\n    return Object.assign({}, descriptor, {\n        get () {\n            $536bd8e250404810$export$77cea355fa80b5f4.trackVolatile();\n            return descriptor.get.apply(this);\n        }\n    });\n}\nconst $536bd8e250404810$var$contextEvent = (0, $e1d30cf6f8cb997c$export$360e186c37756536).getById((0, $553e78d6498b7d22$export$f2080b9a9a32b8d3).contextEvent, ()=>{\n    let current = null;\n    return {\n        get () {\n            return current;\n        },\n        set (event) {\n            current = event;\n        }\n    };\n});\nconst $536bd8e250404810$export$f7c638676c8af91d = Object.freeze({\n    /**\n     * A default execution context.\n     */ default: {\n        index: 0,\n        length: 0,\n        get event () {\n            return $536bd8e250404810$export$f7c638676c8af91d.getEvent();\n        },\n        eventDetail () {\n            return this.event.detail;\n        },\n        eventTarget () {\n            return this.event.target;\n        }\n    },\n    /**\n     * Gets the current event.\n     * @returns An event object.\n     */ getEvent () {\n        return $536bd8e250404810$var$contextEvent.get();\n    },\n    /**\n     * Sets the current event.\n     * @param event - An event object.\n     */ setEvent (event) {\n        $536bd8e250404810$var$contextEvent.set(event);\n    }\n});\n\n\n\n\n\n\nconst $71bae6719b9971f3$export$b0076a1a9e24da9 = Object.freeze({\n    /**\n     * Not aspected.\n     */ none: 0,\n    /**\n     * An attribute.\n     */ attribute: 1,\n    /**\n     * A boolean attribute.\n     */ booleanAttribute: 2,\n    /**\n     * A property.\n     */ property: 3,\n    /**\n     * Content\n     */ content: 4,\n    /**\n     * A token list.\n     */ tokenList: 5,\n    /**\n     * An event.\n     */ event: 6\n});\nconst $71bae6719b9971f3$var$createHTML = (html)=>html;\nconst $71bae6719b9971f3$var$fastTrustedType = globalThis.trustedTypes ? globalThis.trustedTypes.createPolicy(\"fast-html\", {\n    createHTML: $71bae6719b9971f3$var$createHTML\n}) : {\n    createHTML: $71bae6719b9971f3$var$createHTML\n};\nlet $71bae6719b9971f3$var$defaultPolicy = Object.freeze({\n    createHTML (value) {\n        return $71bae6719b9971f3$var$fastTrustedType.createHTML(value);\n    },\n    protect (tagName, aspect, aspectName, sink) {\n        return sink;\n    }\n});\nconst $71bae6719b9971f3$var$fastPolicy = $71bae6719b9971f3$var$defaultPolicy;\nconst $71bae6719b9971f3$export$cb0933279c36a66b = Object.freeze({\n    /**\n     * Gets the dom policy used by the templating system.\n     */ get policy () {\n        return $71bae6719b9971f3$var$defaultPolicy;\n    },\n    /**\n     * Sets the dom policy used by the templating system.\n     * @param policy - The policy to set.\n     * @remarks\n     * This API can only be called once, for security reasons. It should be\n     * called by the application developer at the start of their program.\n     */ setPolicy (value) {\n        if ($71bae6719b9971f3$var$defaultPolicy !== $71bae6719b9971f3$var$fastPolicy) throw (0, $e1d30cf6f8cb997c$export$360e186c37756536).error(1201 /* Message.onlySetDOMPolicyOnce */ );\n        $71bae6719b9971f3$var$defaultPolicy = value;\n    },\n    /**\n     * Sets an attribute value on an element.\n     * @param element - The element to set the attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is `null` or `undefined`, the attribute is removed, otherwise\n     * it is set to the provided value using the standard `setAttribute` API.\n     */ setAttribute (element, attributeName, value) {\n        value === null || value === undefined ? element.removeAttribute(attributeName) : element.setAttribute(attributeName, value);\n    },\n    /**\n     * Sets a boolean attribute value.\n     * @param element - The element to set the boolean attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is true, the attribute is added; otherwise it is removed.\n     */ setBooleanAttribute (element, attributeName, value) {\n        value ? element.setAttribute(attributeName, \"\") : element.removeAttribute(attributeName);\n    }\n});\n\n\n\nconst $b70b8231869890d4$var$booleanMode = \"boolean\";\nconst $b70b8231869890d4$var$reflectMode = \"reflect\";\nconst $b70b8231869890d4$export$8b80b92e472f3c0a = Object.freeze({\n    /**\n     * Locates all attribute configurations associated with a type.\n     */ locate: (0, $e1d30cf6f8cb997c$export$df500aa24c905daf)()\n});\nconst $b70b8231869890d4$export$2aee1c8d7bab360b = {\n    toView (value) {\n        return value ? \"true\" : \"false\";\n    },\n    fromView (value) {\n        return value === null || value === void 0 || value === \"false\" || value === false || value === 0 ? false : true;\n    }\n};\nconst $b70b8231869890d4$export$c195e92e334d543a = {\n    toView (value) {\n        return typeof value === \"boolean\" ? value.toString() : \"\";\n    },\n    fromView (value) {\n        return [\n            null,\n            undefined,\n            void 0\n        ].includes(value) ? null : $b70b8231869890d4$export$2aee1c8d7bab360b.fromView(value);\n    }\n};\nfunction $b70b8231869890d4$var$toNumber(value) {\n    if (value === null || value === undefined) return null;\n    const number = value * 1;\n    return isNaN(number) ? null : number;\n}\nconst $b70b8231869890d4$export$b8946e3c7da4292e = {\n    toView (value) {\n        const output = $b70b8231869890d4$var$toNumber(value);\n        return output ? output.toString() : output;\n    },\n    fromView: $b70b8231869890d4$var$toNumber\n};\nclass $b70b8231869890d4$export$722ab06c0d846d74 {\n    /**\n     * Creates an instance of AttributeDefinition.\n     * @param Owner - The class constructor that owns this attribute.\n     * @param name - The name of the property associated with the attribute.\n     * @param attribute - The name of the attribute in HTML.\n     * @param mode - The {@link AttributeMode} that describes the behavior of this attribute.\n     * @param converter - A {@link ValueConverter} that integrates with the property getter/setter\n     * to convert values to and from a DOM string.\n     */ constructor(Owner, name, attribute = name.toLowerCase(), mode = $b70b8231869890d4$var$reflectMode, converter){\n        this.guards = new Set();\n        this.Owner = Owner;\n        this.name = name;\n        this.attribute = attribute;\n        this.mode = mode;\n        this.converter = converter;\n        this.fieldName = `_${name}`;\n        this.callbackName = `${name}Changed`;\n        this.hasCallback = this.callbackName in Owner.prototype;\n        if (mode === $b70b8231869890d4$var$booleanMode && converter === void 0) this.converter = $b70b8231869890d4$export$2aee1c8d7bab360b;\n    }\n    /**\n     * Sets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     * @param value - The value to set the attribute/property to.\n     */ setValue(source, newValue) {\n        const oldValue = source[this.fieldName];\n        const converter = this.converter;\n        if (converter !== void 0) newValue = converter.fromView(newValue);\n        if (oldValue !== newValue) {\n            source[this.fieldName] = newValue;\n            this.tryReflectToAttribute(source);\n            if (this.hasCallback) source[this.callbackName](oldValue, newValue);\n            source.$fastController.notify(this.name);\n        }\n    }\n    /**\n     * Gets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     */ getValue(source) {\n        (0, $536bd8e250404810$export$77cea355fa80b5f4).track(source, this.name);\n        return source[this.fieldName];\n    }\n    /** @internal */ onAttributeChangedCallback(element, value) {\n        if (this.guards.has(element)) return;\n        this.guards.add(element);\n        this.setValue(element, value);\n        this.guards.delete(element);\n    }\n    tryReflectToAttribute(element) {\n        const mode = this.mode;\n        const guards = this.guards;\n        if (guards.has(element) || mode === \"fromView\") return;\n        (0, $73a7523c4c03f465$export$26ef613a0934aa5f).enqueue(()=>{\n            guards.add(element);\n            const latestValue = element[this.fieldName];\n            switch(mode){\n                case $b70b8231869890d4$var$reflectMode:\n                    const converter = this.converter;\n                    (0, $71bae6719b9971f3$export$cb0933279c36a66b).setAttribute(element, this.attribute, converter !== void 0 ? converter.toView(latestValue) : latestValue);\n                    break;\n                case $b70b8231869890d4$var$booleanMode:\n                    (0, $71bae6719b9971f3$export$cb0933279c36a66b).setBooleanAttribute(element, this.attribute, latestValue);\n                    break;\n            }\n            guards.delete(element);\n        });\n    }\n    /**\n     * Collects all attribute definitions associated with the owner.\n     * @param Owner - The class constructor to collect attribute for.\n     * @param attributeLists - Any existing attributes to collect and merge with those associated with the owner.\n     * @internal\n     */ static collect(Owner, ...attributeLists) {\n        const attributes = [];\n        attributeLists.push($b70b8231869890d4$export$8b80b92e472f3c0a.locate(Owner));\n        for(let i = 0, ii = attributeLists.length; i < ii; ++i){\n            const list = attributeLists[i];\n            if (list === void 0) continue;\n            for(let j = 0, jj = list.length; j < jj; ++j){\n                const config = list[j];\n                if ((0, $553e78d6498b7d22$export$844ec244b1367d54)(config)) attributes.push(new $b70b8231869890d4$export$722ab06c0d846d74(Owner, config));\n                else attributes.push(new $b70b8231869890d4$export$722ab06c0d846d74(Owner, config.property, config.attribute, config.mode, config.converter));\n            }\n        }\n        return attributes;\n    }\n}\nfunction $b70b8231869890d4$export$7aabe8b3a840d2fd(configOrTarget, prop) {\n    let config;\n    function decorator($target, $prop) {\n        if (arguments.length > 1) // Non invocation:\n        // - @attr\n        // Invocation with or w/o opts:\n        // - @attr()\n        // - @attr({...opts})\n        config.property = $prop;\n        $b70b8231869890d4$export$8b80b92e472f3c0a.locate($target.constructor).push(config);\n    }\n    if (arguments.length > 1) {\n        // Non invocation:\n        // - @attr\n        config = {};\n        decorator(configOrTarget, prop);\n        return;\n    }\n    // Invocation with or w/o opts:\n    // - @attr()\n    // - @attr({...opts})\n    config = configOrTarget === void 0 ? {} : configOrTarget;\n    return decorator;\n}\n\n/**\n * Captures a binding expression along with related information and capabilities.\n *\n * @public\n */ class $d4cc7f2a173492b7$export$f4f50f872cf9bd86 {\n    /**\n     * Creates a binding.\n     * @param evaluate - Evaluates the binding.\n     * @param policy - The security policy to associate with this binding.\n     * @param isVolatile - Indicates whether the binding is volatile.\n     */ constructor(evaluate, policy, isVolatile = false){\n        this.evaluate = evaluate;\n        this.policy = policy;\n        this.isVolatile = isVolatile;\n    }\n}\n\n\n\n\nconst $c8f825d8de076482$var$marker = `fast-${Math.random().toString(36).substring(2, 8)}`;\nconst $c8f825d8de076482$var$interpolationStart = `${$c8f825d8de076482$var$marker}{`;\nconst $c8f825d8de076482$var$interpolationEnd = `}${$c8f825d8de076482$var$marker}`;\nconst $c8f825d8de076482$var$interpolationEndLength = $c8f825d8de076482$var$interpolationEnd.length;\nlet $c8f825d8de076482$var$id = 0;\nconst $c8f825d8de076482$export$79a1817568da084b = ()=>`${$c8f825d8de076482$var$marker}-${++$c8f825d8de076482$var$id}`;\nconst $c8f825d8de076482$export$b925b7ba50a6200f = Object.freeze({\n    /**\n     * Creates a placeholder string suitable for marking out a location *within*\n     * an attribute value or HTML content.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by binding directives.\n     */ interpolation: (id)=>`${$c8f825d8de076482$var$interpolationStart}${id}${$c8f825d8de076482$var$interpolationEnd}`,\n    /**\n     * Creates a placeholder that manifests itself as an attribute on an\n     * element.\n     * @param attributeName - The name of the custom attribute.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by attribute directives such as `ref`, `slotted`, and `children`.\n     */ attribute: (id)=>`${$c8f825d8de076482$export$79a1817568da084b()}=\"${$c8f825d8de076482$var$interpolationStart}${id}${$c8f825d8de076482$var$interpolationEnd}\"`,\n    /**\n     * Creates a placeholder that manifests itself as a marker within the DOM structure.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by structural directives such as `repeat`.\n     */ comment: (id)=>`<!--${$c8f825d8de076482$var$interpolationStart}${id}${$c8f825d8de076482$var$interpolationEnd}-->`\n});\nconst $c8f825d8de076482$export$7acfa6ed01010e37 = Object.freeze({\n    /**\n     * Parses text content or HTML attribute content, separating out the static strings\n     * from the directives.\n     * @param value - The content or attribute string to parse.\n     * @param factories - A list of directives to search for in the string.\n     * @returns A heterogeneous array of static strings interspersed with\n     * directives or null if no directives are found in the string.\n     */ parse (value, factories) {\n        const parts = value.split($c8f825d8de076482$var$interpolationStart);\n        if (parts.length === 1) return null;\n        const result = [];\n        for(let i = 0, ii = parts.length; i < ii; ++i){\n            const current = parts[i];\n            const index = current.indexOf($c8f825d8de076482$var$interpolationEnd);\n            let literal;\n            if (index === -1) literal = current;\n            else {\n                const factoryId = current.substring(0, index);\n                result.push(factories[factoryId]);\n                literal = current.substring(index + $c8f825d8de076482$var$interpolationEndLength);\n            }\n            if (literal !== \"\") result.push(literal);\n        }\n        return result;\n    }\n});\n\n\nconst $92a0f71e83c36791$var$registry = (0, $e1d30cf6f8cb997c$export$a31396a98752ddb5)();\nconst $92a0f71e83c36791$export$3b3d5ef3c555d599 = Object.freeze({\n    /**\n     * Gets the directive definition associated with the instance.\n     * @param instance - The directive instance to retrieve the definition for.\n     */ getForInstance: $92a0f71e83c36791$var$registry.getForInstance,\n    /**\n     * Gets the directive definition associated with the specified type.\n     * @param type - The directive type to retrieve the definition for.\n     */ getByType: $92a0f71e83c36791$var$registry.getByType,\n    /**\n     * Defines an HTMLDirective based on the options.\n     * @param type - The type to define as a directive.\n     * @param options - Options that specify the directive's application.\n     */ define (type, options) {\n        options = options || {};\n        options.type = type;\n        $92a0f71e83c36791$var$registry.register(options);\n        return type;\n    },\n    /**\n     *\n     * @param directive - The directive to assign the aspect to.\n     * @param value - The value to base the aspect determination on.\n     * @remarks\n     * If a falsy value is provided, then the content aspect will be assigned.\n     */ assignAspect (directive, value) {\n        if (!value) {\n            directive.aspectType = (0, $71bae6719b9971f3$export$b0076a1a9e24da9).content;\n            return;\n        }\n        directive.sourceAspect = value;\n        switch(value[0]){\n            case \":\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = directive.targetAspect === \"classList\" ? (0, $71bae6719b9971f3$export$b0076a1a9e24da9).tokenList : (0, $71bae6719b9971f3$export$b0076a1a9e24da9).property;\n                break;\n            case \"?\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = (0, $71bae6719b9971f3$export$b0076a1a9e24da9).booleanAttribute;\n                break;\n            case \"@\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = (0, $71bae6719b9971f3$export$b0076a1a9e24da9).event;\n                break;\n            default:\n                directive.targetAspect = value;\n                directive.aspectType = (0, $71bae6719b9971f3$export$b0076a1a9e24da9).attribute;\n                break;\n        }\n    }\n});\nfunction $92a0f71e83c36791$export$9ec0abe690dab1c4(options) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */ return function(type) {\n        $92a0f71e83c36791$export$3b3d5ef3c555d599.define(type, options);\n    };\n}\nclass $92a0f71e83c36791$export$683728dd3b823b8d {\n    /**\n     * Creates an instance of RefDirective.\n     * @param options - The options to use in configuring the directive.\n     */ constructor(options){\n        this.options = options;\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     * @remarks\n     * Creates a custom attribute placeholder.\n     */ createHTML(add) {\n        return (0, $c8f825d8de076482$export$b925b7ba50a6200f).attribute(add(this));\n    }\n    /**\n     * Creates a behavior.\n     * @param targets - The targets available for behaviors to be attached to.\n     */ createBehavior() {\n        return this;\n    }\n}\n(0, $e1d30cf6f8cb997c$export$997c5e5ecebc1b61)($92a0f71e83c36791$export$683728dd3b823b8d);\n\n\n\n\nconst $bb9d557ea06bd03b$var$selectElements = (value)=>value.nodeType === 1;\nconst $bb9d557ea06bd03b$export$7a5d735b2ab6389d = (selector)=>selector ? (value)=>value.nodeType === 1 && value.matches(selector) : $bb9d557ea06bd03b$var$selectElements;\nclass $bb9d557ea06bd03b$export$755ec928f38200a4 extends (0, $92a0f71e83c36791$export$683728dd3b823b8d) {\n    /**\n     * The unique id of the factory.\n     */ get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value;\n        this._controllerProperty = `${value}-c`;\n    }\n    /**\n     * Bind this behavior to the source.\n     * @param source - The source to bind to.\n     * @param context - The execution context that the binding is operating within.\n     * @param targets - The targets that behaviors in a view can attach to.\n     */ bind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        target[this._controllerProperty] = controller;\n        this.updateTarget(controller.source, this.computeNodes(target));\n        this.observe(target);\n        controller.onUnbind(this);\n    }\n    /**\n     * Unbinds this behavior from the source.\n     * @param source - The source to unbind from.\n     * @param context - The execution context that the binding is operating within.\n     * @param targets - The targets that behaviors in a view can attach to.\n     */ unbind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        this.updateTarget(controller.source, (0, $e1d30cf6f8cb997c$export$d3ae4127996a91af));\n        this.disconnect(target);\n        target[this._controllerProperty] = null;\n    }\n    /**\n     * Gets the data source for the target.\n     * @param target - The target to get the source for.\n     * @returns The source.\n     */ getSource(target) {\n        return target[this._controllerProperty].source;\n    }\n    /**\n     * Updates the source property with the computed nodes.\n     * @param source - The source object to assign the nodes property to.\n     * @param value - The nodes to assign to the source object property.\n     */ updateTarget(source, value) {\n        source[this.options.property] = value;\n    }\n    /**\n     * Computes the set of nodes that should be assigned to the source property.\n     * @param target - The target to compute the nodes for.\n     * @returns The computed nodes.\n     * @remarks\n     * Applies filters if provided.\n     */ computeNodes(target) {\n        let nodes = this.getNodes(target);\n        if (\"filter\" in this.options) nodes = nodes.filter(this.options.filter);\n        return nodes;\n    }\n}\n\n\nclass $3703afe7bef39fc6$export$8e0d942365449f1b extends (0, $bb9d557ea06bd03b$export$755ec928f38200a4) {\n    /**\n     * Creates an instance of ChildrenDirective.\n     * @param options - The options to use in configuring the child observation behavior.\n     */ constructor(options){\n        super(options);\n        this.observerProperty = Symbol();\n        this.handleEvent = (mutations, observer)=>{\n            const target = observer.target;\n            this.updateTarget(this.getSource(target), this.computeNodes(target));\n        };\n        options.childList = true;\n    }\n    /**\n     * Begins observation of the nodes.\n     * @param target - The target to observe.\n     */ observe(target) {\n        let observer = target[this.observerProperty];\n        if (!observer) {\n            observer = new MutationObserver(this.handleEvent);\n            observer.toJSON = (0, $553e78d6498b7d22$export$8793edee2d425525);\n            target[this.observerProperty] = observer;\n        }\n        observer.target = target;\n        observer.observe(target, this.options);\n    }\n    /**\n     * Disconnects observation of the nodes.\n     * @param target - The target to unobserve.\n     */ disconnect(target) {\n        const observer = target[this.observerProperty];\n        observer.target = null;\n        observer.disconnect();\n    }\n    /**\n     * Retrieves the raw nodes that should be assigned to the source property.\n     * @param target - The target to get the node to.\n     */ getNodes(target) {\n        if (\"selector\" in this.options) return Array.from(target.querySelectorAll(this.options.selector));\n        return Array.from(target.childNodes);\n    }\n}\n(0, $92a0f71e83c36791$export$3b3d5ef3c555d599).define($3703afe7bef39fc6$export$8e0d942365449f1b);\nfunction $3703afe7bef39fc6$export$bacb5cc5a11aef16(propertyOrOptions) {\n    if ((0, $553e78d6498b7d22$export$844ec244b1367d54)(propertyOrOptions)) propertyOrOptions = {\n        property: propertyOrOptions\n    };\n    return new $3703afe7bef39fc6$export$8e0d942365449f1b(propertyOrOptions);\n}\n\n\n\n\n\nclass $f0534c3e114f3b42$var$OneWayBinding extends (0, $d4cc7f2a173492b7$export$f4f50f872cf9bd86) {\n    createObserver(subscriber) {\n        return (0, $536bd8e250404810$export$77cea355fa80b5f4).binding(this.evaluate, subscriber, this.isVolatile);\n    }\n}\nfunction $f0534c3e114f3b42$export$d013c21e6c7cf47e(expression, policy, isVolatile = (0, $536bd8e250404810$export$77cea355fa80b5f4).isVolatileBinding(expression)) {\n    return new $f0534c3e114f3b42$var$OneWayBinding(expression, policy, isVolatile);\n}\nfunction $f0534c3e114f3b42$export$ef13bcb366f2e9af(expression, options) {\n    const config = new $f0534c3e114f3b42$var$OneWayBinding(expression);\n    config.options = options;\n    return config;\n}\n\n\n\nconst $ee0b2e61034c1ee7$var$registry = (0, $e1d30cf6f8cb997c$export$a31396a98752ddb5)();\nconst $ee0b2e61034c1ee7$export$c6882ecf5b9a1390 = Object.freeze({\n    /**\n     * Gets the directive definition associated with the instance.\n     * @param instance - The directive instance to retrieve the definition for.\n     */ getForInstance: $ee0b2e61034c1ee7$var$registry.getForInstance,\n    /**\n     * Gets the directive definition associated with the specified type.\n     * @param type - The directive type to retrieve the definition for.\n     */ getByType: $ee0b2e61034c1ee7$var$registry.getByType,\n    /**\n     * Defines a CSSDirective.\n     * @param type - The type to define as a directive.\n     */ define (type) {\n        $ee0b2e61034c1ee7$var$registry.register({\n            type: type\n        });\n        return type;\n    }\n});\nfunction $ee0b2e61034c1ee7$export$1d63d97c95a198b2() {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */ return function(type) {\n        $ee0b2e61034c1ee7$export$c6882ecf5b9a1390.define(type);\n    };\n}\n\n\nlet $f4e8f5ffc787333e$var$DefaultStyleStrategy;\nfunction $f4e8f5ffc787333e$var$reduceStyles(styles) {\n    return styles.map((x)=>x instanceof $f4e8f5ffc787333e$export$5cb32fda821782e2 ? $f4e8f5ffc787333e$var$reduceStyles(x.styles) : [\n            x\n        ]).reduce((prev, curr)=>prev.concat(curr), []);\n}\nclass $f4e8f5ffc787333e$export$5cb32fda821782e2 {\n    /**\n     * Creates an instance of ElementStyles.\n     * @param styles - The styles that will be associated with elements.\n     */ constructor(styles){\n        this.styles = styles;\n        this.targets = new WeakSet();\n        this._strategy = null;\n        this.behaviors = styles.map((x)=>x instanceof $f4e8f5ffc787333e$export$5cb32fda821782e2 ? x.behaviors : null).reduce((prev, curr)=>curr === null ? prev : prev === null ? curr : prev.concat(curr), null);\n    }\n    /**\n     * Gets the StyleStrategy associated with these element styles.\n     */ get strategy() {\n        if (this._strategy === null) this.withStrategy($f4e8f5ffc787333e$var$DefaultStyleStrategy);\n        return this._strategy;\n    }\n    /** @internal */ addStylesTo(target) {\n        this.strategy.addStylesTo(target);\n        this.targets.add(target);\n    }\n    /** @internal */ removeStylesFrom(target) {\n        this.strategy.removeStylesFrom(target);\n        this.targets.delete(target);\n    }\n    /** @internal */ isAttachedTo(target) {\n        return this.targets.has(target);\n    }\n    /**\n     * Associates behaviors with this set of styles.\n     * @param behaviors - The behaviors to associate.\n     */ withBehaviors(...behaviors) {\n        this.behaviors = this.behaviors === null ? behaviors : this.behaviors.concat(behaviors);\n        return this;\n    }\n    /**\n     * Sets the strategy that handles adding/removing these styles for an element.\n     * @param strategy - The strategy to use.\n     */ withStrategy(Strategy) {\n        this._strategy = new Strategy($f4e8f5ffc787333e$var$reduceStyles(this.styles));\n        return this;\n    }\n    /**\n     * Sets the default strategy type to use when creating style strategies.\n     * @param Strategy - The strategy type to construct.\n     */ static setDefaultStrategy(Strategy) {\n        $f4e8f5ffc787333e$var$DefaultStyleStrategy = Strategy;\n    }\n    /**\n     * Normalizes a set of composable style options.\n     * @param styles - The style options to normalize.\n     * @returns A singular ElementStyles instance or undefined.\n     */ static normalize(styles) {\n        return styles === void 0 ? void 0 : Array.isArray(styles) ? new $f4e8f5ffc787333e$export$5cb32fda821782e2(styles) : styles instanceof $f4e8f5ffc787333e$export$5cb32fda821782e2 ? styles : new $f4e8f5ffc787333e$export$5cb32fda821782e2([\n            styles\n        ]);\n    }\n}\n/**\n * Indicates whether the DOM supports the adoptedStyleSheets feature.\n */ $f4e8f5ffc787333e$export$5cb32fda821782e2.supportsAdoptedStyleSheets = Array.isArray(document.adoptedStyleSheets) && \"replace\" in CSSStyleSheet.prototype;\n\n\n\nfunction $f3b5c5f9f33c0465$var$handleChange(directive, controller, observer) {\n    controller.source.style.setProperty(directive.targetAspect, observer.bind(controller));\n}\nclass $f3b5c5f9f33c0465$export$a4f733160e5c8f6c {\n    /**\n     * Creates an instance of CSSBindingDirective.\n     * @param dataBinding - The binding to use in CSS.\n     * @param targetAspect - The CSS property to target.\n     */ constructor(dataBinding, targetAspect){\n        this.dataBinding = dataBinding;\n        this.targetAspect = targetAspect;\n    }\n    /**\n     * Creates a CSS fragment to interpolate into the CSS document.\n     * @returns - the string to interpolate into CSS\n     */ createCSS(add) {\n        add(this);\n        return `var(${this.targetAspect})`;\n    }\n    /**\n     * Executed when this behavior is attached to a controller.\n     * @param controller - Controls the behavior lifecycle.\n     */ addedCallback(controller) {\n        var _a;\n        const element = controller.source;\n        if (!element.$cssBindings) {\n            element.$cssBindings = new Map();\n            const setAttribute = element.setAttribute;\n            element.setAttribute = (attr, value)=>{\n                setAttribute.call(element, attr, value);\n                if (attr === \"style\") element.$cssBindings.forEach((v, k)=>$f3b5c5f9f33c0465$var$handleChange(k, v.controller, v.observer));\n            };\n        }\n        const observer = (_a = controller[this.targetAspect]) !== null && _a !== void 0 ? _a : controller[this.targetAspect] = this.dataBinding.createObserver(this, this);\n        observer.controller = controller;\n        controller.source.$cssBindings.set(this, {\n            controller: controller,\n            observer: observer\n        });\n    }\n    /**\n     * Executed when this behavior's host is connected.\n     * @param controller - Controls the behavior lifecycle.\n     */ connectedCallback(controller) {\n        $f3b5c5f9f33c0465$var$handleChange(this, controller, controller[this.targetAspect]);\n    }\n    /**\n     * Executed when this behavior is detached from a controller.\n     * @param controller - Controls the behavior lifecycle.\n     */ removedCallback(controller) {\n        if (controller.source.$cssBindings) controller.source.$cssBindings.delete(this);\n    }\n    /**\n     * Called when a subject this instance has subscribed to changes.\n     * @param subject - The subject of the change.\n     * @param args - The event args detailing the change that occurred.\n     *\n     * @internal\n     */ handleChange(_, observer) {\n        $f3b5c5f9f33c0465$var$handleChange(this, observer.controller, observer);\n    }\n}\n(0, $ee0b2e61034c1ee7$export$c6882ecf5b9a1390).define($f3b5c5f9f33c0465$export$a4f733160e5c8f6c);\n\n\nconst $86e25679ac61f8ba$var$marker = `${Math.random().toString(36).substring(2, 8)}`;\nlet $86e25679ac61f8ba$var$varId = 0;\nconst $86e25679ac61f8ba$var$nextCSSVariable = ()=>`--v${$86e25679ac61f8ba$var$marker}${++$86e25679ac61f8ba$var$varId}`;\nfunction $86e25679ac61f8ba$var$collectStyles(strings, values) {\n    const styles = [];\n    let cssString = \"\";\n    const behaviors = [];\n    const add = (behavior)=>{\n        behaviors.push(behavior);\n    };\n    for(let i = 0, ii = strings.length - 1; i < ii; ++i){\n        cssString += strings[i];\n        let value = values[i];\n        if ((0, $553e78d6498b7d22$export$f6e2535fb5126e54)(value)) value = new (0, $f3b5c5f9f33c0465$export$a4f733160e5c8f6c)((0, $f0534c3e114f3b42$export$d013c21e6c7cf47e)(value), $86e25679ac61f8ba$var$nextCSSVariable()).createCSS(add);\n        else if (value instanceof (0, $d4cc7f2a173492b7$export$f4f50f872cf9bd86)) value = new (0, $f3b5c5f9f33c0465$export$a4f733160e5c8f6c)(value, $86e25679ac61f8ba$var$nextCSSVariable()).createCSS(add);\n        else if ((0, $ee0b2e61034c1ee7$export$c6882ecf5b9a1390).getForInstance(value) !== void 0) value = value.createCSS(add);\n        if (value instanceof (0, $f4e8f5ffc787333e$export$5cb32fda821782e2) || value instanceof CSSStyleSheet) {\n            if (cssString.trim() !== \"\") {\n                styles.push(cssString);\n                cssString = \"\";\n            }\n            styles.push(value);\n        } else cssString += value;\n    }\n    cssString += strings[strings.length - 1];\n    if (cssString.trim() !== \"\") styles.push(cssString);\n    return {\n        styles: styles,\n        behaviors: behaviors\n    };\n}\nconst $86e25679ac61f8ba$export$dbf350e5966cf602 = (strings, ...values)=>{\n    const { styles: styles, behaviors: behaviors } = $86e25679ac61f8ba$var$collectStyles(strings, values);\n    const elementStyles = new (0, $f4e8f5ffc787333e$export$5cb32fda821782e2)(styles);\n    return behaviors.length ? elementStyles.withBehaviors(...behaviors) : elementStyles;\n};\nclass $86e25679ac61f8ba$var$CSSPartial {\n    constructor(styles, behaviors){\n        this.behaviors = behaviors;\n        this.css = \"\";\n        const stylesheets = styles.reduce((accumulated, current)=>{\n            if ((0, $553e78d6498b7d22$export$844ec244b1367d54)(current)) this.css += current;\n            else accumulated.push(current);\n            return accumulated;\n        }, []);\n        if (stylesheets.length) this.styles = new (0, $f4e8f5ffc787333e$export$5cb32fda821782e2)(stylesheets);\n    }\n    createCSS(add) {\n        this.behaviors.forEach(add);\n        if (this.styles) add(this);\n        return this.css;\n    }\n    addedCallback(controller) {\n        controller.addStyles(this.styles);\n    }\n    removedCallback(controller) {\n        controller.removeStyles(this.styles);\n    }\n}\n(0, $ee0b2e61034c1ee7$export$c6882ecf5b9a1390).define($86e25679ac61f8ba$var$CSSPartial);\n$86e25679ac61f8ba$export$dbf350e5966cf602.partial = (strings, ...values)=>{\n    const { styles: styles, behaviors: behaviors } = $86e25679ac61f8ba$var$collectStyles(strings, values);\n    return new $86e25679ac61f8ba$var$CSSPartial(styles, behaviors);\n};\n\n\n\n\n\n\n\n\n\n\nfunction $4627c40b03a7fc46$export$514d96791ae418fd(element) {\n    const parentNode = element.parentElement;\n    if (parentNode) return parentNode;\n    else {\n        const rootNode = element.getRootNode();\n        if (rootNode.host instanceof HTMLElement) // this is shadow-root\n        return rootNode.host;\n    }\n    return null;\n}\nfunction $4627c40b03a7fc46$export$874dc4aa4f6fa14b(reference, test) {\n    let current = test;\n    while(current !== null){\n        if (current === reference) return true;\n        current = $4627c40b03a7fc46$export$514d96791ae418fd(current);\n    }\n    return false;\n}\nclass $4627c40b03a7fc46$export$f68c7a96500f2aea extends MutationObserver {\n    /**\n     * Creates an instance of UnobservableMutationObserver.\n     * @param callback - The callback to invoke when observed nodes are changed.\n     */ constructor(callback){\n        function handler(mutations) {\n            this.callback.call(null, mutations.filter((record)=>this.observedNodes.has(record.target)));\n        }\n        super(handler);\n        this.callback = callback;\n        this.observedNodes = new Set();\n    }\n    observe(target, options) {\n        this.observedNodes.add(target);\n        super.observe(target, options);\n    }\n    unobserve(target) {\n        this.observedNodes.delete(target);\n        if (this.observedNodes.size < 1) this.disconnect();\n    }\n}\nconst $4627c40b03a7fc46$export$3ff5b079a3a7327 = Object.freeze({\n    /**\n     * Creates a ViewBehaviorOrchestrator.\n     * @param source - The source to to associate behaviors with.\n     * @returns A ViewBehaviorOrchestrator.\n     */ create (source) {\n        const behaviors = [];\n        const targets = {};\n        let unbindables = null;\n        let isConnected = false;\n        return {\n            source: source,\n            context: (0, $536bd8e250404810$export$f7c638676c8af91d).default,\n            targets: targets,\n            get isBound () {\n                return isConnected;\n            },\n            addBehaviorFactory (factory, target) {\n                var _a, _b, _c, _d;\n                const compiled = factory;\n                compiled.id = (_a = compiled.id) !== null && _a !== void 0 ? _a : (0, $c8f825d8de076482$export$79a1817568da084b)();\n                compiled.targetNodeId = (_b = compiled.targetNodeId) !== null && _b !== void 0 ? _b : (0, $c8f825d8de076482$export$79a1817568da084b)();\n                compiled.targetTagName = (_c = target.tagName) !== null && _c !== void 0 ? _c : null;\n                compiled.policy = (_d = compiled.policy) !== null && _d !== void 0 ? _d : (0, $71bae6719b9971f3$export$cb0933279c36a66b).policy;\n                this.addTarget(compiled.targetNodeId, target);\n                this.addBehavior(compiled.createBehavior());\n            },\n            addTarget (nodeId, target) {\n                targets[nodeId] = target;\n            },\n            addBehavior (behavior) {\n                behaviors.push(behavior);\n                if (isConnected) behavior.bind(this);\n            },\n            onUnbind (unbindable) {\n                if (unbindables === null) unbindables = [];\n                unbindables.push(unbindable);\n            },\n            connectedCallback (controller) {\n                if (!isConnected) {\n                    isConnected = true;\n                    behaviors.forEach((x)=>x.bind(this));\n                }\n            },\n            disconnectedCallback (controller) {\n                if (isConnected) {\n                    isConnected = false;\n                    if (unbindables !== null) unbindables.forEach((x)=>x.unbind(this));\n                }\n            }\n        };\n    }\n});\n\n\n\n\n\n\n\nconst $e811c4e4610d6062$var$defaultShadowOptions = {\n    mode: \"open\"\n};\nconst $e811c4e4610d6062$var$defaultElementOptions = {};\nconst $e811c4e4610d6062$var$fastElementBaseTypes = new Set();\nconst $e811c4e4610d6062$var$fastElementRegistry = (0, $e1d30cf6f8cb997c$export$360e186c37756536).getById((0, $553e78d6498b7d22$export$f2080b9a9a32b8d3).elementRegistry, ()=>(0, $e1d30cf6f8cb997c$export$a31396a98752ddb5)());\nclass $e811c4e4610d6062$export$dbb8b6d358bc70ba {\n    constructor(type, nameOrConfig = type.definition){\n        var _a;\n        this.platformDefined = false;\n        if ((0, $553e78d6498b7d22$export$844ec244b1367d54)(nameOrConfig)) nameOrConfig = {\n            name: nameOrConfig\n        };\n        this.type = type;\n        this.name = nameOrConfig.name;\n        this.template = nameOrConfig.template;\n        this.registry = (_a = nameOrConfig.registry) !== null && _a !== void 0 ? _a : customElements;\n        const proto = type.prototype;\n        const attributes = (0, $b70b8231869890d4$export$722ab06c0d846d74).collect(type, nameOrConfig.attributes);\n        const observedAttributes = new Array(attributes.length);\n        const propertyLookup = {};\n        const attributeLookup = {};\n        for(let i = 0, ii = attributes.length; i < ii; ++i){\n            const current = attributes[i];\n            observedAttributes[i] = current.attribute;\n            propertyLookup[current.name] = current;\n            attributeLookup[current.attribute] = current;\n            (0, $536bd8e250404810$export$77cea355fa80b5f4).defineProperty(proto, current);\n        }\n        Reflect.defineProperty(type, \"observedAttributes\", {\n            value: observedAttributes,\n            enumerable: true\n        });\n        this.attributes = attributes;\n        this.propertyLookup = propertyLookup;\n        this.attributeLookup = attributeLookup;\n        this.shadowOptions = nameOrConfig.shadowOptions === void 0 ? $e811c4e4610d6062$var$defaultShadowOptions : nameOrConfig.shadowOptions === null ? void 0 : Object.assign(Object.assign({}, $e811c4e4610d6062$var$defaultShadowOptions), nameOrConfig.shadowOptions);\n        this.elementOptions = nameOrConfig.elementOptions === void 0 ? $e811c4e4610d6062$var$defaultElementOptions : Object.assign(Object.assign({}, $e811c4e4610d6062$var$defaultElementOptions), nameOrConfig.elementOptions);\n        this.styles = (0, $f4e8f5ffc787333e$export$5cb32fda821782e2).normalize(nameOrConfig.styles);\n        $e811c4e4610d6062$var$fastElementRegistry.register(this);\n    }\n    /**\n     * Indicates if this element has been defined in at least one registry.\n     */ get isDefined() {\n        return this.platformDefined;\n    }\n    /**\n     * Defines a custom element based on this definition.\n     * @param registry - The element registry to define the element in.\n     * @remarks\n     * This operation is idempotent per registry.\n     */ define(registry = this.registry) {\n        const type = this.type;\n        if (!registry.get(this.name)) {\n            this.platformDefined = true;\n            registry.define(this.name, type, this.elementOptions);\n        }\n        return this;\n    }\n    /**\n     * Creates an instance of FASTElementDefinition.\n     * @param type - The type this definition is being created for.\n     * @param nameOrDef - The name of the element to define or a config object\n     * that describes the element to define.\n     */ static compose(type, nameOrDef) {\n        if ($e811c4e4610d6062$var$fastElementBaseTypes.has(type) || $e811c4e4610d6062$var$fastElementRegistry.getByType(type)) return new $e811c4e4610d6062$export$dbb8b6d358bc70ba(class extends type {\n        }, nameOrDef);\n        return new $e811c4e4610d6062$export$dbb8b6d358bc70ba(type, nameOrDef);\n    }\n    /**\n     * Registers a FASTElement base type.\n     * @param type - The type to register as a base type.\n     * @internal\n     */ static registerBaseType(type) {\n        $e811c4e4610d6062$var$fastElementBaseTypes.add(type);\n    }\n}\n/**\n * Gets the element definition associated with the specified type.\n * @param type - The custom element type to retrieve the definition for.\n */ $e811c4e4610d6062$export$dbb8b6d358bc70ba.getByType = $e811c4e4610d6062$var$fastElementRegistry.getByType;\n/**\n * Gets the element definition associated with the instance.\n * @param instance - The custom element instance to retrieve the definition for.\n */ $e811c4e4610d6062$export$dbb8b6d358bc70ba.getForInstance = $e811c4e4610d6062$var$fastElementRegistry.getForInstance;\n\n\nconst $2c7cec50df6e87c7$var$bindingStartMarker = /fe-b\\$\\$start\\$\\$(\\d+)\\$\\$(.+)\\$\\$fe-b/;\nconst $2c7cec50df6e87c7$var$bindingEndMarker = /fe-b\\$\\$end\\$\\$(\\d+)\\$\\$(.+)\\$\\$fe-b/;\nconst $2c7cec50df6e87c7$var$repeatViewStartMarker = /fe-repeat\\$\\$start\\$\\$(\\d+)\\$\\$fe-repeat/;\nconst $2c7cec50df6e87c7$var$repeatViewEndMarker = /fe-repeat\\$\\$end\\$\\$(\\d+)\\$\\$fe-repeat/;\nconst $2c7cec50df6e87c7$var$elementBoundaryStartMarker = /^(?:.{0,1000})fe-eb\\$\\$start\\$\\$(.+?)\\$\\$fe-eb/;\nconst $2c7cec50df6e87c7$var$elementBoundaryEndMarker = /fe-eb\\$\\$end\\$\\$(.{0,1000})\\$\\$fe-eb(?:.{0,1000})$/;\nfunction $2c7cec50df6e87c7$var$isComment(node) {\n    return node && node.nodeType === Node.COMMENT_NODE;\n}\nconst $2c7cec50df6e87c7$export$d9a04faa81df4f36 = Object.freeze({\n    attributeMarkerName: \"data-fe-b\",\n    attributeBindingSeparator: \" \",\n    contentBindingStartMarker (index, uniqueId) {\n        return `fe-b$$start$$${index}$$${uniqueId}$$fe-b`;\n    },\n    contentBindingEndMarker (index, uniqueId) {\n        return `fe-b$$end$$${index}$$${uniqueId}$$fe-b`;\n    },\n    repeatStartMarker (index) {\n        return `fe-repeat$$start$$${index}$$fe-repeat`;\n    },\n    repeatEndMarker (index) {\n        return `fe-repeat$$end$$${index}$$fe-repeat`;\n    },\n    isContentBindingStartMarker (content) {\n        return $2c7cec50df6e87c7$var$bindingStartMarker.test(content);\n    },\n    isContentBindingEndMarker (content) {\n        return $2c7cec50df6e87c7$var$bindingEndMarker.test(content);\n    },\n    isRepeatViewStartMarker (content) {\n        return $2c7cec50df6e87c7$var$repeatViewStartMarker.test(content);\n    },\n    isRepeatViewEndMarker (content) {\n        return $2c7cec50df6e87c7$var$repeatViewEndMarker.test(content);\n    },\n    isElementBoundaryStartMarker (node) {\n        return $2c7cec50df6e87c7$var$isComment(node) && $2c7cec50df6e87c7$var$elementBoundaryStartMarker.test(node.data.trim());\n    },\n    isElementBoundaryEndMarker (node) {\n        return $2c7cec50df6e87c7$var$isComment(node) && $2c7cec50df6e87c7$var$elementBoundaryEndMarker.test(node.data);\n    },\n    /**\n     * Returns the indexes of the ViewBehaviorFactories affecting\n     * attributes for the element, or null if no factories were found.\n     */ parseAttributeBinding (node) {\n        const attr = node.getAttribute(this.attributeMarkerName);\n        return attr === null ? attr : attr.split(this.attributeBindingSeparator).map((i)=>parseInt(i));\n    },\n    /**\n     * Parses the ViewBehaviorFactory index from string data. Returns\n     * the binding index or null if the index cannot be retrieved.\n     */ parseContentBindingStartMarker (content) {\n        return $2c7cec50df6e87c7$var$parseIndexAndIdMarker($2c7cec50df6e87c7$var$bindingStartMarker, content);\n    },\n    parseContentBindingEndMarker (content) {\n        return $2c7cec50df6e87c7$var$parseIndexAndIdMarker($2c7cec50df6e87c7$var$bindingEndMarker, content);\n    },\n    /**\n     * Parses the index of a repeat directive from a content string.\n     */ parseRepeatStartMarker (content) {\n        return $2c7cec50df6e87c7$var$parseIntMarker($2c7cec50df6e87c7$var$repeatViewStartMarker, content);\n    },\n    parseRepeatEndMarker (content) {\n        return $2c7cec50df6e87c7$var$parseIntMarker($2c7cec50df6e87c7$var$repeatViewEndMarker, content);\n    },\n    /**\n     * Parses element Id from element boundary markers\n     */ parseElementBoundaryStartMarker (content) {\n        return $2c7cec50df6e87c7$var$parseStringMarker($2c7cec50df6e87c7$var$elementBoundaryStartMarker, content.trim());\n    },\n    parseElementBoundaryEndMarker (content) {\n        return $2c7cec50df6e87c7$var$parseStringMarker($2c7cec50df6e87c7$var$elementBoundaryEndMarker, content);\n    }\n});\nfunction $2c7cec50df6e87c7$var$parseIntMarker(regex, content) {\n    const match = regex.exec(content);\n    return match === null ? match : parseInt(match[1]);\n}\nfunction $2c7cec50df6e87c7$var$parseStringMarker(regex, content) {\n    const match = regex.exec(content);\n    return match === null ? match : match[1];\n}\nfunction $2c7cec50df6e87c7$var$parseIndexAndIdMarker(regex, content) {\n    const match = regex.exec(content);\n    return match === null ? match : [\n        parseInt(match[1]),\n        match[2]\n    ];\n}\nconst $2c7cec50df6e87c7$export$7393b5ded7a91eb8 = Symbol.for(\"fe-hydration\");\nfunction $2c7cec50df6e87c7$export$9934e196b2f5d5b7(value) {\n    return value[$2c7cec50df6e87c7$export$7393b5ded7a91eb8] === $2c7cec50df6e87c7$export$7393b5ded7a91eb8;\n}\n\n\nconst $b0fa72c1c098d988$var$defaultEventOptions = {\n    bubbles: true,\n    composed: true,\n    cancelable: true\n};\nconst $b0fa72c1c098d988$var$isConnectedPropertyName = \"isConnected\";\nconst $b0fa72c1c098d988$var$shadowRoots = new WeakMap();\nfunction $b0fa72c1c098d988$var$getShadowRoot(element) {\n    var _a, _b;\n    return (_b = (_a = element.shadowRoot) !== null && _a !== void 0 ? _a : $b0fa72c1c098d988$var$shadowRoots.get(element)) !== null && _b !== void 0 ? _b : null;\n}\nlet $b0fa72c1c098d988$var$elementControllerStrategy;\nclass $b0fa72c1c098d988$export$c72c0f72b4b26c7e extends (0, $0f21edcca411263f$export$af6e57f0938b1389) {\n    /**\n     * Creates a Controller to control the specified element.\n     * @param element - The element to be controlled by this controller.\n     * @param definition - The element definition metadata that instructs this\n     * controller in how to handle rendering and other platform integrations.\n     * @internal\n     */ constructor(element, definition){\n        super(element);\n        this.boundObservables = null;\n        this.needsInitialization = true;\n        this.hasExistingShadowRoot = false;\n        this._template = null;\n        this.stage = 3 /* Stages.disconnected */ ;\n        /**\n         * A guard against connecting behaviors multiple times\n         * during connect in scenarios where a behavior adds\n         * another behavior during it's connectedCallback\n         */ this.guardBehaviorConnection = false;\n        this.behaviors = null;\n        /**\n         * Tracks whether behaviors are connected so that\n         * behaviors cant be connected multiple times\n         */ this.behaviorsConnected = false;\n        this._mainStyles = null;\n        /**\n         * This allows Observable.getNotifier(...) to return the Controller\n         * when the notifier for the Controller itself is being requested. The\n         * result is that the Observable system does not need to create a separate\n         * instance of Notifier for observables on the Controller. The component and\n         * the controller will now share the same notifier, removing one-object construct\n         * per web component instance.\n         */ this.$fastController = this;\n        /**\n         * The view associated with the custom element.\n         * @remarks\n         * If `null` then the element is managing its own rendering.\n         */ this.view = null;\n        this.source = element;\n        this.definition = definition;\n        const shadowOptions = definition.shadowOptions;\n        if (shadowOptions !== void 0) {\n            let shadowRoot = element.shadowRoot;\n            if (shadowRoot) this.hasExistingShadowRoot = true;\n            else {\n                shadowRoot = element.attachShadow(shadowOptions);\n                if (shadowOptions.mode === \"closed\") $b0fa72c1c098d988$var$shadowRoots.set(element, shadowRoot);\n            }\n        }\n        // Capture any observable values that were set by the binding engine before\n        // the browser upgraded the element. Then delete the property since it will\n        // shadow the getter/setter that is required to make the observable operate.\n        // Later, in the connect callback, we'll re-apply the values.\n        const accessors = (0, $536bd8e250404810$export$77cea355fa80b5f4).getAccessors(element);\n        if (accessors.length > 0) {\n            const boundObservables = this.boundObservables = Object.create(null);\n            for(let i = 0, ii = accessors.length; i < ii; ++i){\n                const propertyName = accessors[i].name;\n                const value = element[propertyName];\n                if (value !== void 0) {\n                    delete element[propertyName];\n                    boundObservables[propertyName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Indicates whether or not the custom element has been\n     * connected to the document.\n     */ get isConnected() {\n        (0, $536bd8e250404810$export$77cea355fa80b5f4).track(this, $b0fa72c1c098d988$var$isConnectedPropertyName);\n        return this.stage === 1 /* Stages.connected */ ;\n    }\n    /**\n     * The context the expression is evaluated against.\n     */ get context() {\n        var _a, _b;\n        return (_b = (_a = this.view) === null || _a === void 0 ? void 0 : _a.context) !== null && _b !== void 0 ? _b : (0, $536bd8e250404810$export$f7c638676c8af91d).default;\n    }\n    /**\n     * Indicates whether the controller is bound.\n     */ get isBound() {\n        var _a, _b;\n        return (_b = (_a = this.view) === null || _a === void 0 ? void 0 : _a.isBound) !== null && _b !== void 0 ? _b : false;\n    }\n    /**\n     * Indicates how the source's lifetime relates to the controller's lifetime.\n     */ get sourceLifetime() {\n        var _a;\n        return (_a = this.view) === null || _a === void 0 ? void 0 : _a.sourceLifetime;\n    }\n    /**\n     * Gets/sets the template used to render the component.\n     * @remarks\n     * This value can only be accurately read after connect but can be set at any time.\n     */ get template() {\n        var _a;\n        // 1. Template overrides take top precedence.\n        if (this._template === null) {\n            const definition = this.definition;\n            if (this.source.resolveTemplate) // 2. Allow for element instance overrides next.\n            this._template = this.source.resolveTemplate();\n            else if (definition.template) // 3. Default to the static definition.\n            this._template = (_a = definition.template) !== null && _a !== void 0 ? _a : null;\n        }\n        return this._template;\n    }\n    set template(value) {\n        if (this._template === value) return;\n        this._template = value;\n        if (!this.needsInitialization) this.renderTemplate(value);\n    }\n    /**\n     * The main set of styles used for the component, independent\n     * of any dynamically added styles.\n     */ get mainStyles() {\n        var _a;\n        // 1. Styles overrides take top precedence.\n        if (this._mainStyles === null) {\n            const definition = this.definition;\n            if (this.source.resolveStyles) // 2. Allow for element instance overrides next.\n            this._mainStyles = this.source.resolveStyles();\n            else if (definition.styles) // 3. Default to the static definition.\n            this._mainStyles = (_a = definition.styles) !== null && _a !== void 0 ? _a : null;\n        }\n        return this._mainStyles;\n    }\n    set mainStyles(value) {\n        if (this._mainStyles === value) return;\n        if (this._mainStyles !== null) this.removeStyles(this._mainStyles);\n        this._mainStyles = value;\n        if (!this.needsInitialization) this.addStyles(value);\n    }\n    /**\n     * Registers an unbind handler with the controller.\n     * @param behavior - An object to call when the controller unbinds.\n     */ onUnbind(behavior) {\n        var _a;\n        (_a = this.view) === null || _a === void 0 || _a.onUnbind(behavior);\n    }\n    /**\n     * Adds the behavior to the component.\n     * @param behavior - The behavior to add.\n     */ addBehavior(behavior) {\n        var _a, _b;\n        const targetBehaviors = (_a = this.behaviors) !== null && _a !== void 0 ? _a : this.behaviors = new Map();\n        const count = (_b = targetBehaviors.get(behavior)) !== null && _b !== void 0 ? _b : 0;\n        if (count === 0) {\n            targetBehaviors.set(behavior, 1);\n            behavior.addedCallback && behavior.addedCallback(this);\n            if (behavior.connectedCallback && !this.guardBehaviorConnection && (this.stage === 1 /* Stages.connected */  || this.stage === 0 /* Stages.connecting */ )) behavior.connectedCallback(this);\n        } else targetBehaviors.set(behavior, count + 1);\n    }\n    /**\n     * Removes the behavior from the component.\n     * @param behavior - The behavior to remove.\n     * @param force - Forces removal even if this behavior was added more than once.\n     */ removeBehavior(behavior, force = false) {\n        const targetBehaviors = this.behaviors;\n        if (targetBehaviors === null) return;\n        const count = targetBehaviors.get(behavior);\n        if (count === void 0) return;\n        if (count === 1 || force) {\n            targetBehaviors.delete(behavior);\n            if (behavior.disconnectedCallback && this.stage !== 3 /* Stages.disconnected */ ) behavior.disconnectedCallback(this);\n            behavior.removedCallback && behavior.removedCallback(this);\n        } else targetBehaviors.set(behavior, count - 1);\n    }\n    /**\n     * Adds styles to this element. Providing an HTMLStyleElement will attach the element instance to the shadowRoot.\n     * @param styles - The styles to add.\n     */ addStyles(styles) {\n        var _a;\n        if (!styles) return;\n        const source = this.source;\n        if (styles instanceof HTMLElement) {\n            const target = (_a = $b0fa72c1c098d988$var$getShadowRoot(source)) !== null && _a !== void 0 ? _a : this.source;\n            target.append(styles);\n        } else if (!styles.isAttachedTo(source)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.addStylesTo(source);\n            if (sourceBehaviors !== null) for(let i = 0, ii = sourceBehaviors.length; i < ii; ++i)this.addBehavior(sourceBehaviors[i]);\n        }\n    }\n    /**\n     * Removes styles from this element. Providing an HTMLStyleElement will detach the element instance from the shadowRoot.\n     * @param styles - the styles to remove.\n     */ removeStyles(styles) {\n        var _a;\n        if (!styles) return;\n        const source = this.source;\n        if (styles instanceof HTMLElement) {\n            const target = (_a = $b0fa72c1c098d988$var$getShadowRoot(source)) !== null && _a !== void 0 ? _a : source;\n            target.removeChild(styles);\n        } else if (styles.isAttachedTo(source)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.removeStylesFrom(source);\n            if (sourceBehaviors !== null) for(let i = 0, ii = sourceBehaviors.length; i < ii; ++i)this.removeBehavior(sourceBehaviors[i]);\n        }\n    }\n    /**\n     * Runs connected lifecycle behavior on the associated element.\n     */ connect() {\n        if (this.stage !== 3 /* Stages.disconnected */ ) return;\n        this.stage = 0 /* Stages.connecting */ ;\n        this.bindObservables();\n        this.connectBehaviors();\n        if (this.needsInitialization) {\n            this.renderTemplate(this.template);\n            this.addStyles(this.mainStyles);\n            this.needsInitialization = false;\n        } else if (this.view !== null) this.view.bind(this.source);\n        this.stage = 1 /* Stages.connected */ ;\n        (0, $536bd8e250404810$export$77cea355fa80b5f4).notify(this, $b0fa72c1c098d988$var$isConnectedPropertyName);\n    }\n    bindObservables() {\n        if (this.boundObservables !== null) {\n            const element = this.source;\n            const boundObservables = this.boundObservables;\n            const propertyNames = Object.keys(boundObservables);\n            for(let i = 0, ii = propertyNames.length; i < ii; ++i){\n                const propertyName = propertyNames[i];\n                element[propertyName] = boundObservables[propertyName];\n            }\n            this.boundObservables = null;\n        }\n    }\n    connectBehaviors() {\n        if (this.behaviorsConnected === false) {\n            const behaviors = this.behaviors;\n            if (behaviors !== null) {\n                this.guardBehaviorConnection = true;\n                for (const key of behaviors.keys())key.connectedCallback && key.connectedCallback(this);\n                this.guardBehaviorConnection = false;\n            }\n            this.behaviorsConnected = true;\n        }\n    }\n    disconnectBehaviors() {\n        if (this.behaviorsConnected === true) {\n            const behaviors = this.behaviors;\n            if (behaviors !== null) for (const key of behaviors.keys())key.disconnectedCallback && key.disconnectedCallback(this);\n            this.behaviorsConnected = false;\n        }\n    }\n    /**\n     * Runs disconnected lifecycle behavior on the associated element.\n     */ disconnect() {\n        if (this.stage !== 1 /* Stages.connected */ ) return;\n        this.stage = 2 /* Stages.disconnecting */ ;\n        (0, $536bd8e250404810$export$77cea355fa80b5f4).notify(this, $b0fa72c1c098d988$var$isConnectedPropertyName);\n        if (this.view !== null) this.view.unbind();\n        this.disconnectBehaviors();\n        this.stage = 3 /* Stages.disconnected */ ;\n    }\n    /**\n     * Runs the attribute changed callback for the associated element.\n     * @param name - The name of the attribute that changed.\n     * @param oldValue - The previous value of the attribute.\n     * @param newValue - The new value of the attribute.\n     */ onAttributeChangedCallback(name, oldValue, newValue) {\n        const attrDef = this.definition.attributeLookup[name];\n        if (attrDef !== void 0) attrDef.onAttributeChangedCallback(this.source, newValue);\n    }\n    /**\n     * Emits a custom HTML event.\n     * @param type - The type name of the event.\n     * @param detail - The event detail object to send with the event.\n     * @param options - The event options. By default bubbles and composed.\n     * @remarks\n     * Only emits events if connected.\n     */ emit(type, detail, options) {\n        if (this.stage === 1 /* Stages.connected */ ) return this.source.dispatchEvent(new CustomEvent(type, Object.assign(Object.assign({\n            detail: detail\n        }, $b0fa72c1c098d988$var$defaultEventOptions), options)));\n        return false;\n    }\n    renderTemplate(template) {\n        var _a;\n        // When getting the host to render to, we start by looking\n        // up the shadow root. If there isn't one, then that means\n        // we're doing a Light DOM render to the element's direct children.\n        const element = this.source;\n        const host = (_a = $b0fa72c1c098d988$var$getShadowRoot(element)) !== null && _a !== void 0 ? _a : element;\n        if (this.view !== null) {\n            // If there's already a view, we need to unbind and remove through dispose.\n            this.view.dispose();\n            this.view = null;\n        } else if (!this.needsInitialization || this.hasExistingShadowRoot) {\n            this.hasExistingShadowRoot = false;\n            // If there was previous custom rendering, we need to clear out the host.\n            for(let child = host.firstChild; child !== null; child = host.firstChild)host.removeChild(child);\n        }\n        if (template) {\n            // If a new template was provided, render it.\n            this.view = template.render(element, host, element);\n            this.view.sourceLifetime = (0, $536bd8e250404810$export$9a9eae009eb8780f).coupled;\n        }\n    }\n    /**\n     * Locates or creates a controller for the specified element.\n     * @param element - The element to return the controller for.\n     * @remarks\n     * The specified element must have a {@link FASTElementDefinition}\n     * registered either through the use of the {@link customElement}\n     * decorator or a call to `FASTElement.define`.\n     */ static forCustomElement(element) {\n        const controller = element.$fastController;\n        if (controller !== void 0) return controller;\n        const definition = (0, $e811c4e4610d6062$export$dbb8b6d358bc70ba).getForInstance(element);\n        if (definition === void 0) throw (0, $e1d30cf6f8cb997c$export$360e186c37756536).error(1401 /* Message.missingElementDefinition */ );\n        return element.$fastController = new $b0fa72c1c098d988$var$elementControllerStrategy(element, definition);\n    }\n    /**\n     * Sets the strategy that ElementController.forCustomElement uses to construct\n     * ElementController instances for an element.\n     * @param strategy - The strategy to use.\n     */ static setStrategy(strategy) {\n        $b0fa72c1c098d988$var$elementControllerStrategy = strategy;\n    }\n}\n(0, $e1d30cf6f8cb997c$export$997c5e5ecebc1b61)($b0fa72c1c098d988$export$c72c0f72b4b26c7e);\n// Set default strategy for ElementController\n$b0fa72c1c098d988$export$c72c0f72b4b26c7e.setStrategy($b0fa72c1c098d988$export$c72c0f72b4b26c7e);\n/**\n * Converts a styleTarget into the operative target. When the provided target is an Element\n * that is a FASTElement, the function will return the ShadowRoot for that element. Otherwise,\n * it will return the root node for the element.\n * @param target\n * @returns\n */ function $b0fa72c1c098d988$var$normalizeStyleTarget(target) {\n    var _a;\n    if (\"adoptedStyleSheets\" in target) return target;\n    else return (_a = $b0fa72c1c098d988$var$getShadowRoot(target)) !== null && _a !== void 0 ? _a : target.getRootNode();\n}\nclass $b0fa72c1c098d988$export$ff9a4b215f625f9a {\n    constructor(styles){\n        const styleSheetCache = $b0fa72c1c098d988$export$ff9a4b215f625f9a.styleSheetCache;\n        this.sheets = styles.map((x)=>{\n            if (x instanceof CSSStyleSheet) return x;\n            let sheet = styleSheetCache.get(x);\n            if (sheet === void 0) {\n                sheet = new CSSStyleSheet();\n                sheet.replaceSync(x);\n                styleSheetCache.set(x, sheet);\n            }\n            return sheet;\n        });\n    }\n    addStylesTo(target) {\n        $b0fa72c1c098d988$var$addAdoptedStyleSheets($b0fa72c1c098d988$var$normalizeStyleTarget(target), this.sheets);\n    }\n    removeStylesFrom(target) {\n        $b0fa72c1c098d988$var$removeAdoptedStyleSheets($b0fa72c1c098d988$var$normalizeStyleTarget(target), this.sheets);\n    }\n}\n$b0fa72c1c098d988$export$ff9a4b215f625f9a.styleSheetCache = new Map();\nlet $b0fa72c1c098d988$var$id = 0;\nconst $b0fa72c1c098d988$var$nextStyleId = ()=>`fast-${++$b0fa72c1c098d988$var$id}`;\nfunction $b0fa72c1c098d988$var$usableStyleTarget(target) {\n    return target === document ? document.body : target;\n}\nclass $b0fa72c1c098d988$export$e1686a201ec21b22 {\n    constructor(styles){\n        this.styles = styles;\n        this.styleClass = $b0fa72c1c098d988$var$nextStyleId();\n    }\n    addStylesTo(target) {\n        target = $b0fa72c1c098d988$var$usableStyleTarget($b0fa72c1c098d988$var$normalizeStyleTarget(target));\n        const styles = this.styles;\n        const styleClass = this.styleClass;\n        for(let i = 0; i < styles.length; i++){\n            const element = document.createElement(\"style\");\n            element.innerHTML = styles[i];\n            element.className = styleClass;\n            target.append(element);\n        }\n    }\n    removeStylesFrom(target) {\n        target = $b0fa72c1c098d988$var$usableStyleTarget($b0fa72c1c098d988$var$normalizeStyleTarget(target));\n        const styles = target.querySelectorAll(`.${this.styleClass}`);\n        for(let i = 0, ii = styles.length; i < ii; ++i)target.removeChild(styles[i]);\n    }\n}\nlet $b0fa72c1c098d988$var$addAdoptedStyleSheets = (target, sheets)=>{\n    target.adoptedStyleSheets = [\n        ...target.adoptedStyleSheets,\n        ...sheets\n    ];\n};\nlet $b0fa72c1c098d988$var$removeAdoptedStyleSheets = (target, sheets)=>{\n    target.adoptedStyleSheets = target.adoptedStyleSheets.filter((x)=>sheets.indexOf(x) === -1);\n};\nif ((0, $f4e8f5ffc787333e$export$5cb32fda821782e2).supportsAdoptedStyleSheets) {\n    try {\n        // Test if browser implementation uses FrozenArray.\n        // If not, use push / splice to alter the stylesheets\n        // in place. This circumvents a bug in Safari 16.4 where\n        // periodically, assigning the array would previously\n        // cause sheets to be removed.\n        document.adoptedStyleSheets.push();\n        document.adoptedStyleSheets.splice();\n        $b0fa72c1c098d988$var$addAdoptedStyleSheets = (target, sheets)=>{\n            target.adoptedStyleSheets.push(...sheets);\n        };\n        $b0fa72c1c098d988$var$removeAdoptedStyleSheets = (target, sheets)=>{\n            for (const sheet of sheets){\n                const index = target.adoptedStyleSheets.indexOf(sheet);\n                if (index !== -1) target.adoptedStyleSheets.splice(index, 1);\n            }\n        };\n    } catch (e) {\n    // Do nothing if an error is thrown, the default\n    // case handles FrozenArray.\n    }\n    (0, $f4e8f5ffc787333e$export$5cb32fda821782e2).setDefaultStrategy($b0fa72c1c098d988$export$ff9a4b215f625f9a);\n} else (0, $f4e8f5ffc787333e$export$5cb32fda821782e2).setDefaultStrategy($b0fa72c1c098d988$export$e1686a201ec21b22);\nconst $b0fa72c1c098d988$var$deferHydrationAttribute = \"defer-hydration\";\nconst $b0fa72c1c098d988$var$needsHydrationAttribute = \"needs-hydration\";\nclass $b0fa72c1c098d988$export$263e00ec4c78a647 extends $b0fa72c1c098d988$export$c72c0f72b4b26c7e {\n    static hydrationObserverHandler(records) {\n        for (const record of records){\n            $b0fa72c1c098d988$export$263e00ec4c78a647.hydrationObserver.unobserve(record.target);\n            record.target.$fastController.connect();\n        }\n    }\n    connect() {\n        var _a, _b;\n        // Initialize needsHydration on first connect\n        if (this.needsHydration === undefined) this.needsHydration = this.source.getAttribute($b0fa72c1c098d988$var$needsHydrationAttribute) !== null;\n        // If the `defer-hydration` attribute exists on the source,\n        // wait for it to be removed before continuing connection behavior.\n        if (this.source.hasAttribute($b0fa72c1c098d988$var$deferHydrationAttribute)) {\n            $b0fa72c1c098d988$export$263e00ec4c78a647.hydrationObserver.observe(this.source, {\n                attributeFilter: [\n                    $b0fa72c1c098d988$var$deferHydrationAttribute\n                ]\n            });\n            return;\n        }\n        // If the controller does not need to be hydrated, defer connection behavior\n        // to the base-class. This case handles element re-connection and initial connection\n        // of elements that did not get declarative shadow-dom emitted, as well as if an extending\n        // class\n        if (!this.needsHydration) {\n            super.connect();\n            return;\n        }\n        if (this.stage !== 3 /* Stages.disconnected */ ) return;\n        this.stage = 0 /* Stages.connecting */ ;\n        this.bindObservables();\n        this.connectBehaviors();\n        const element = this.source;\n        const host = (_a = $b0fa72c1c098d988$var$getShadowRoot(element)) !== null && _a !== void 0 ? _a : element;\n        if (this.template) {\n            if ((0, $2c7cec50df6e87c7$export$9934e196b2f5d5b7)(this.template)) {\n                let firstChild = host.firstChild;\n                let lastChild = host.lastChild;\n                if (element.shadowRoot === null) {\n                    // handle element boundary markers when shadowRoot is not present\n                    if ((0, $2c7cec50df6e87c7$export$d9a04faa81df4f36).isElementBoundaryStartMarker(firstChild)) {\n                        firstChild.data = \"\";\n                        firstChild = firstChild.nextSibling;\n                    }\n                    if ((0, $2c7cec50df6e87c7$export$d9a04faa81df4f36).isElementBoundaryEndMarker(lastChild)) {\n                        lastChild.data = \"\";\n                        lastChild = lastChild.previousSibling;\n                    }\n                }\n                this.view = this.template.hydrate(firstChild, lastChild, element);\n                (_b = this.view) === null || _b === void 0 || _b.bind(this.source);\n            } else this.renderTemplate(this.template);\n        }\n        this.addStyles(this.mainStyles);\n        this.stage = 1 /* Stages.connected */ ;\n        this.source.removeAttribute($b0fa72c1c098d988$var$needsHydrationAttribute);\n        this.needsInitialization = this.needsHydration = false;\n        (0, $536bd8e250404810$export$77cea355fa80b5f4).notify(this, $b0fa72c1c098d988$var$isConnectedPropertyName);\n    }\n    disconnect() {\n        super.disconnect();\n        $b0fa72c1c098d988$export$263e00ec4c78a647.hydrationObserver.unobserve(this.source);\n    }\n    static install() {\n        $b0fa72c1c098d988$export$c72c0f72b4b26c7e.setStrategy($b0fa72c1c098d988$export$263e00ec4c78a647);\n    }\n}\n$b0fa72c1c098d988$export$263e00ec4c78a647.hydrationObserver = new (0, $4627c40b03a7fc46$export$f68c7a96500f2aea)($b0fa72c1c098d988$export$263e00ec4c78a647.hydrationObserverHandler);\n\n\n\n/* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */ function $c96f3fac790afe8c$var$createFASTElement(BaseType) {\n    const type = class extends BaseType {\n        constructor(){\n            /* eslint-disable-next-line */ super();\n            (0, $b0fa72c1c098d988$export$c72c0f72b4b26c7e).forCustomElement(this);\n        }\n        $emit(type, detail, options) {\n            return this.$fastController.emit(type, detail, options);\n        }\n        connectedCallback() {\n            this.$fastController.connect();\n        }\n        disconnectedCallback() {\n            this.$fastController.disconnect();\n        }\n        attributeChangedCallback(name, oldValue, newValue) {\n            this.$fastController.onAttributeChangedCallback(name, oldValue, newValue);\n        }\n    };\n    (0, $e811c4e4610d6062$export$dbb8b6d358bc70ba).registerBaseType(type);\n    return type;\n}\nfunction $c96f3fac790afe8c$var$compose(type, nameOrDef) {\n    if ((0, $553e78d6498b7d22$export$f6e2535fb5126e54)(type)) return (0, $e811c4e4610d6062$export$dbb8b6d358bc70ba).compose(type, nameOrDef);\n    return (0, $e811c4e4610d6062$export$dbb8b6d358bc70ba).compose(this, type);\n}\nfunction $c96f3fac790afe8c$var$define(type, nameOrDef) {\n    if ((0, $553e78d6498b7d22$export$f6e2535fb5126e54)(type)) return (0, $e811c4e4610d6062$export$dbb8b6d358bc70ba).compose(type, nameOrDef).define().type;\n    return (0, $e811c4e4610d6062$export$dbb8b6d358bc70ba).compose(this, type).define().type;\n}\nfunction $c96f3fac790afe8c$var$from(BaseType) {\n    return $c96f3fac790afe8c$var$createFASTElement(BaseType);\n}\nconst $c96f3fac790afe8c$export$904ba5187827962e = Object.assign($c96f3fac790afe8c$var$createFASTElement(HTMLElement), {\n    from: /**\n     * Creates a new FASTElement base class inherited from the\n     * provided base type.\n     * @param BaseType - The base element type to inherit from.\n     */ $c96f3fac790afe8c$var$from,\n    define: /**\n     * Defines a platform custom element based on the provided type and definition.\n     * @param type - The custom element type to define.\n     * @param nameOrDef - The name of the element to define or a definition object\n     * that describes the element to define.\n     */ $c96f3fac790afe8c$var$define,\n    compose: /**\n     * Defines metadata for a FASTElement which can be used to later define the element.\n     * @public\n     */ $c96f3fac790afe8c$var$compose\n});\nfunction $c96f3fac790afe8c$export$da64fc29f17f9d0e(nameOrDef) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */ return function(type) {\n        $c96f3fac790afe8c$var$define(type, nameOrDef);\n    };\n}\n\n\n\n\n\n\n\nclass $61c950affd928ccc$var$OneTimeBinding extends (0, $d4cc7f2a173492b7$export$f4f50f872cf9bd86) {\n    createObserver() {\n        return this;\n    }\n    bind(controller) {\n        return this.evaluate(controller.source, controller.context);\n    }\n}\n(0, $e1d30cf6f8cb997c$export$997c5e5ecebc1b61)($61c950affd928ccc$var$OneTimeBinding);\nfunction $61c950affd928ccc$export$62b137a205137697(expression, policy) {\n    return new $61c950affd928ccc$var$OneTimeBinding(expression, policy);\n}\n\n\n\n\n\n\n\n\n\n\n\nclass $545669a1f403c4ef$export$431d786e0fa03e5f extends Error {\n    constructor(/**\n     * The error message\n     */ message, /**\n     * The Compiled View Behavior Factories that belong to the view.\n     */ factories, /**\n     * The node to target factory.\n     */ node){\n        super(message);\n        this.factories = factories;\n        this.node = node;\n    }\n}\nfunction $545669a1f403c4ef$var$isComment(node) {\n    return node.nodeType === Node.COMMENT_NODE;\n}\nfunction $545669a1f403c4ef$var$isText(node) {\n    return node.nodeType === Node.TEXT_NODE;\n}\nfunction $545669a1f403c4ef$export$33c30cbe164cb415(first, last) {\n    const range = document.createRange();\n    range.setStart(first, 0);\n    // The lastIndex should be inclusive of the end of the lastChild. Obtain offset based\n    // on usageNotes:  https://developer.mozilla.org/en-US/docs/Web/API/Range/setEnd#usage_notes\n    range.setEnd(last, $545669a1f403c4ef$var$isComment(last) || $545669a1f403c4ef$var$isText(last) ? last.data.length : last.childNodes.length);\n    return range;\n}\nfunction $545669a1f403c4ef$var$isShadowRoot(node) {\n    return node instanceof DocumentFragment && \"mode\" in node;\n}\nfunction $545669a1f403c4ef$export$26216c5b533261dd(firstNode, lastNode, factories) {\n    const range = $545669a1f403c4ef$export$33c30cbe164cb415(firstNode, lastNode);\n    const treeRoot = range.commonAncestorContainer;\n    const walker = document.createTreeWalker(treeRoot, NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_COMMENT + NodeFilter.SHOW_TEXT, {\n        acceptNode (node) {\n            return range.comparePoint(node, 0) === 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;\n        }\n    });\n    const targets = {};\n    const boundaries = {};\n    let node = walker.currentNode = firstNode;\n    while(node !== null){\n        switch(node.nodeType){\n            case Node.ELEMENT_NODE:\n                $545669a1f403c4ef$var$targetElement(node, factories, targets);\n                break;\n            case Node.COMMENT_NODE:\n                $545669a1f403c4ef$var$targetComment(node, walker, factories, targets, boundaries);\n                break;\n        }\n        node = walker.nextNode();\n    }\n    range.detach();\n    return {\n        targets: targets,\n        boundaries: boundaries\n    };\n}\nfunction $545669a1f403c4ef$var$targetElement(node, factories, targets) {\n    // Check for attributes and map any factories.\n    const attrFactoryIds = (0, $2c7cec50df6e87c7$export$d9a04faa81df4f36).parseAttributeBinding(node);\n    if (attrFactoryIds !== null) {\n        for (const id of attrFactoryIds){\n            if (!factories[id]) throw new $545669a1f403c4ef$export$431d786e0fa03e5f(`HydrationView was unable to successfully target factory on ${node.nodeName} inside ${node.getRootNode().host.nodeName}. This likely indicates a template mismatch between SSR rendering and hydration.`, factories, node);\n            $545669a1f403c4ef$export$814fd3cda928c189(factories[id], node, targets);\n        }\n        node.removeAttribute((0, $2c7cec50df6e87c7$export$d9a04faa81df4f36).attributeMarkerName);\n    }\n}\nfunction $545669a1f403c4ef$var$targetComment(node, walker, factories, targets, boundaries) {\n    if ((0, $2c7cec50df6e87c7$export$d9a04faa81df4f36).isElementBoundaryStartMarker(node)) {\n        $545669a1f403c4ef$var$skipToElementBoundaryEndMarker(node, walker);\n        return;\n    }\n    if ((0, $2c7cec50df6e87c7$export$d9a04faa81df4f36).isContentBindingStartMarker(node.data)) {\n        const parsed = (0, $2c7cec50df6e87c7$export$d9a04faa81df4f36).parseContentBindingStartMarker(node.data);\n        if (parsed === null) return;\n        const [index, id] = parsed;\n        const factory = factories[index];\n        const nodes = [];\n        let current = walker.nextSibling();\n        node.data = \"\";\n        const first = current;\n        // Search for the binding end marker that closes the binding.\n        while(current !== null){\n            if ($545669a1f403c4ef$var$isComment(current)) {\n                const parsed = (0, $2c7cec50df6e87c7$export$d9a04faa81df4f36).parseContentBindingEndMarker(current.data);\n                if (parsed && parsed[1] === id) break;\n            }\n            nodes.push(current);\n            current = walker.nextSibling();\n        }\n        if (current === null) {\n            const root = node.getRootNode();\n            throw new Error(`Error hydrating Comment node inside \"${$545669a1f403c4ef$var$isShadowRoot(root) ? root.host.nodeName : root.nodeName}\".`);\n        }\n        current.data = \"\";\n        if (nodes.length === 1 && $545669a1f403c4ef$var$isText(nodes[0])) $545669a1f403c4ef$export$814fd3cda928c189(factory, nodes[0], targets);\n        else {\n            // If current === first, it means there is no content in\n            // the view. This happens when a `when` directive evaluates false,\n            // or whenever a content binding returns null or undefined.\n            // In that case, there will never be any content\n            // to hydrate and Binding can simply create a HTMLView\n            // whenever it needs to.\n            if (current !== first && current.previousSibling !== null) boundaries[factory.targetNodeId] = {\n                first: first,\n                last: current.previousSibling\n            };\n            // Binding evaluates to null / undefined or a template.\n            // If binding revaluates to string, it will replace content in target\n            // So we always insert a text node to ensure that\n            // text content binding will be written to this text node instead of comment\n            const dummyTextNode = current.parentNode.insertBefore(document.createTextNode(\"\"), current);\n            $545669a1f403c4ef$export$814fd3cda928c189(factory, dummyTextNode, targets);\n        }\n    }\n}\n/**\n * Moves TreeWalker to element boundary end marker\n * @param node - element boundary start marker node\n * @param walker - tree walker\n */ function $545669a1f403c4ef$var$skipToElementBoundaryEndMarker(node, walker) {\n    const id = (0, $2c7cec50df6e87c7$export$d9a04faa81df4f36).parseElementBoundaryStartMarker(node.data);\n    let current = walker.nextSibling();\n    while(current !== null){\n        if ($545669a1f403c4ef$var$isComment(current)) {\n            const parsed = (0, $2c7cec50df6e87c7$export$d9a04faa81df4f36).parseElementBoundaryEndMarker(current.data);\n            if (parsed && parsed === id) break;\n        }\n        current = walker.nextSibling();\n    }\n}\nfunction $545669a1f403c4ef$export$814fd3cda928c189(factory, node, targets) {\n    if (factory.targetNodeId === undefined) // Dev error, this shouldn't ever be thrown\n    throw new Error(\"Factory could not be target to the node\");\n    targets[factory.targetNodeId] = node;\n}\n\n\n\n\nvar $c4b29108f07d34df$var$_a;\nfunction $c4b29108f07d34df$var$removeNodeSequence(firstNode, lastNode) {\n    const parent = firstNode.parentNode;\n    let current = firstNode;\n    let next;\n    while(current !== lastNode){\n        next = current.nextSibling;\n        if (!next) throw new Error(`Unmatched first/last child inside \"${lastNode.getRootNode().host.nodeName}\".`);\n        parent.removeChild(current);\n        current = next;\n    }\n    parent.removeChild(lastNode);\n}\nclass $c4b29108f07d34df$var$DefaultExecutionContext {\n    constructor(){\n        /**\n         * The index of the current item within a repeat context.\n         */ this.index = 0;\n        /**\n         * The length of the current collection within a repeat context.\n         */ this.length = 0;\n    }\n    /**\n     * The current event within an event handler.\n     */ get event() {\n        return (0, $536bd8e250404810$export$f7c638676c8af91d).getEvent();\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an even index.\n     */ get isEven() {\n        return this.index % 2 === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an odd index.\n     */ get isOdd() {\n        return this.index % 2 !== 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the first item in the collection.\n     */ get isFirst() {\n        return this.index === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is somewhere in the middle of the collection.\n     */ get isInMiddle() {\n        return !this.isFirst && !this.isLast;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the last item in the collection.\n     */ get isLast() {\n        return this.index === this.length - 1;\n    }\n    /**\n     * Returns the typed event detail of a custom event.\n     */ eventDetail() {\n        return this.event.detail;\n    }\n    /**\n     * Returns the typed event target of the event.\n     */ eventTarget() {\n        return this.event.target;\n    }\n}\nclass $c4b29108f07d34df$export$1b0b7079c4551d79 extends $c4b29108f07d34df$var$DefaultExecutionContext {\n    /**\n     * Constructs an instance of HTMLView.\n     * @param fragment - The html fragment that contains the nodes for this view.\n     * @param behaviors - The behaviors to be applied to this view.\n     */ constructor(fragment, factories, targets){\n        super();\n        this.fragment = fragment;\n        this.factories = factories;\n        this.targets = targets;\n        this.behaviors = null;\n        this.unbindables = [];\n        /**\n         * The data that the view is bound to.\n         */ this.source = null;\n        /**\n         * Indicates whether the controller is bound.\n         */ this.isBound = false;\n        /**\n         * Indicates how the source's lifetime relates to the controller's lifetime.\n         */ this.sourceLifetime = (0, $536bd8e250404810$export$9a9eae009eb8780f).unknown;\n        /**\n         * The execution context the view is running within.\n         */ this.context = this;\n        this.firstChild = fragment.firstChild;\n        this.lastChild = fragment.lastChild;\n    }\n    /**\n     * Appends the view's DOM nodes to the referenced node.\n     * @param node - The parent node to append the view's DOM nodes to.\n     */ appendTo(node) {\n        node.appendChild(this.fragment);\n    }\n    /**\n     * Inserts the view's DOM nodes before the referenced node.\n     * @param node - The node to insert the view's DOM before.\n     */ insertBefore(node) {\n        if (this.fragment.hasChildNodes()) node.parentNode.insertBefore(this.fragment, node);\n        else {\n            const end = this.lastChild;\n            if (node.previousSibling === end) return;\n            const parentNode = node.parentNode;\n            let current = this.firstChild;\n            let next;\n            while(current !== end){\n                next = current.nextSibling;\n                parentNode.insertBefore(current, node);\n                current = next;\n            }\n            parentNode.insertBefore(end, node);\n        }\n    }\n    /**\n     * Removes the view's DOM nodes.\n     * The nodes are not disposed and the view can later be re-inserted.\n     */ remove() {\n        const fragment = this.fragment;\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while(current !== end){\n            next = current.nextSibling;\n            fragment.appendChild(current);\n            current = next;\n        }\n        fragment.appendChild(end);\n    }\n    /**\n     * Removes the view and unbinds its behaviors, disposing of DOM nodes afterward.\n     * Once a view has been disposed, it cannot be inserted or bound again.\n     */ dispose() {\n        $c4b29108f07d34df$var$removeNodeSequence(this.firstChild, this.lastChild);\n        this.unbind();\n    }\n    onUnbind(behavior) {\n        this.unbindables.push(behavior);\n    }\n    /**\n     * Binds a view's behaviors to its binding source.\n     * @param source - The binding source for the view's binding behaviors.\n     * @param context - The execution context to run the behaviors within.\n     */ bind(source, context = this) {\n        if (this.source === source) return;\n        let behaviors = this.behaviors;\n        if (behaviors === null) {\n            this.source = source;\n            this.context = context;\n            this.behaviors = behaviors = new Array(this.factories.length);\n            const factories = this.factories;\n            for(let i = 0, ii = factories.length; i < ii; ++i){\n                const behavior = factories[i].createBehavior();\n                behavior.bind(this);\n                behaviors[i] = behavior;\n            }\n        } else {\n            if (this.source !== null) this.evaluateUnbindables();\n            this.isBound = false;\n            this.source = source;\n            this.context = context;\n            for(let i = 0, ii = behaviors.length; i < ii; ++i)behaviors[i].bind(this);\n        }\n        this.isBound = true;\n    }\n    /**\n     * Unbinds a view's behaviors from its binding source.\n     */ unbind() {\n        if (!this.isBound || this.source === null) return;\n        this.evaluateUnbindables();\n        this.source = null;\n        this.context = this;\n        this.isBound = false;\n    }\n    evaluateUnbindables() {\n        const unbindables = this.unbindables;\n        for(let i = 0, ii = unbindables.length; i < ii; ++i)unbindables[i].unbind(this);\n        unbindables.length = 0;\n    }\n    /**\n     * Efficiently disposes of a contiguous range of synthetic view instances.\n     * @param views - A contiguous range of views to be disposed.\n     */ static disposeContiguousBatch(views) {\n        if (views.length === 0) return;\n        $c4b29108f07d34df$var$removeNodeSequence(views[0].firstChild, views[views.length - 1].lastChild);\n        for(let i = 0, ii = views.length; i < ii; ++i)views[i].unbind();\n    }\n}\n(0, $e1d30cf6f8cb997c$export$997c5e5ecebc1b61)($c4b29108f07d34df$export$1b0b7079c4551d79);\n(0, $536bd8e250404810$export$77cea355fa80b5f4).defineProperty($c4b29108f07d34df$export$1b0b7079c4551d79.prototype, \"index\");\n(0, $536bd8e250404810$export$77cea355fa80b5f4).defineProperty($c4b29108f07d34df$export$1b0b7079c4551d79.prototype, \"length\");\nconst $c4b29108f07d34df$export$a8d753d276b93290 = {\n    unhydrated: \"unhydrated\",\n    hydrating: \"hydrating\",\n    hydrated: \"hydrated\"\n};\nclass $c4b29108f07d34df$export$ba65c3a861c05521 extends Error {\n    constructor(/**\n     * The error message\n     */ message, /**\n     * The factory that was unable to be bound\n     */ factory, /**\n     * A DocumentFragment containing a clone of the\n     * view's Nodes.\n     */ fragment, /**\n     * String representation of the HTML in the template that\n     * threw the binding error.\n     */ templateString){\n        super(message);\n        this.factory = factory;\n        this.fragment = fragment;\n        this.templateString = templateString;\n    }\n}\nclass $c4b29108f07d34df$export$1069297ec0b1f696 extends $c4b29108f07d34df$var$DefaultExecutionContext {\n    constructor(firstChild, lastChild, sourceTemplate, hostBindingTarget){\n        super();\n        this.firstChild = firstChild;\n        this.lastChild = lastChild;\n        this.sourceTemplate = sourceTemplate;\n        this.hostBindingTarget = hostBindingTarget;\n        this[$c4b29108f07d34df$var$_a] = (0, $2c7cec50df6e87c7$export$7393b5ded7a91eb8);\n        this.context = this;\n        this.source = null;\n        this.isBound = false;\n        this.sourceLifetime = (0, $536bd8e250404810$export$9a9eae009eb8780f).unknown;\n        this.unbindables = [];\n        this.fragment = null;\n        this.behaviors = null;\n        this._hydrationStage = $c4b29108f07d34df$export$a8d753d276b93290.unhydrated;\n        this._bindingViewBoundaries = {};\n        this._targets = {};\n        this.factories = sourceTemplate.compile().factories;\n    }\n    get hydrationStage() {\n        return this._hydrationStage;\n    }\n    get targets() {\n        return this._targets;\n    }\n    get bindingViewBoundaries() {\n        return this._bindingViewBoundaries;\n    }\n    /**\n     * no-op. Hydrated views are don't need to be moved from a documentFragment\n     * to the target node.\n     */ insertBefore(node) {\n        // No-op in cases where this is called before the view is removed,\n        // because the nodes will already be in the document and just need hydrating.\n        if (this.fragment === null) return;\n        if (this.fragment.hasChildNodes()) node.parentNode.insertBefore(this.fragment, node);\n        else {\n            const end = this.lastChild;\n            if (node.previousSibling === end) return;\n            const parentNode = node.parentNode;\n            let current = this.firstChild;\n            let next;\n            while(current !== end){\n                next = current.nextSibling;\n                parentNode.insertBefore(current, node);\n                current = next;\n            }\n            parentNode.insertBefore(end, node);\n        }\n    }\n    /**\n     * Appends the view to a node. In cases where this is called before the\n     * view has been removed, the method will no-op.\n     * @param node - the node to append the view to.\n     */ appendTo(node) {\n        if (this.fragment !== null) node.appendChild(this.fragment);\n    }\n    remove() {\n        const fragment = this.fragment || (this.fragment = document.createDocumentFragment());\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while(current !== end){\n            next = current.nextSibling;\n            if (!next) throw new Error(`Unmatched first/last child inside \"${end.getRootNode().host.nodeName}\".`);\n            fragment.appendChild(current);\n            current = next;\n        }\n        fragment.appendChild(end);\n    }\n    bind(source, context = this) {\n        var _b, _c;\n        if (this.hydrationStage !== $c4b29108f07d34df$export$a8d753d276b93290.hydrated) this._hydrationStage = $c4b29108f07d34df$export$a8d753d276b93290.hydrating;\n        if (this.source === source) return;\n        let behaviors = this.behaviors;\n        if (behaviors === null) {\n            this.source = source;\n            this.context = context;\n            try {\n                const { targets: targets, boundaries: boundaries } = (0, $545669a1f403c4ef$export$26216c5b533261dd)(this.firstChild, this.lastChild, this.factories);\n                this._targets = targets;\n                this._bindingViewBoundaries = boundaries;\n            } catch (error) {\n                if (error instanceof (0, $545669a1f403c4ef$export$431d786e0fa03e5f)) {\n                    let templateString = this.sourceTemplate.html;\n                    if (typeof templateString !== \"string\") templateString = templateString.innerHTML;\n                    error.templateString = templateString;\n                }\n                throw error;\n            }\n            this.behaviors = behaviors = new Array(this.factories.length);\n            const factories = this.factories;\n            for(let i = 0, ii = factories.length; i < ii; ++i){\n                const factory = factories[i];\n                if (factory.targetNodeId === \"h\" && this.hostBindingTarget) (0, $545669a1f403c4ef$export$814fd3cda928c189)(factory, this.hostBindingTarget, this._targets);\n                // If the binding has been targeted or it is a host binding and the view has a hostBindingTarget\n                if (factory.targetNodeId in this.targets) {\n                    const behavior = factory.createBehavior();\n                    behavior.bind(this);\n                    behaviors[i] = behavior;\n                } else {\n                    let templateString = this.sourceTemplate.html;\n                    if (typeof templateString !== \"string\") templateString = templateString.innerHTML;\n                    throw new $c4b29108f07d34df$export$ba65c3a861c05521(`HydrationView was unable to successfully target bindings inside \"${(_c = ((_b = this.firstChild) === null || _b === void 0 ? void 0 : _b.getRootNode()).host) === null || _c === void 0 ? void 0 : _c.nodeName}\".`, factory, (0, $545669a1f403c4ef$export$33c30cbe164cb415)(this.firstChild, this.lastChild).cloneContents(), templateString);\n                }\n            }\n        } else {\n            if (this.source !== null) this.evaluateUnbindables();\n            this.isBound = false;\n            this.source = source;\n            this.context = context;\n            for(let i = 0, ii = behaviors.length; i < ii; ++i)behaviors[i].bind(this);\n        }\n        this.isBound = true;\n        this._hydrationStage = $c4b29108f07d34df$export$a8d753d276b93290.hydrated;\n    }\n    unbind() {\n        if (!this.isBound || this.source === null) return;\n        this.evaluateUnbindables();\n        this.source = null;\n        this.context = this;\n        this.isBound = false;\n    }\n    /**\n     * Removes the view and unbinds its behaviors, disposing of DOM nodes afterward.\n     * Once a view has been disposed, it cannot be inserted or bound again.\n     */ dispose() {\n        $c4b29108f07d34df$var$removeNodeSequence(this.firstChild, this.lastChild);\n        this.unbind();\n    }\n    onUnbind(behavior) {\n        this.unbindables.push(behavior);\n    }\n    evaluateUnbindables() {\n        const unbindables = this.unbindables;\n        for(let i = 0, ii = unbindables.length; i < ii; ++i)unbindables[i].unbind(this);\n        unbindables.length = 0;\n    }\n}\n$c4b29108f07d34df$var$_a = (0, $2c7cec50df6e87c7$export$7393b5ded7a91eb8);\n(0, $e1d30cf6f8cb997c$export$997c5e5ecebc1b61)($c4b29108f07d34df$export$1069297ec0b1f696);\n\n\nfunction $a4c6739fd636375e$var$isContentTemplate(value) {\n    return value.create !== undefined;\n}\nfunction $a4c6739fd636375e$var$updateContent(target, aspect, value, controller) {\n    // If there's no actual value, then this equates to the\n    // empty string for the purposes of content bindings.\n    if (value === null || value === undefined) value = \"\";\n    // If the value has a \"create\" method, then it's a ContentTemplate.\n    if ($a4c6739fd636375e$var$isContentTemplate(value)) {\n        target.textContent = \"\";\n        let view = target.$fastView;\n        // If there's no previous view that we might be able to\n        // reuse then create a new view from the template.\n        if (view === void 0) {\n            if ((0, $2c7cec50df6e87c7$export$9934e196b2f5d5b7)(controller) && (0, $2c7cec50df6e87c7$export$9934e196b2f5d5b7)(value) && controller.bindingViewBoundaries[this.targetNodeId] !== undefined && controller.hydrationStage !== (0, $c4b29108f07d34df$export$a8d753d276b93290).hydrated) {\n                const viewNodes = controller.bindingViewBoundaries[this.targetNodeId];\n                view = value.hydrate(viewNodes.first, viewNodes.last);\n            } else view = value.create();\n        } else // If there is a previous view, but it wasn't created\n        // from the same template as the new value, then we\n        // need to remove the old view if it's still in the DOM\n        // and create a new view from the template.\n        if (target.$fastTemplate !== value) {\n            if (view.isComposed) {\n                view.remove();\n                view.unbind();\n            }\n            view = value.create();\n        }\n        // It's possible that the value is the same as the previous template\n        // and that there's actually no need to compose it.\n        if (!view.isComposed) {\n            view.isComposed = true;\n            view.bind(controller.source, controller.context);\n            view.insertBefore(target);\n            target.$fastView = view;\n            target.$fastTemplate = value;\n        } else if (view.needsBindOnly) {\n            view.needsBindOnly = false;\n            view.bind(controller.source, controller.context);\n        }\n    } else {\n        const view = target.$fastView;\n        // If there is a view and it's currently composed into\n        // the DOM, then we need to remove it.\n        if (view !== void 0 && view.isComposed) {\n            view.isComposed = false;\n            view.remove();\n            if (view.needsBindOnly) view.needsBindOnly = false;\n            else view.unbind();\n        }\n        target.textContent = value;\n    }\n}\nfunction $a4c6739fd636375e$var$updateTokenList(target, aspect, value) {\n    var _a;\n    const lookup = `${this.id}-t`;\n    const state = (_a = target[lookup]) !== null && _a !== void 0 ? _a : target[lookup] = {\n        v: 0,\n        cv: Object.create(null)\n    };\n    const classVersions = state.cv;\n    let version = state.v;\n    const tokenList = target[aspect];\n    // Add the classes, tracking the version at which they were added.\n    if (value !== null && value !== undefined && value.length) {\n        const names = value.split(/\\s+/);\n        for(let i = 0, ii = names.length; i < ii; ++i){\n            const currentName = names[i];\n            if (currentName === \"\") continue;\n            classVersions[currentName] = version;\n            tokenList.add(currentName);\n        }\n    }\n    state.v = version + 1;\n    // If this is the first call to add classes, there's no need to remove old ones.\n    if (version === 0) return;\n    // Remove classes from the previous version.\n    version -= 1;\n    for(const name in classVersions)if (classVersions[name] === version) tokenList.remove(name);\n}\nconst $a4c6739fd636375e$var$sinkLookup = {\n    [(0, $71bae6719b9971f3$export$b0076a1a9e24da9).attribute]: (0, $71bae6719b9971f3$export$cb0933279c36a66b).setAttribute,\n    [(0, $71bae6719b9971f3$export$b0076a1a9e24da9).booleanAttribute]: (0, $71bae6719b9971f3$export$cb0933279c36a66b).setBooleanAttribute,\n    [(0, $71bae6719b9971f3$export$b0076a1a9e24da9).property]: (t, a, v)=>t[a] = v,\n    [(0, $71bae6719b9971f3$export$b0076a1a9e24da9).content]: $a4c6739fd636375e$var$updateContent,\n    [(0, $71bae6719b9971f3$export$b0076a1a9e24da9).tokenList]: $a4c6739fd636375e$var$updateTokenList,\n    [(0, $71bae6719b9971f3$export$b0076a1a9e24da9).event]: ()=>void 0\n};\nclass $a4c6739fd636375e$export$c590b280af2e6950 {\n    /**\n     * Creates an instance of HTMLBindingDirective.\n     * @param dataBinding - The binding configuration to apply.\n     */ constructor(dataBinding){\n        this.dataBinding = dataBinding;\n        this.updateTarget = null;\n        /**\n         * The type of aspect to target.\n         */ this.aspectType = (0, $71bae6719b9971f3$export$b0076a1a9e24da9).content;\n    }\n    /**\n     * Creates HTML to be used within a template.\n     * @param add - Can be used to add  behavior factories to a template.\n     */ createHTML(add) {\n        return (0, $c8f825d8de076482$export$b925b7ba50a6200f).interpolation(add(this));\n    }\n    /**\n     * Creates a behavior.\n     */ createBehavior() {\n        var _a;\n        if (this.updateTarget === null) {\n            const sink = $a4c6739fd636375e$var$sinkLookup[this.aspectType];\n            const policy = (_a = this.dataBinding.policy) !== null && _a !== void 0 ? _a : this.policy;\n            if (!sink) throw (0, $e1d30cf6f8cb997c$export$360e186c37756536).error(1205 /* Message.unsupportedBindingBehavior */ );\n            this.data = `${this.id}-d`;\n            this.updateTarget = policy.protect(this.targetTagName, this.aspectType, this.targetAspect, sink);\n        }\n        return this;\n    }\n    /** @internal */ bind(controller) {\n        var _a;\n        const target = controller.targets[this.targetNodeId];\n        const isHydrating = (0, $2c7cec50df6e87c7$export$9934e196b2f5d5b7)(controller) && controller.hydrationStage && controller.hydrationStage !== (0, $c4b29108f07d34df$export$a8d753d276b93290).hydrated;\n        switch(this.aspectType){\n            case (0, $71bae6719b9971f3$export$b0076a1a9e24da9).event:\n                target[this.data] = controller;\n                target.addEventListener(this.targetAspect, this, this.dataBinding.options);\n                break;\n            case (0, $71bae6719b9971f3$export$b0076a1a9e24da9).content:\n                controller.onUnbind(this);\n            // intentional fall through\n            default:\n                const observer = (_a = target[this.data]) !== null && _a !== void 0 ? _a : target[this.data] = this.dataBinding.createObserver(this, this);\n                observer.target = target;\n                observer.controller = controller;\n                if (isHydrating && (this.aspectType === (0, $71bae6719b9971f3$export$b0076a1a9e24da9).attribute || this.aspectType === (0, $71bae6719b9971f3$export$b0076a1a9e24da9).booleanAttribute)) {\n                    observer.bind(controller);\n                    break;\n                }\n                this.updateTarget(target, this.targetAspect, observer.bind(controller), controller);\n                break;\n        }\n    }\n    /** @internal */ unbind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        const view = target.$fastView;\n        if (view !== void 0 && view.isComposed) {\n            view.unbind();\n            view.needsBindOnly = true;\n        }\n    }\n    /** @internal */ handleEvent(event) {\n        const controller = event.currentTarget[this.data];\n        if (controller.isBound) {\n            (0, $536bd8e250404810$export$f7c638676c8af91d).setEvent(event);\n            const result = this.dataBinding.evaluate(controller.source, controller.context);\n            (0, $536bd8e250404810$export$f7c638676c8af91d).setEvent(null);\n            if (result !== true) event.preventDefault();\n        }\n    }\n    /** @internal */ handleChange(binding, observer) {\n        const target = observer.target;\n        const controller = observer.controller;\n        this.updateTarget(target, this.targetAspect, observer.bind(controller), controller);\n    }\n}\n(0, $92a0f71e83c36791$export$3b3d5ef3c555d599).define($a4c6739fd636375e$export$c590b280af2e6950, {\n    aspected: true\n});\n\n\n\n\n\n\n\n\n\n\n\nconst $27553d59dc84703f$var$targetIdFrom = (parentId, nodeIndex)=>`${parentId}.${nodeIndex}`;\nconst $27553d59dc84703f$var$descriptorCache = {};\n// used to prevent creating lots of objects just to track node and index while compiling\nconst $27553d59dc84703f$var$next = {\n    index: 0,\n    node: null\n};\nfunction $27553d59dc84703f$var$tryWarn(name) {\n    if (!name.startsWith(\"fast-\")) (0, $e1d30cf6f8cb997c$export$360e186c37756536).warn(1204 /* Message.hostBindingWithoutHost */ , {\n        name: name\n    });\n}\nconst $27553d59dc84703f$var$warningHost = new Proxy(document.createElement(\"div\"), {\n    get (target, property) {\n        $27553d59dc84703f$var$tryWarn(property);\n        const value = Reflect.get(target, property);\n        return (0, $553e78d6498b7d22$export$f6e2535fb5126e54)(value) ? value.bind(target) : value;\n    },\n    set (target, property, value) {\n        $27553d59dc84703f$var$tryWarn(property);\n        return Reflect.set(target, property, value);\n    }\n});\nclass $27553d59dc84703f$var$CompilationContext {\n    constructor(fragment, directives, policy){\n        this.fragment = fragment;\n        this.directives = directives;\n        this.policy = policy;\n        this.proto = null;\n        this.nodeIds = new Set();\n        this.descriptors = {};\n        this.factories = [];\n    }\n    addFactory(factory, parentId, nodeId, targetIndex, tagName) {\n        var _a, _b;\n        if (!this.nodeIds.has(nodeId)) {\n            this.nodeIds.add(nodeId);\n            this.addTargetDescriptor(parentId, nodeId, targetIndex);\n        }\n        factory.id = (_a = factory.id) !== null && _a !== void 0 ? _a : (0, $c8f825d8de076482$export$79a1817568da084b)();\n        factory.targetNodeId = nodeId;\n        factory.targetTagName = tagName;\n        factory.policy = (_b = factory.policy) !== null && _b !== void 0 ? _b : this.policy;\n        this.factories.push(factory);\n    }\n    freeze() {\n        this.proto = Object.create(null, this.descriptors);\n        return this;\n    }\n    addTargetDescriptor(parentId, targetId, targetIndex) {\n        const descriptors = this.descriptors;\n        if (targetId === \"r\" || // root\n        targetId === \"h\" || // host\n        descriptors[targetId]) return;\n        if (!descriptors[parentId]) {\n            const index = parentId.lastIndexOf(\".\");\n            const grandparentId = parentId.substring(0, index);\n            const childIndex = parseInt(parentId.substring(index + 1));\n            this.addTargetDescriptor(grandparentId, parentId, childIndex);\n        }\n        let descriptor = $27553d59dc84703f$var$descriptorCache[targetId];\n        if (!descriptor) {\n            const field = `_${targetId}`;\n            $27553d59dc84703f$var$descriptorCache[targetId] = descriptor = {\n                get () {\n                    var _a;\n                    return (_a = this[field]) !== null && _a !== void 0 ? _a : this[field] = this[parentId].childNodes[targetIndex];\n                }\n            };\n        }\n        descriptors[targetId] = descriptor;\n    }\n    createView(hostBindingTarget) {\n        const fragment = this.fragment.cloneNode(true);\n        const targets = Object.create(this.proto);\n        targets.r = fragment;\n        targets.h = hostBindingTarget !== null && hostBindingTarget !== void 0 ? hostBindingTarget : $27553d59dc84703f$var$warningHost;\n        for (const id of this.nodeIds)targets[id]; // trigger locator\n        return new (0, $c4b29108f07d34df$export$1b0b7079c4551d79)(fragment, this.factories, targets);\n    }\n}\nfunction $27553d59dc84703f$var$compileAttributes(context, parentId, node, nodeId, nodeIndex, includeBasicValues = false) {\n    const attributes = node.attributes;\n    const directives = context.directives;\n    for(let i = 0, ii = attributes.length; i < ii; ++i){\n        const attr = attributes[i];\n        const attrValue = attr.value;\n        const parseResult = (0, $c8f825d8de076482$export$7acfa6ed01010e37).parse(attrValue, directives);\n        let result = null;\n        if (parseResult === null) {\n            if (includeBasicValues) {\n                result = new (0, $a4c6739fd636375e$export$c590b280af2e6950)((0, $61c950affd928ccc$export$62b137a205137697)(()=>attrValue, context.policy));\n                (0, $92a0f71e83c36791$export$3b3d5ef3c555d599).assignAspect(result, attr.name);\n            }\n        } else /* eslint-disable-next-line @typescript-eslint/no-use-before-define */ result = $27553d59dc84703f$export$3a6335acfcf707c9.aggregate(parseResult, context.policy);\n        if (result !== null) {\n            node.removeAttributeNode(attr);\n            i--;\n            ii--;\n            context.addFactory(result, parentId, nodeId, nodeIndex, node.tagName);\n        }\n    }\n}\nfunction $27553d59dc84703f$var$compileContent(context, node, parentId, nodeId, nodeIndex) {\n    const parseResult = (0, $c8f825d8de076482$export$7acfa6ed01010e37).parse(node.textContent, context.directives);\n    if (parseResult === null) {\n        $27553d59dc84703f$var$next.node = node.nextSibling;\n        $27553d59dc84703f$var$next.index = nodeIndex + 1;\n        return $27553d59dc84703f$var$next;\n    }\n    let currentNode;\n    let lastNode = currentNode = node;\n    for(let i = 0, ii = parseResult.length; i < ii; ++i){\n        const currentPart = parseResult[i];\n        if (i !== 0) {\n            nodeIndex++;\n            nodeId = $27553d59dc84703f$var$targetIdFrom(parentId, nodeIndex);\n            currentNode = lastNode.parentNode.insertBefore(document.createTextNode(\"\"), lastNode.nextSibling);\n        }\n        if ((0, $553e78d6498b7d22$export$844ec244b1367d54)(currentPart)) currentNode.textContent = currentPart;\n        else {\n            currentNode.textContent = \" \";\n            (0, $92a0f71e83c36791$export$3b3d5ef3c555d599).assignAspect(currentPart);\n            context.addFactory(currentPart, parentId, nodeId, nodeIndex, null);\n        }\n        lastNode = currentNode;\n    }\n    $27553d59dc84703f$var$next.index = nodeIndex + 1;\n    $27553d59dc84703f$var$next.node = lastNode.nextSibling;\n    return $27553d59dc84703f$var$next;\n}\nfunction $27553d59dc84703f$var$compileChildren(context, parent, parentId) {\n    let nodeIndex = 0;\n    let childNode = parent.firstChild;\n    while(childNode){\n        /* eslint-disable-next-line @typescript-eslint/no-use-before-define */ const result = $27553d59dc84703f$var$compileNode(context, parentId, childNode, nodeIndex);\n        childNode = result.node;\n        nodeIndex = result.index;\n    }\n}\nfunction $27553d59dc84703f$var$compileNode(context, parentId, node, nodeIndex) {\n    const nodeId = $27553d59dc84703f$var$targetIdFrom(parentId, nodeIndex);\n    switch(node.nodeType){\n        case 1:\n            $27553d59dc84703f$var$compileAttributes(context, parentId, node, nodeId, nodeIndex);\n            $27553d59dc84703f$var$compileChildren(context, node, nodeId);\n            break;\n        case 3:\n            return $27553d59dc84703f$var$compileContent(context, node, parentId, nodeId, nodeIndex);\n        case 8:\n            const parts = (0, $c8f825d8de076482$export$7acfa6ed01010e37).parse(node.data, context.directives);\n            if (parts !== null) context.addFactory(/* eslint-disable-next-line @typescript-eslint/no-use-before-define */ $27553d59dc84703f$export$3a6335acfcf707c9.aggregate(parts), parentId, nodeId, nodeIndex, null);\n            break;\n    }\n    $27553d59dc84703f$var$next.index = nodeIndex + 1;\n    $27553d59dc84703f$var$next.node = node.nextSibling;\n    return $27553d59dc84703f$var$next;\n}\nfunction $27553d59dc84703f$var$isMarker(node, directives) {\n    return node && node.nodeType == 8 && (0, $c8f825d8de076482$export$7acfa6ed01010e37).parse(node.data, directives) !== null;\n}\nconst $27553d59dc84703f$var$templateTag = \"TEMPLATE\";\nconst $27553d59dc84703f$export$3a6335acfcf707c9 = {\n    /**\n     * Compiles a template and associated directives into a compilation\n     * result which can be used to create views.\n     * @param html - The html string or template element to compile.\n     * @param factories - The behavior factories referenced by the template.\n     * @param policy - The security policy to compile the html with.\n     * @remarks\n     * The template that is provided for compilation is altered in-place\n     * and cannot be compiled again. If the original template must be preserved,\n     * it is recommended that you clone the original and pass the clone to this API.\n     * @public\n     */ compile (html, factories, policy = (0, $71bae6719b9971f3$export$cb0933279c36a66b).policy) {\n        let template;\n        if ((0, $553e78d6498b7d22$export$844ec244b1367d54)(html)) {\n            template = document.createElement($27553d59dc84703f$var$templateTag);\n            template.innerHTML = policy.createHTML(html);\n            const fec = template.content.firstElementChild;\n            if (fec !== null && fec.tagName === $27553d59dc84703f$var$templateTag) template = fec;\n        } else template = html;\n        if (!template.content.firstChild && !template.content.lastChild) template.content.appendChild(document.createComment(\"\"));\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1111864\n        const fragment = document.adoptNode(template.content);\n        const context = new $27553d59dc84703f$var$CompilationContext(fragment, factories, policy);\n        $27553d59dc84703f$var$compileAttributes(context, \"\", template, /* host */ \"h\", 0, true);\n        if (// If the first node in a fragment is a marker, that means it's an unstable first node,\n        // because something like a when, repeat, etc. could add nodes before the marker.\n        // To mitigate this, we insert a stable first node. However, if we insert a node,\n        // that will alter the result of the TreeWalker. So, we also need to offset the target index.\n        $27553d59dc84703f$var$isMarker(fragment.firstChild, factories) || // Or if there is only one node and a directive, it means the template's content\n        // is *only* the directive. In that case, HTMLView.dispose() misses any nodes inserted by\n        // the directive. Inserting a new node ensures proper disposal of nodes added by the directive.\n        fragment.childNodes.length === 1 && Object.keys(factories).length > 0) fragment.insertBefore(document.createComment(\"\"), fragment.firstChild);\n        $27553d59dc84703f$var$compileChildren(context, fragment, /* root */ \"r\");\n        $27553d59dc84703f$var$next.node = null; // prevent leaks\n        return context.freeze();\n    },\n    /**\n     * Sets the default compilation strategy that will be used by the ViewTemplate whenever\n     * it needs to compile a view preprocessed with the html template function.\n     * @param strategy - The compilation strategy to use when compiling templates.\n     */ setDefaultStrategy (strategy) {\n        this.compile = strategy;\n    },\n    /**\n     * Aggregates an array of strings and directives into a single directive.\n     * @param parts - A heterogeneous array of static strings interspersed with\n     * directives.\n     * @param policy - The security policy to use with the aggregated bindings.\n     * @returns A single inline directive that aggregates the behavior of all the parts.\n     */ aggregate (parts, policy = (0, $71bae6719b9971f3$export$cb0933279c36a66b).policy) {\n        if (parts.length === 1) return parts[0];\n        let sourceAspect;\n        let isVolatile = false;\n        let bindingPolicy = void 0;\n        const partCount = parts.length;\n        const finalParts = parts.map((x)=>{\n            if ((0, $553e78d6498b7d22$export$844ec244b1367d54)(x)) return ()=>x;\n            sourceAspect = x.sourceAspect || sourceAspect;\n            isVolatile = isVolatile || x.dataBinding.isVolatile;\n            bindingPolicy = bindingPolicy || x.dataBinding.policy;\n            return x.dataBinding.evaluate;\n        });\n        const expression = (scope, context)=>{\n            let output = \"\";\n            for(let i = 0; i < partCount; ++i)output += finalParts[i](scope, context);\n            return output;\n        };\n        const directive = new (0, $a4c6739fd636375e$export$c590b280af2e6950)((0, $f0534c3e114f3b42$export$d013c21e6c7cf47e)(expression, bindingPolicy !== null && bindingPolicy !== void 0 ? bindingPolicy : policy, isVolatile));\n        (0, $92a0f71e83c36791$export$3b3d5ef3c555d599).assignAspect(directive, sourceAspect);\n        return directive;\n    }\n};\n\n\n\n\n// Much thanks to LitHTML for working this out!\nconst $9c750268536c24e0$var$lastAttributeNameRegex = /* eslint-disable-next-line no-control-regex, max-len */ /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\nconst $9c750268536c24e0$var$noFactories = Object.create(null);\nclass $9c750268536c24e0$export$f5439a5bc3830f91 {\n    /**\n     * Creates an instance of InlineTemplateDirective.\n     * @param template - The template to inline.\n     */ constructor(html, factories = $9c750268536c24e0$var$noFactories){\n        this.html = html;\n        this.factories = factories;\n    }\n    /**\n     * Creates HTML to be used within a template.\n     * @param add - Can be used to add  behavior factories to a template.\n     */ createHTML(add) {\n        const factories = this.factories;\n        for(const key in factories)add(factories[key]);\n        return this.html;\n    }\n}\n/**\n * An empty template partial.\n */ $9c750268536c24e0$export$f5439a5bc3830f91.empty = new $9c750268536c24e0$export$f5439a5bc3830f91(\"\");\n(0, $92a0f71e83c36791$export$3b3d5ef3c555d599).define($9c750268536c24e0$export$f5439a5bc3830f91);\nfunction $9c750268536c24e0$var$createHTML(value, prevString, add, definition = (0, $92a0f71e83c36791$export$3b3d5ef3c555d599).getForInstance(value)) {\n    if (definition.aspected) {\n        const match = $9c750268536c24e0$var$lastAttributeNameRegex.exec(prevString);\n        if (match !== null) (0, $92a0f71e83c36791$export$3b3d5ef3c555d599).assignAspect(value, match[2]);\n    }\n    return value.createHTML(add);\n}\nclass $9c750268536c24e0$export$98f7e629c251afe6 {\n    /**\n     * Creates an instance of ViewTemplate.\n     * @param html - The html representing what this template will instantiate, including placeholders for directives.\n     * @param factories - The directives that will be connected to placeholders in the html.\n     * @param policy - The security policy to use when compiling this template.\n     */ constructor(html, factories = {}, policy){\n        this.policy = policy;\n        this.result = null;\n        this.html = html;\n        this.factories = factories;\n    }\n    /**\n     * @internal\n     */ compile() {\n        if (this.result === null) this.result = (0, $27553d59dc84703f$export$3a6335acfcf707c9).compile(this.html, this.factories, this.policy);\n        return this.result;\n    }\n    /**\n     * Creates an HTMLView instance based on this template definition.\n     * @param hostBindingTarget - The element that host behaviors will be bound to.\n     */ create(hostBindingTarget) {\n        return this.compile().createView(hostBindingTarget);\n    }\n    /**\n     * Returns a directive that can inline the template.\n     */ inline() {\n        return new $9c750268536c24e0$export$f5439a5bc3830f91((0, $553e78d6498b7d22$export$844ec244b1367d54)(this.html) ? this.html : this.html.innerHTML, this.factories);\n    }\n    /**\n     * Sets the DOMPolicy for this template.\n     * @param policy - The policy to associated with this template.\n     * @returns The modified template instance.\n     * @remarks\n     * The DOMPolicy can only be set once for a template and cannot be\n     * set after the template is compiled.\n     */ withPolicy(policy) {\n        if (this.result) throw (0, $e1d30cf6f8cb997c$export$360e186c37756536).error(1208 /* Message.cannotSetTemplatePolicyAfterCompilation */ );\n        if (this.policy) throw (0, $e1d30cf6f8cb997c$export$360e186c37756536).error(1207 /* Message.onlySetTemplatePolicyOnce */ );\n        this.policy = policy;\n        return this;\n    }\n    /**\n     * Creates an HTMLView from this template, binds it to the source, and then appends it to the host.\n     * @param source - The data source to bind the template to.\n     * @param host - The Element where the template will be rendered.\n     * @param hostBindingTarget - An HTML element to target the host bindings at if different from the\n     * host that the template is being attached to.\n     */ render(source, host, hostBindingTarget) {\n        const view = this.create(hostBindingTarget);\n        view.bind(source);\n        view.appendTo(host);\n        return view;\n    }\n    /**\n     * Creates a template based on a set of static strings and dynamic values.\n     * @param strings - The static strings to create the template with.\n     * @param values - The dynamic values to create the template with.\n     * @param policy - The DOMPolicy to associated with the template.\n     * @returns A ViewTemplate.\n     * @remarks\n     * This API should not be used directly under normal circumstances because constructing\n     * a template in this way, if not done properly, can open up the application to XSS\n     * attacks. When using this API, provide a strong DOMPolicy that can properly sanitize\n     * and also be sure to manually sanitize all static strings particularly if they can\n     * come from user input.\n     */ static create(strings, values, policy) {\n        let html = \"\";\n        const factories = Object.create(null);\n        const add = (factory)=>{\n            var _a;\n            const id = (_a = factory.id) !== null && _a !== void 0 ? _a : factory.id = (0, $c8f825d8de076482$export$79a1817568da084b)();\n            factories[id] = factory;\n            return id;\n        };\n        for(let i = 0, ii = strings.length - 1; i < ii; ++i){\n            const currentString = strings[i];\n            let currentValue = values[i];\n            let definition;\n            html += currentString;\n            if ((0, $553e78d6498b7d22$export$f6e2535fb5126e54)(currentValue)) currentValue = new (0, $a4c6739fd636375e$export$c590b280af2e6950)((0, $f0534c3e114f3b42$export$d013c21e6c7cf47e)(currentValue));\n            else if (currentValue instanceof (0, $d4cc7f2a173492b7$export$f4f50f872cf9bd86)) currentValue = new (0, $a4c6739fd636375e$export$c590b280af2e6950)(currentValue);\n            else if (!(definition = (0, $92a0f71e83c36791$export$3b3d5ef3c555d599).getForInstance(currentValue))) {\n                const staticValue = currentValue;\n                currentValue = new (0, $a4c6739fd636375e$export$c590b280af2e6950)((0, $61c950affd928ccc$export$62b137a205137697)(()=>staticValue));\n            }\n            html += $9c750268536c24e0$var$createHTML(currentValue, currentString, add, definition);\n        }\n        return new $9c750268536c24e0$export$98f7e629c251afe6(html + strings[strings.length - 1], factories, policy);\n    }\n}\n(0, $e1d30cf6f8cb997c$export$997c5e5ecebc1b61)($9c750268536c24e0$export$98f7e629c251afe6);\nconst $9c750268536c24e0$export$c0bb0b647f701bb5 = (strings, ...values)=>{\n    if (Array.isArray(strings) && Array.isArray(strings.raw)) return $9c750268536c24e0$export$98f7e629c251afe6.create(strings, values);\n    throw (0, $e1d30cf6f8cb997c$export$360e186c37756536).error(1206 /* Message.directCallToHTMLTagNotAllowed */ );\n};\n$9c750268536c24e0$export$c0bb0b647f701bb5.partial = (html)=>{\n    return new $9c750268536c24e0$export$f5439a5bc3830f91(html);\n};\n\n\n\n\n\n\nclass $3c437a811fef0672$export$ceb3ee475cfd64d1 {\n    /**\n     * Creates a splice.\n     * @param index - The index that the splice occurs at.\n     * @param removed - The items that were removed.\n     * @param addedCount - The  number of items that were added.\n     */ constructor(index, removed, addedCount){\n        this.index = index;\n        this.removed = removed;\n        this.addedCount = addedCount;\n    }\n    /**\n     * Adjusts the splice index based on the provided array.\n     * @param array - The array to adjust to.\n     * @returns The same splice, mutated based on the reference array.\n     */ adjustTo(array) {\n        let index = this.index;\n        const arrayLength = array.length;\n        if (index > arrayLength) index = arrayLength - this.addedCount;\n        else if (index < 0) index = arrayLength + this.removed.length + index - this.addedCount;\n        this.index = index < 0 ? 0 : index;\n        return this;\n    }\n}\nconst $3c437a811fef0672$export$2bfb3010befe266c = Object.freeze({\n    /**\n     * Only supports resets.\n     */ reset: 1,\n    /**\n     * Supports tracking splices and resets.\n     */ splice: 2,\n    /**\n     * Supports tracking splices and resets, while applying some form\n     * of optimization, such as merging, to the splices.\n     */ optimized: 3\n});\nconst $3c437a811fef0672$var$reset = new $3c437a811fef0672$export$ceb3ee475cfd64d1(0, (0, $e1d30cf6f8cb997c$export$d3ae4127996a91af), 0);\n$3c437a811fef0672$var$reset.reset = true;\nconst $3c437a811fef0672$var$resetSplices = [\n    $3c437a811fef0672$var$reset\n];\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' to '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction $3c437a811fef0672$var$calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    // \"Deletion\" columns\n    const rowCount = oldEnd - oldStart + 1;\n    const columnCount = currentEnd - currentStart + 1;\n    const distances = new Array(rowCount);\n    let north;\n    let west;\n    // \"Addition\" rows. Initialize null column.\n    for(let i = 0; i < rowCount; ++i){\n        distances[i] = new Array(columnCount);\n        distances[i][0] = i;\n    }\n    // Initialize null row\n    for(let j = 0; j < columnCount; ++j)distances[0][j] = j;\n    for(let i = 1; i < rowCount; ++i){\n        for(let j = 1; j < columnCount; ++j)if (current[currentStart + j - 1] === old[oldStart + i - 1]) distances[i][j] = distances[i - 1][j - 1];\n        else {\n            north = distances[i - 1][j] + 1;\n            west = distances[i][j - 1] + 1;\n            distances[i][j] = north < west ? north : west;\n        }\n    }\n    return distances;\n}\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction $3c437a811fef0672$var$spliceOperationsFromEditDistances(distances) {\n    let i = distances.length - 1;\n    let j = distances[0].length - 1;\n    let current = distances[i][j];\n    const edits = [];\n    while(i > 0 || j > 0){\n        if (i === 0) {\n            edits.push(2 /* Edit.add */ );\n            j--;\n            continue;\n        }\n        if (j === 0) {\n            edits.push(3 /* Edit.delete */ );\n            i--;\n            continue;\n        }\n        const northWest = distances[i - 1][j - 1];\n        const west = distances[i - 1][j];\n        const north = distances[i][j - 1];\n        let min;\n        if (west < north) min = west < northWest ? west : northWest;\n        else min = north < northWest ? north : northWest;\n        if (min === northWest) {\n            if (northWest === current) edits.push(0 /* Edit.leave */ );\n            else {\n                edits.push(1 /* Edit.update */ );\n                current = northWest;\n            }\n            i--;\n            j--;\n        } else if (min === west) {\n            edits.push(3 /* Edit.delete */ );\n            i--;\n            current = west;\n        } else {\n            edits.push(2 /* Edit.add */ );\n            j--;\n            current = north;\n        }\n    }\n    return edits.reverse();\n}\nfunction $3c437a811fef0672$var$sharedPrefix(current, old, searchLength) {\n    for(let i = 0; i < searchLength; ++i){\n        if (current[i] !== old[i]) return i;\n    }\n    return searchLength;\n}\nfunction $3c437a811fef0672$var$sharedSuffix(current, old, searchLength) {\n    let index1 = current.length;\n    let index2 = old.length;\n    let count = 0;\n    while(count < searchLength && current[--index1] === old[--index2])count++;\n    return count;\n}\nfunction $3c437a811fef0672$var$intersect(start1, end1, start2, end2) {\n    // Disjoint\n    if (end1 < start2 || end2 < start1) return -1;\n    // Adjacent\n    if (end1 === start2 || end2 === start1) return 0;\n    // Non-zero intersect, span1 first\n    if (start1 < start2) {\n        if (end1 < end2) return end1 - start2; // Overlap\n        return end2 - start2; // Contained\n    }\n    // Non-zero intersect, span2 first\n    if (end2 < end1) return end2 - start1; // Overlap\n    return end1 - start1; // Contained\n}\n/**\n * @remarks\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n */ function $3c437a811fef0672$var$calc(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    let prefixCount = 0;\n    let suffixCount = 0;\n    const minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart === 0 && oldStart === 0) prefixCount = $3c437a811fef0672$var$sharedPrefix(current, old, minLength);\n    if (currentEnd === current.length && oldEnd === old.length) suffixCount = $3c437a811fef0672$var$sharedSuffix(current, old, minLength - prefixCount);\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n    if (currentEnd - currentStart === 0 && oldEnd - oldStart === 0) return 0, $e1d30cf6f8cb997c$export$d3ae4127996a91af;\n    if (currentStart === currentEnd) {\n        const splice = new $3c437a811fef0672$export$ceb3ee475cfd64d1(currentStart, [], 0);\n        while(oldStart < oldEnd)splice.removed.push(old[oldStart++]);\n        return [\n            splice\n        ];\n    } else if (oldStart === oldEnd) return [\n        new $3c437a811fef0672$export$ceb3ee475cfd64d1(currentStart, [], currentEnd - currentStart)\n    ];\n    const ops = $3c437a811fef0672$var$spliceOperationsFromEditDistances($3c437a811fef0672$var$calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));\n    const splices = [];\n    let splice = void 0;\n    let index = currentStart;\n    let oldIndex = oldStart;\n    for(let i = 0; i < ops.length; ++i)switch(ops[i]){\n        case 0 /* Edit.leave */ :\n            if (splice !== void 0) {\n                splices.push(splice);\n                splice = void 0;\n            }\n            index++;\n            oldIndex++;\n            break;\n        case 1 /* Edit.update */ :\n            if (splice === void 0) splice = new $3c437a811fef0672$export$ceb3ee475cfd64d1(index, [], 0);\n            splice.addedCount++;\n            index++;\n            splice.removed.push(old[oldIndex]);\n            oldIndex++;\n            break;\n        case 2 /* Edit.add */ :\n            if (splice === void 0) splice = new $3c437a811fef0672$export$ceb3ee475cfd64d1(index, [], 0);\n            splice.addedCount++;\n            index++;\n            break;\n        case 3 /* Edit.delete */ :\n            if (splice === void 0) splice = new $3c437a811fef0672$export$ceb3ee475cfd64d1(index, [], 0);\n            splice.removed.push(old[oldIndex]);\n            oldIndex++;\n            break;\n    }\n    if (splice !== void 0) splices.push(splice);\n    return splices;\n}\nfunction $3c437a811fef0672$var$merge(splice, splices) {\n    let inserted = false;\n    let insertionOffset = 0;\n    for(let i = 0; i < splices.length; i++){\n        const current = splices[i];\n        current.index += insertionOffset;\n        if (inserted) continue;\n        const intersectCount = $3c437a811fef0672$var$intersect(splice.index, splice.index + splice.removed.length, current.index, current.index + current.addedCount);\n        if (intersectCount >= 0) {\n            // Merge the two splices\n            splices.splice(i, 1);\n            i--;\n            insertionOffset -= current.addedCount - current.removed.length;\n            splice.addedCount += current.addedCount - intersectCount;\n            const deleteCount = splice.removed.length + current.removed.length - intersectCount;\n            if (!splice.addedCount && !deleteCount) // merged splice is a noop. discard.\n            inserted = true;\n            else {\n                let currentRemoved = current.removed;\n                if (splice.index < current.index) {\n                    // some prefix of splice.removed is prepended to current.removed.\n                    const prepend = splice.removed.slice(0, current.index - splice.index);\n                    prepend.push(...currentRemoved);\n                    currentRemoved = prepend;\n                }\n                if (splice.index + splice.removed.length > current.index + current.addedCount) {\n                    // some suffix of splice.removed is appended to current.removed.\n                    const append = splice.removed.slice(current.index + current.addedCount - splice.index);\n                    currentRemoved.push(...append);\n                }\n                splice.removed = currentRemoved;\n                if (current.index < splice.index) splice.index = current.index;\n            }\n        } else if (splice.index < current.index) {\n            // Insert splice here.\n            inserted = true;\n            splices.splice(i, 0, splice);\n            i++;\n            const offset = splice.addedCount - splice.removed.length;\n            current.index += offset;\n            insertionOffset += offset;\n        }\n    }\n    if (!inserted) splices.push(splice);\n}\nfunction $3c437a811fef0672$var$project(array, changes) {\n    let splices = [];\n    const initialSplices = [];\n    for(let i = 0, ii = changes.length; i < ii; i++)$3c437a811fef0672$var$merge(changes[i], initialSplices);\n    for(let i = 0, ii = initialSplices.length; i < ii; ++i){\n        const splice = initialSplices[i];\n        if (splice.addedCount === 1 && splice.removed.length === 1) {\n            if (splice.removed[0] !== array[splice.index]) splices.push(splice);\n            continue;\n        }\n        splices = splices.concat($3c437a811fef0672$var$calc(array, splice.index, splice.index + splice.addedCount, splice.removed, 0, splice.removed.length));\n    }\n    return splices;\n}\n/**\n * A SpliceStrategy that attempts to merge all splices into the minimal set of\n * splices needed to represent the change from the old array to the new array.\n * @public\n */ let $3c437a811fef0672$var$defaultSpliceStrategy = Object.freeze({\n    support: $3c437a811fef0672$export$2bfb3010befe266c.optimized,\n    normalize (previous, current, changes) {\n        if (previous === void 0) {\n            if (changes === void 0) return 0, $e1d30cf6f8cb997c$export$d3ae4127996a91af;\n            return $3c437a811fef0672$var$project(current, changes);\n        }\n        return $3c437a811fef0672$var$resetSplices;\n    },\n    pop (array, observer, pop, args) {\n        const notEmpty = array.length > 0;\n        const result = pop.apply(array, args);\n        if (notEmpty) observer.addSplice(new $3c437a811fef0672$export$ceb3ee475cfd64d1(array.length, [\n            result\n        ], 0));\n        return result;\n    },\n    push (array, observer, push, args) {\n        const result = push.apply(array, args);\n        observer.addSplice(new $3c437a811fef0672$export$ceb3ee475cfd64d1(array.length - args.length, [], args.length).adjustTo(array));\n        return result;\n    },\n    reverse (array, observer, reverse, args) {\n        const result = reverse.apply(array, args);\n        observer.reset(array);\n        return result;\n    },\n    shift (array, observer, shift, args) {\n        const notEmpty = array.length > 0;\n        const result = shift.apply(array, args);\n        if (notEmpty) observer.addSplice(new $3c437a811fef0672$export$ceb3ee475cfd64d1(0, [\n            result\n        ], 0));\n        return result;\n    },\n    sort (array, observer, sort, args) {\n        const result = sort.apply(array, args);\n        observer.reset(array);\n        return result;\n    },\n    splice (array, observer, splice, args) {\n        const result = splice.apply(array, args);\n        observer.addSplice(new $3c437a811fef0672$export$ceb3ee475cfd64d1(+args[0], result, args.length > 2 ? args.length - 2 : 0).adjustTo(array));\n        return result;\n    },\n    unshift (array, observer, unshift, args) {\n        const result = unshift.apply(array, args);\n        observer.addSplice(new $3c437a811fef0672$export$ceb3ee475cfd64d1(0, [], args.length).adjustTo(array));\n        return result;\n    }\n});\nconst $3c437a811fef0672$export$6475bdcbf398326a = Object.freeze({\n    /**\n     * A set of changes that represent a full array reset.\n     */ reset: $3c437a811fef0672$var$resetSplices,\n    /**\n     * Sets the default strategy to use for array observers.\n     * @param strategy - The splice strategy to use.\n     */ setDefaultStrategy (strategy) {\n        $3c437a811fef0672$var$defaultSpliceStrategy = strategy;\n    }\n});\nfunction $3c437a811fef0672$var$setNonEnumerable(target, property, value) {\n    Reflect.defineProperty(target, property, {\n        value: value,\n        enumerable: false\n    });\n}\nclass $3c437a811fef0672$var$DefaultArrayObserver extends (0, $0f21edcca411263f$export$f35d03caf9a2ecdf) {\n    constructor(subject){\n        super(subject);\n        this.oldCollection = void 0;\n        this.splices = void 0;\n        this.needsQueue = true;\n        this._strategy = null;\n        this._lengthObserver = void 0;\n        this.call = this.flush;\n        $3c437a811fef0672$var$setNonEnumerable(subject, \"$fastController\", this);\n    }\n    get strategy() {\n        return this._strategy;\n    }\n    set strategy(value) {\n        this._strategy = value;\n    }\n    get lengthObserver() {\n        let observer = this._lengthObserver;\n        if (observer === void 0) {\n            const array = this.subject;\n            this._lengthObserver = observer = {\n                length: array.length,\n                handleChange () {\n                    if (this.length !== array.length) {\n                        this.length = array.length;\n                        (0, $536bd8e250404810$export$77cea355fa80b5f4).notify(observer, \"length\");\n                    }\n                }\n            };\n            this.subscribe(observer);\n        }\n        return observer;\n    }\n    subscribe(subscriber) {\n        this.flush();\n        super.subscribe(subscriber);\n    }\n    addSplice(splice) {\n        if (this.splices === void 0) this.splices = [\n            splice\n        ];\n        else this.splices.push(splice);\n        this.enqueue();\n    }\n    reset(oldCollection) {\n        this.oldCollection = oldCollection;\n        this.enqueue();\n    }\n    flush() {\n        var _a;\n        const splices = this.splices;\n        const oldCollection = this.oldCollection;\n        if (splices === void 0 && oldCollection === void 0) return;\n        this.needsQueue = true;\n        this.splices = void 0;\n        this.oldCollection = void 0;\n        this.notify(((_a = this._strategy) !== null && _a !== void 0 ? _a : $3c437a811fef0672$var$defaultSpliceStrategy).normalize(oldCollection, this.subject, splices));\n    }\n    enqueue() {\n        if (this.needsQueue) {\n            this.needsQueue = false;\n            (0, $73a7523c4c03f465$export$26ef613a0934aa5f).enqueue(this);\n        }\n    }\n}\nlet $3c437a811fef0672$var$enabled = false;\nconst $3c437a811fef0672$export$ddffcc348cf2aba1 = Object.freeze({\n    /**\n     * Enables the array observation mechanism.\n     * @remarks\n     * Array observation is enabled automatically when using the\n     * {@link RepeatDirective}, so calling this API manually is\n     * not typically necessary.\n     */ enable () {\n        if ($3c437a811fef0672$var$enabled) return;\n        $3c437a811fef0672$var$enabled = true;\n        (0, $536bd8e250404810$export$77cea355fa80b5f4).setArrayObserverFactory((collection)=>new $3c437a811fef0672$var$DefaultArrayObserver(collection));\n        const proto = Array.prototype;\n        if (!proto.$fastPatch) {\n            $3c437a811fef0672$var$setNonEnumerable(proto, \"$fastPatch\", 1);\n            [\n                proto.pop,\n                proto.push,\n                proto.reverse,\n                proto.shift,\n                proto.sort,\n                proto.splice,\n                proto.unshift\n            ].forEach((method)=>{\n                proto[method.name] = function(...args) {\n                    var _a;\n                    const o = this.$fastController;\n                    return o === void 0 ? method.apply(this, args) : ((_a = o.strategy) !== null && _a !== void 0 ? _a : $3c437a811fef0672$var$defaultSpliceStrategy)[method.name](this, o, method, args);\n                };\n            });\n        }\n    }\n});\nfunction $3c437a811fef0672$export$db8278eef58dd758(array) {\n    if (!array) return 0;\n    let arrayObserver = array.$fastController;\n    if (arrayObserver === void 0) {\n        $3c437a811fef0672$export$ddffcc348cf2aba1.enable();\n        arrayObserver = (0, $536bd8e250404810$export$77cea355fa80b5f4).getNotifier(array);\n    }\n    (0, $536bd8e250404810$export$77cea355fa80b5f4).track(arrayObserver.lengthObserver, \"length\");\n    return array.length;\n}\n\n\n\n\n\n\n\n\nfunction $c8c3610357d62a92$export$6cdc818096b8be3c(value) {\n    return (0, $553e78d6498b7d22$export$f6e2535fb5126e54)(value) ? (0, $f0534c3e114f3b42$export$d013c21e6c7cf47e)(value) : value instanceof (0, $d4cc7f2a173492b7$export$f4f50f872cf9bd86) ? value : (0, $61c950affd928ccc$export$62b137a205137697)(()=>value);\n}\n\n\n\n\n\nconst $35c5c2bf2e163710$var$defaultRepeatOptions = Object.freeze({\n    positioning: false,\n    recycle: true\n});\nfunction $35c5c2bf2e163710$var$bindWithoutPositioning(view, items, index, controller) {\n    view.context.parent = controller.source;\n    view.context.parentContext = controller.context;\n    view.bind(items[index]);\n}\nfunction $35c5c2bf2e163710$var$bindWithPositioning(view, items, index, controller) {\n    view.context.parent = controller.source;\n    view.context.parentContext = controller.context;\n    view.context.length = items.length;\n    view.context.index = index;\n    view.bind(items[index]);\n}\nfunction $35c5c2bf2e163710$var$isCommentNode(node) {\n    return node.nodeType === Node.COMMENT_NODE;\n}\nclass $35c5c2bf2e163710$export$be1769e3b8cade2 extends Error {\n    constructor(/**\n     * The error message\n     */ message, propertyBag){\n        super(message);\n        this.propertyBag = propertyBag;\n    }\n}\nclass $35c5c2bf2e163710$export$9320ef0c85148109 {\n    /**\n     * Creates an instance of RepeatBehavior.\n     * @param location - The location in the DOM to render the repeat.\n     * @param dataBinding - The array to render.\n     * @param isItemsBindingVolatile - Indicates whether the items binding has volatile dependencies.\n     * @param templateBinding - The template to render for each item.\n     * @param isTemplateBindingVolatile - Indicates whether the template binding has volatile dependencies.\n     * @param options - Options used to turn on special repeat features.\n     */ constructor(directive){\n        this.directive = directive;\n        this.items = null;\n        this.itemsObserver = null;\n        this.bindView = $35c5c2bf2e163710$var$bindWithoutPositioning;\n        /** @internal */ this.views = [];\n        this.itemsBindingObserver = directive.dataBinding.createObserver(this, directive);\n        this.templateBindingObserver = directive.templateBinding.createObserver(this, directive);\n        if (directive.options.positioning) this.bindView = $35c5c2bf2e163710$var$bindWithPositioning;\n    }\n    /**\n     * Bind this behavior.\n     * @param controller - The view controller that manages the lifecycle of this behavior.\n     */ bind(controller) {\n        this.location = controller.targets[this.directive.targetNodeId];\n        this.controller = controller;\n        this.items = this.itemsBindingObserver.bind(controller);\n        this.template = this.templateBindingObserver.bind(controller);\n        this.observeItems(true);\n        if ((0, $2c7cec50df6e87c7$export$9934e196b2f5d5b7)(this.template) && (0, $2c7cec50df6e87c7$export$9934e196b2f5d5b7)(controller) && controller.hydrationStage !== (0, $c4b29108f07d34df$export$a8d753d276b93290).hydrated) this.hydrateViews(this.template);\n        else this.refreshAllViews();\n        controller.onUnbind(this);\n    }\n    /**\n     * Unbinds this behavior.\n     */ unbind() {\n        if (this.itemsObserver !== null) this.itemsObserver.unsubscribe(this);\n        this.unbindAllViews();\n    }\n    /**\n     * Handles changes in the array, its items, and the repeat template.\n     * @param source - The source of the change.\n     * @param args - The details about what was changed.\n     */ handleChange(source, args) {\n        if (args === this.itemsBindingObserver) {\n            this.items = this.itemsBindingObserver.bind(this.controller);\n            this.observeItems();\n            this.refreshAllViews();\n        } else if (args === this.templateBindingObserver) {\n            this.template = this.templateBindingObserver.bind(this.controller);\n            this.refreshAllViews(true);\n        } else if (!args[0]) return;\n        else if (args[0].reset) this.refreshAllViews();\n        else this.updateViews(args);\n    }\n    observeItems(force = false) {\n        if (!this.items) {\n            this.items = (0, $e1d30cf6f8cb997c$export$d3ae4127996a91af);\n            return;\n        }\n        const oldObserver = this.itemsObserver;\n        const newObserver = this.itemsObserver = (0, $536bd8e250404810$export$77cea355fa80b5f4).getNotifier(this.items);\n        const hasNewObserver = oldObserver !== newObserver;\n        if (hasNewObserver && oldObserver !== null) oldObserver.unsubscribe(this);\n        if (hasNewObserver || force) newObserver.subscribe(this);\n    }\n    updateViews(splices) {\n        const views = this.views;\n        const bindView = this.bindView;\n        const items = this.items;\n        const template = this.template;\n        const controller = this.controller;\n        const recycle = this.directive.options.recycle;\n        const leftoverViews = [];\n        let leftoverIndex = 0;\n        let availableViews = 0;\n        for(let i = 0, ii = splices.length; i < ii; ++i){\n            const splice = splices[i];\n            const removed = splice.removed;\n            let removeIndex = 0;\n            let addIndex = splice.index;\n            const end = addIndex + splice.addedCount;\n            const removedViews = views.splice(splice.index, removed.length);\n            const totalAvailableViews = availableViews = leftoverViews.length + removedViews.length;\n            for(; addIndex < end; ++addIndex){\n                const neighbor = views[addIndex];\n                const location = neighbor ? neighbor.firstChild : this.location;\n                let view;\n                if (recycle && availableViews > 0) {\n                    if (removeIndex <= totalAvailableViews && removedViews.length > 0) {\n                        view = removedViews[removeIndex];\n                        removeIndex++;\n                    } else {\n                        view = leftoverViews[leftoverIndex];\n                        leftoverIndex++;\n                    }\n                    availableViews--;\n                } else view = template.create();\n                views.splice(addIndex, 0, view);\n                bindView(view, items, addIndex, controller);\n                view.insertBefore(location);\n            }\n            if (removedViews[removeIndex]) leftoverViews.push(...removedViews.slice(removeIndex));\n        }\n        for(let i = leftoverIndex, ii = leftoverViews.length; i < ii; ++i)leftoverViews[i].dispose();\n        if (this.directive.options.positioning) for(let i = 0, viewsLength = views.length; i < viewsLength; ++i){\n            const context = views[i].context;\n            context.length = viewsLength;\n            context.index = i;\n        }\n    }\n    refreshAllViews(templateChanged = false) {\n        const items = this.items;\n        const template = this.template;\n        const location = this.location;\n        const bindView = this.bindView;\n        const controller = this.controller;\n        let itemsLength = items.length;\n        let views = this.views;\n        let viewsLength = views.length;\n        if (itemsLength === 0 || templateChanged || !this.directive.options.recycle) {\n            // all views need to be removed\n            (0, $c4b29108f07d34df$export$1b0b7079c4551d79).disposeContiguousBatch(views);\n            viewsLength = 0;\n        }\n        if (viewsLength === 0) {\n            // all views need to be created\n            this.views = views = new Array(itemsLength);\n            for(let i = 0; i < itemsLength; ++i){\n                const view = template.create();\n                bindView(view, items, i, controller);\n                views[i] = view;\n                view.insertBefore(location);\n            }\n        } else {\n            // attempt to reuse existing views with new data\n            let i = 0;\n            for(; i < itemsLength; ++i)if (i < viewsLength) {\n                const view = views[i];\n                if (!view) {\n                    const serializer = new XMLSerializer();\n                    throw new $35c5c2bf2e163710$export$be1769e3b8cade2(`View is null or undefined inside \"${this.location.getRootNode().host.nodeName}\".`, {\n                        index: i,\n                        hydrationStage: this.controller.hydrationStage,\n                        itemsLength: itemsLength,\n                        viewsState: views.map((v)=>v ? \"hydrated\" : \"empty\"),\n                        viewTemplateString: serializer.serializeToString(template.create().fragment),\n                        rootNodeContent: serializer.serializeToString(this.location.getRootNode())\n                    });\n                }\n                bindView(view, items, i, controller);\n            } else {\n                const view = template.create();\n                bindView(view, items, i, controller);\n                views.push(view);\n                view.insertBefore(location);\n            }\n            const removed = views.splice(i, viewsLength - i);\n            for(i = 0, itemsLength = removed.length; i < itemsLength; ++i)removed[i].dispose();\n        }\n    }\n    unbindAllViews() {\n        const views = this.views;\n        for(let i = 0, ii = views.length; i < ii; ++i){\n            const view = views[i];\n            if (!view) {\n                const serializer = new XMLSerializer();\n                throw new $35c5c2bf2e163710$export$be1769e3b8cade2(`View is null or undefined inside \"${this.location.getRootNode().host.nodeName}\".`, {\n                    index: i,\n                    hydrationStage: this.controller.hydrationStage,\n                    viewsState: views.map((v)=>v ? \"hydrated\" : \"empty\"),\n                    rootNodeContent: serializer.serializeToString(this.location.getRootNode())\n                });\n            }\n            view.unbind();\n        }\n    }\n    hydrateViews(template) {\n        if (!this.items) return;\n        this.views = new Array(this.items.length);\n        let current = this.location.previousSibling;\n        while(current !== null){\n            if (!$35c5c2bf2e163710$var$isCommentNode(current)) {\n                current = current.previousSibling;\n                continue;\n            }\n            const index = (0, $2c7cec50df6e87c7$export$d9a04faa81df4f36).parseRepeatEndMarker(current.data);\n            if (index === null) {\n                current = current.previousSibling;\n                continue;\n            }\n            current.data = \"\";\n            // end of repeat is the previousSibling of end comment\n            const end = current.previousSibling;\n            if (!end) throw new Error(`Error when hydrating inside \"${this.location.getRootNode().host.nodeName}\": end should never be null.`);\n            // find start marker\n            let start = end;\n            // How many unmatched end markers we've encountered\n            let unmatchedEndMarkers = 0;\n            while(start !== null){\n                if ($35c5c2bf2e163710$var$isCommentNode(start)) {\n                    if ((0, $2c7cec50df6e87c7$export$d9a04faa81df4f36).isRepeatViewEndMarker(start.data)) unmatchedEndMarkers++;\n                    else if ((0, $2c7cec50df6e87c7$export$d9a04faa81df4f36).isRepeatViewStartMarker(start.data)) {\n                        if (unmatchedEndMarkers) unmatchedEndMarkers--;\n                        else {\n                            if ((0, $2c7cec50df6e87c7$export$d9a04faa81df4f36).parseRepeatStartMarker(start.data) !== index) throw new Error(`Error when hydrating inside \"${this.location.getRootNode().host.nodeName}\": Mismatched start and end markers.`);\n                            start.data = \"\";\n                            current = start.previousSibling;\n                            // start of repeat content is the nextSibling of start comment\n                            start = start.nextSibling;\n                            const view = template.hydrate(start, end);\n                            this.views[index] = view;\n                            this.bindView(view, this.items, index, this.controller);\n                            break;\n                        }\n                    }\n                }\n                start = start.previousSibling;\n            }\n            if (!start) throw new Error(`Error when hydrating inside \"${this.location.getRootNode().host.nodeName}\": start should never be null.`);\n        }\n    }\n}\nclass $35c5c2bf2e163710$export$3e91f6eae87714ce {\n    /**\n     * Creates an instance of RepeatDirective.\n     * @param dataBinding - The binding that provides the array to render.\n     * @param templateBinding - The template binding used to obtain a template to render for each item in the array.\n     * @param options - Options used to turn on special repeat features.\n     */ constructor(dataBinding, templateBinding, options){\n        this.dataBinding = dataBinding;\n        this.templateBinding = templateBinding;\n        this.options = options;\n        (0, $3c437a811fef0672$export$ddffcc348cf2aba1).enable();\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     */ createHTML(add) {\n        return (0, $c8f825d8de076482$export$b925b7ba50a6200f).comment(add(this));\n    }\n    /**\n     * Creates a behavior for the provided target node.\n     * @param target - The node instance to create the behavior for.\n     */ createBehavior() {\n        return new $35c5c2bf2e163710$export$9320ef0c85148109(this);\n    }\n}\n(0, $92a0f71e83c36791$export$3b3d5ef3c555d599).define($35c5c2bf2e163710$export$3e91f6eae87714ce);\nfunction $35c5c2bf2e163710$export$76d90c956114f2c2(items, template, options = $35c5c2bf2e163710$var$defaultRepeatOptions) {\n    const dataBinding = (0, $c8c3610357d62a92$export$6cdc818096b8be3c)(items);\n    const templateBinding = (0, $c8c3610357d62a92$export$6cdc818096b8be3c)(template);\n    return new $35c5c2bf2e163710$export$3e91f6eae87714ce(dataBinding, templateBinding, Object.assign(Object.assign({}, $35c5c2bf2e163710$var$defaultRepeatOptions), options));\n}\n\n\n\n\nconst $0e98bee1b5009bfe$var$slotEvent = \"slotchange\";\nclass $0e98bee1b5009bfe$export$321a4334e9cbbbe2 extends (0, $bb9d557ea06bd03b$export$755ec928f38200a4) {\n    /**\n     * Begins observation of the nodes.\n     * @param target - The target to observe.\n     */ observe(target) {\n        target.addEventListener($0e98bee1b5009bfe$var$slotEvent, this);\n    }\n    /**\n     * Disconnects observation of the nodes.\n     * @param target - The target to unobserve.\n     */ disconnect(target) {\n        target.removeEventListener($0e98bee1b5009bfe$var$slotEvent, this);\n    }\n    /**\n     * Retrieves the raw nodes that should be assigned to the source property.\n     * @param target - The target to get the node to.\n     */ getNodes(target) {\n        return target.assignedNodes(this.options);\n    }\n    /** @internal */ handleEvent(event) {\n        const target = event.currentTarget;\n        this.updateTarget(this.getSource(target), this.computeNodes(target));\n    }\n}\n(0, $92a0f71e83c36791$export$3b3d5ef3c555d599).define($0e98bee1b5009bfe$export$321a4334e9cbbbe2);\nfunction $0e98bee1b5009bfe$export$e2355138873b532d(propertyOrOptions) {\n    if ((0, $553e78d6498b7d22$export$844ec244b1367d54)(propertyOrOptions)) propertyOrOptions = {\n        property: propertyOrOptions\n    };\n    return new $0e98bee1b5009bfe$export$321a4334e9cbbbe2(propertyOrOptions);\n}\n\n\nconst $74d218dd1da63c7a$var$noTemplate = ()=>null;\nfunction $74d218dd1da63c7a$var$normalizeBinding(value) {\n    return value === undefined ? $74d218dd1da63c7a$var$noTemplate : (0, $553e78d6498b7d22$export$f6e2535fb5126e54)(value) ? value : ()=>value;\n}\nfunction $74d218dd1da63c7a$export$a55877ca9db47377(condition, templateOrTemplateBinding, elseTemplateOrTemplateBinding) {\n    const dataBinding = (0, $553e78d6498b7d22$export$f6e2535fb5126e54)(condition) ? condition : ()=>condition;\n    const templateBinding = $74d218dd1da63c7a$var$normalizeBinding(templateOrTemplateBinding);\n    const elseBinding = $74d218dd1da63c7a$var$normalizeBinding(elseTemplateOrTemplateBinding);\n    return (source, context)=>dataBinding(source, context) ? templateBinding(source, context) : elseBinding(source, context);\n}\n\n\n\nclass $bbcc8d9121aace42$export$7254cc27399e90bd {\n    constructor(value = null){\n        /** \n     * Propriété privée pour stocker l'historique des valeurs d'état, limitée aux 10 dernières entrées.\n    */ this._history = [];\n        /** \n     * Propriété privée pour stocker la valeur actuelle de l'état, initialisée à `null`.\n    */ this._value = null;\n        /** \n     * Propriété privée pour notifier les observateurs des changements d'état, initialisée avec `Observable.getNotifier`.\n    */ this._notifier = (0, $536bd8e250404810$export$77cea355fa80b5f4).getNotifier(this);\n        this._value = value;\n    }\n    /** \n   * Getter pour la valeur actuelle de l'état. Utilise `Observable.track` pour suivre les changements.\n  */ get value() {\n        (0, $536bd8e250404810$export$77cea355fa80b5f4).track(this, \"value\");\n        return this._value;\n    }\n    /**\n   * Setter pour mettre à jour la valeur de l'état. Ajoute la valeur actuelle à l'historique et notifie\n   * les observateurs du changement.\n   * @param {T} value - Nouvelle valeur de l'état.\n  */ set value(value) {\n        this._value = value;\n        this._history = [\n            this._value,\n            ...this._history.reverse()\n        ].reduce((results, value)=>{\n            if (results.length > 10) results.push(value);\n            return results;\n        }, []).reverse();\n        (0, $536bd8e250404810$export$77cea355fa80b5f4).notify(this, \"value\");\n    }\n    /**\n   * Méthode statique pour initialiser un nouvel objet `State` avec une valeur initiale facultative.\n   * @param {T} [value=null] - Valeur initiale de l'état.\n   * @returns Une nouvelle instance de `State` avec la valeur spécifiée.\n  */ static init(value = null) {\n        return new $bbcc8d9121aace42$export$7254cc27399e90bd(value);\n    }\n    /**\n   * Renvoie un tableau avec l'état actuel et une fonction pour mettre à jour l'état.\n   * @returns Un tableau contenant l'état actuel et une fonction de mise à jour.\n  */ get mutator() {\n        return [\n            this,\n            (value)=>{\n                this.value = value;\n            }\n        ];\n    }\n    /** \n   * Abonne une fonction de rappel qui sera appelée à chaque changement de valeur de l'état.\n   * @param {function} callback - Fonction à appeler lors d'un changement de valeur.\n  */ subscribe(callback) {\n        this._notifier.subscribe({\n            handleChange: (state, key)=>{\n                callback(state[key]);\n            }\n        });\n    }\n    /**\n   * Convertit l'état en une valeur primitive pour les objets, ou en Proxy pour les objets complexes.\n   * @returns La valeur primitive ou un Proxy pour les objets complexes.\n  */ [Symbol.toPrimitive]() {\n        return typeof this.value != \"object\" ? this.value : new Proxy(this.value, {\n            get (target, key) {\n                return target[key] ? target[key] : undefined;\n            }\n        });\n    }\n}\nfunction $bbcc8d9121aace42$export$e6a0daad8304de(value = null) {\n    return $bbcc8d9121aace42$export$7254cc27399e90bd.init(value).mutator;\n}\n\n\n\nclass $ed877747710b53cd$var$$89fec59bbef2bb37$export$98c71376181af907 extends Map {\n    /**\n   * Initialise une nouvelle instance de la classe `_storage` avec des enregistrements initiaux facultatifs et un validateur optionnel.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   * @returns {Storage<RECORD>} Une nouvelle instance de la classe `_storage` initialisée avec les enregistrements et le validateur fournis.\n   * @example\n   * ```typescript\n   * const records = { count: 0, name: \"John\" };\n   * const storage = _storage.init(records);\n   * ```\n   */ static init(records, validator) {\n        return new $ed877747710b53cd$var$$89fec59bbef2bb37$export$98c71376181af907(records, validator);\n    }\n    /**\n   * Constructeur qui initialise la classe `_storage` avec des enregistrements optionnels et un validateur.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   */ constructor(records, validator){\n        super();\n        this._validator = null;\n        if (validator) this._validator = validator;\n        // Si des enregistrements sont fournis, les ajouter au _storage\n        if (records) Object.keys(records).forEach((key)=>{\n            this.set(key, (0, $bbcc8d9121aace42$export$e6a0daad8304de)(records[key]));\n        });\n    }\n    /**\n   * Récupère la valeur du stockage en fonction d'une clé spécifiée.\n   * Si un validateur est défini, il valide la nouvelle valeur avant de l'appliquer.\n   * @template T - Le type de la valeur de l'état.\n   * @param {StorageKeys<RECORD>} key - La clé utilisée pour accéder à un enregistrement spécifique en stockage.\n   * @returns {State<T>[\"mutator\"]} La fonction `mutator` associée à la clé spécifiée de l'objet `State`.\n   * @example\n   * ```typescript\n   * const storage = _storage.init({ count: 0 });\n   * const [count, setCount] = storage.get(\"count\");\n   * setCount(10); // met à jour la valeur si la validation réussit\n   * ```\n   */ get(key) {\n        if (!this._validator) return super.get(key);\n        else {\n            let [state, setter] = super.get(key);\n            return [\n                state,\n                (newValue)=>{\n                    let previousValue = state.value;\n                    let result = this._validator(key, previousValue, newValue);\n                    if (result instanceof Promise) result.then(()=>setter(newValue)).catch((error)=>console.error(error));\n                    else if (result == true) setter(newValue);\n                }\n            ];\n        }\n    }\n}\nfunction $ed877747710b53cd$export$d184a47a971dd4b9(records = {}, stateValidator) {\n    // Création d'un proxy contenant le stockage\n    return new Proxy($ed877747710b53cd$var$$89fec59bbef2bb37$export$98c71376181af907.init(records, stateValidator), {\n        /**\n     * Intercepte les opérations d'accès aux propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état ou de la méthode accédée.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {any} La méthode ou la valeur de l'état correspondant à la clé.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * console.log(storage.count[0].value); // affiche 0\n     * storage.count ; // met à jour la valeur de count à 5\n     * ```\n    */ get (target, key, receiver) {\n            // Retourne les méthodes du stockage\n            if (target[key]) {\n                if (typeof target[key] == \"function\") return target[key].bind(target);\n                else return target[key];\n            } else if (target.has(key)) return target.get(key);\n            else return undefined;\n        },\n        /**\n     * Intercepte les opérations de mise à jour des propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état à mettre à jour.\n     * @param {any} newValue - La nouvelle valeur à assigner à l'état.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {boolean} Un indicateur de succès de la mise à jour.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * storage.count ; // met à jour la valeur de count à 5\n     * console.log(storage.count[0].value); // affiche 5\n     * ```\n    */ set (target, key, newValue, receiver) {\n            if (target.has(key)) {\n                // Mise à jour du state contenant la valeur\n                target.get(key)[1](newValue);\n                return true;\n            } else return undefined;\n        }\n    });\n}\n\n\nvar $21d7e6efcf443e5e$exports = {};\n/* eslint-disable no-var, operator-linebreak */ var $2fd506a82ad7eba4$exports = {};\nvar $2fd506a82ad7eba4$var$win;\nif (typeof window !== \"undefined\") $2fd506a82ad7eba4$var$win = window;\nelse if (typeof $parcel$global !== \"undefined\") $2fd506a82ad7eba4$var$win = $parcel$global;\nelse if (typeof self !== \"undefined\") $2fd506a82ad7eba4$var$win = self;\nelse $2fd506a82ad7eba4$var$win = {};\n$2fd506a82ad7eba4$exports = $2fd506a82ad7eba4$var$win;\n\n\n\nvar $kjyEk = parcelRequire(\"kjyEk\");\n/**\n * @template {ArrayBufferView | null} T\n * @param {T} buf\n * @returns {T}\n */ function $21d7e6efcf443e5e$var$getRandomValues(buf) {\n    if ($2fd506a82ad7eba4$exports.crypto && $2fd506a82ad7eba4$exports.crypto.getRandomValues) return $2fd506a82ad7eba4$exports.crypto.getRandomValues(buf);\n    if (typeof $2fd506a82ad7eba4$exports.msCrypto === \"object\" && typeof $2fd506a82ad7eba4$exports.msCrypto.getRandomValues === \"function\") return $2fd506a82ad7eba4$exports.msCrypto.getRandomValues(buf);\n    if ($kjyEk.randomBytes) {\n        if (!(buf instanceof Uint8Array)) throw new TypeError(\"expected Uint8Array\");\n        if (buf.length > 65536) {\n            var e = new Error();\n            // @ts-expect-error\n            e.code = 22;\n            e.message = \"Failed to execute 'getRandomValues' on 'Crypto': The ArrayBufferView's byte length (\" + buf.length + \") exceeds the \" + \"number of bytes of entropy available via this API (65536).\";\n            e.name = \"QuotaExceededError\";\n            throw e;\n        }\n        var bytes = $kjyEk.randomBytes(buf.length);\n        buf.set(bytes);\n        return buf;\n    } else throw new Error(\"No secure random number generator available.\");\n}\n$21d7e6efcf443e5e$exports = $21d7e6efcf443e5e$var$getRandomValues;\n\n\n// ===============================================\n// https://www.npmjs.com/package/get-random-values\n// ===============================================\nclass $c0e7b3090ccc4e49$export$74e446f6456d826d extends String {\n    /**\n   * Obtient l'identifiant de composant en extrayant la première partie de l'UUID.\n   * @returns L'identifiant de composant.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.componentId); // '123456789012'\n   * ```\n  */ get componentId() {\n        return this.split(\"-\")[0];\n    }\n    /**\n   * Obtient la première section de l'UUID après division par '-'.\n   * @returns La première section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section1); // '1234'\n   * ```\n  */ get section1() {\n        return this.split(\"-\")[1];\n    }\n    /**\n   * Obtient la deuxième section de l'UUID après division par '-'.\n   * @returns La deuxième section de l'UUID.\n   * @example\n   * ```typescipt\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section2); // '5678'\n   * ```\n  */ get section2() {\n        return this.split(\"-\")[2];\n    }\n    /**\n   * Obtient la troisième section de l'UUID après division par '-'.\n   * @returns La troisième section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section3); // '90ab'\n   * ```\n  */ get section3() {\n        return this.split(\"-\")[3];\n    }\n    /**\n   * Obtient l'identifiant de collection en extrayant la cinquième partie de l'UUID.\n   * @returns L'identifiant de collection.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.collectionId); // 'abcdefabcdef'\n   * ```\n  */ get collectionId() {\n        return this.split(\"-\")[4];\n    }\n    /**\n   * Obtient l'identifiant parent en concaténant les sections 1, 2 et 3.\n   * @returns L'identifiant parent.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.parentId); // '1234567890ab'\n   * ```\n  */ get parentId() {\n        return [\n            this.section1,\n            this.section2,\n            this.section3\n        ].join(\"\");\n    }\n    /**\n   * Étend l'UUID hiérarchique avec des options personnalisées.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  const extendedUUID = uuid.extend({ parentId: '098765432109', collectionId: 'abcdefabcdef' });\n   *  console.log(extendedUUID); // Un nouvel _HUID avec les sections mises à jour.\n   * ```\n  */ extend(options) {\n        return $c0e7b3090ccc4e49$export$31b40729666a4ae0.hv1({\n            parentId: this.componentId,\n            collectionId: this.collectionId\n        });\n    }\n}\nclass $c0e7b3090ccc4e49$export$31b40729666a4ae0 {\n    /**\n   * Obtient une valeur par défaut pour l'identifiant de composant.\n   * @returns '000000000000' en tant que ComponentId.\n  */ static get componentId() {\n        return \"000000000000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la première section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment1() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la deuxième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment2() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la troisième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment3() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour l'identifiant de collection.\n   * @returns '000000000000' en tant que CollectionId.\n  */ static get collectionId() {\n        return \"000000000000\";\n    }\n    /**\n   * Obtient un UUID NIL (null) par défaut.\n   * @returns L'UUID NIL sous forme de chaîne.\n  */ static get NIL() {\n        return new $c0e7b3090ccc4e49$export$74e446f6456d826d(`${$c0e7b3090ccc4e49$export$31b40729666a4ae0.componentId}-${$c0e7b3090ccc4e49$export$31b40729666a4ae0.segment1}-${$c0e7b3090ccc4e49$export$31b40729666a4ae0.segment2}-${$c0e7b3090ccc4e49$export$31b40729666a4ae0.segment3}-${$c0e7b3090ccc4e49$export$31b40729666a4ae0.collectionId}`);\n    }\n    /**\n   * Encode une chaîne de longueur fixe en remplaçant certains caractères par des valeurs hexadécimales aléatoires.\n   * @param chaine - Une chaîne de longueur fixe.\n   * @returns Une chaîne de longueur fixe avec des valeurs hexadécimales aléatoires.\n   * @example\n   * ```typescript\n   *  const encoded = uuid.encode('123456789012');\n   *  console.log(encoded); // '1a2b3c4d5e6f'\n   * ```\n  */ static encode(chaine) {\n        return chaine.replace(/[018]/g, (c)=>{\n            return (c ^ (0, (/*@__PURE__*/$parcel$interopDefault($21d7e6efcf443e5e$exports)))(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n        });\n    }\n    /**\n   * Génère un UUID de version 4 en utilisant des valeurs aléatoires.\n   * @returns Un UUID de version 4 sous forme de chaîne.\n   * @example\n   * ```typescript\n   *  const uuidV4 = uuid.v4();\n   *  console.log(uuidV4); // Un UUID de version 4.\n   * ```\n  */ static v4() {\n        return $c0e7b3090ccc4e49$export$31b40729666a4ae0.NIL.replace(/[018]/g, (c)=>{\n            return (c ^ (0, (/*@__PURE__*/$parcel$interopDefault($21d7e6efcf443e5e$exports)))(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n        });\n    }\n    /**\n   * Génère un UUID hiérarchique en fonction des options fournies.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const hierarchicalUUID = uuid.hv1({ parentId: '123456789012', collectionId: 'abcdefabcdef' });\n   *  console.log(hierarchicalUUID); // Un nouvel UUID hiérarchique (_HUID).\n   * ```\n  */ static hv1(options) {\n        if (!options) options = {\n            parentId: null,\n            collectionId: null\n        };\n        let componentId = $c0e7b3090ccc4e49$export$31b40729666a4ae0.encode($c0e7b3090ccc4e49$export$31b40729666a4ae0.componentId);\n        let segment1 = $c0e7b3090ccc4e49$export$31b40729666a4ae0.encode($c0e7b3090ccc4e49$export$31b40729666a4ae0.segment1);\n        let segment2 = $c0e7b3090ccc4e49$export$31b40729666a4ae0.encode($c0e7b3090ccc4e49$export$31b40729666a4ae0.segment2);\n        let segment3 = $c0e7b3090ccc4e49$export$31b40729666a4ae0.encode($c0e7b3090ccc4e49$export$31b40729666a4ae0.segment3);\n        let collectionId = $c0e7b3090ccc4e49$export$31b40729666a4ae0.encode($c0e7b3090ccc4e49$export$31b40729666a4ae0.collectionId);\n        if (options.parentId && options.parentId.length == 12) {\n            segment1 = options.parentId.slice(0, 4);\n            segment2 = options.parentId.slice(4, 8);\n            segment3 = options.parentId.slice(8, 12);\n        } else console.error(\"parentId.length exeded 12 char length.\");\n        if (options.collectionId) collectionId = options.collectionId;\n        return new $c0e7b3090ccc4e49$export$74e446f6456d826d(`${componentId}-${segment1}-${segment2}-${segment3}-${collectionId}`);\n    }\n}\n\n\nfunction $1365a7571d71f20d$var$$parcel$exportWildcard(dest, source) {\n    Object.keys(source).forEach(function(key) {\n        if (key === \"default\" || key === \"__esModule\" || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function get() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n}\nfunction $1365a7571d71f20d$var$$parcel$export(e, n, v, s) {\n    Object.defineProperty(e, n, {\n        get: v,\n        set: s,\n        enumerable: true,\n        configurable: true\n    });\n}\n// export * from './dom';\nvar $1365a7571d71f20d$var$$535bb7ac3b1a1d6d$exports = {};\nvar $1365a7571d71f20d$var$$b1b98f19caab25c2$exports = {};\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$b1b98f19caab25c2$exports, \"attrState\", ()=>$1365a7571d71f20d$export$683a0e8baad8b9c3);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$b1b98f19caab25c2$exports, \"attr\", ()=>(0, $b70b8231869890d4$export$7aabe8b3a840d2fd));\nvar $1365a7571d71f20d$var$$a1f8df21dd3b8ee9$exports = {};\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$a1f8df21dd3b8ee9$exports, \"state\", ()=>$1365a7571d71f20d$export$ca000e230c0caa3e);\nfunction $1365a7571d71f20d$export$ca000e230c0caa3e() {\n    return function(target, propertyName, value, y) {\n        let privateName = `_${propertyName}`;\n        if (!target[propertyName]) Object.defineProperty(target, propertyName, {\n            get () {\n                // Retourne la valeur de l'état depuis l'objet 'states' pour CETTE instance\n                if (!this.states) this.states = {}; // Si l'objet 'states' n'existe pas encore, on le crée pour chaque instance\n                (0, $536bd8e250404810$export$77cea355fa80b5f4).track(this, propertyName);\n                return this.states[privateName];\n            },\n            set (newValue) {\n                // Si l'objet 'states' n'existe pas encore, le créer pour CETTE instance\n                if (!this.states) this.states = {};\n                const oldValue = this.states[privateName];\n                if (oldValue != newValue) {\n                    this.states[privateName] = newValue;\n                    (0, $536bd8e250404810$export$77cea355fa80b5f4).notify(this, propertyName);\n                    // Si l'état a changé, déclenche une action pour CETTE instance\n                    if (oldValue !== newValue) this.handleStateChange(propertyName, oldValue, newValue);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        if (value && target[propertyName] == null) target[propertyName] = value;\n    };\n}\nfunction $1365a7571d71f20d$export$683a0e8baad8b9c3(options = {}) {\n    return (target, propertyKey)=>{\n        (0, $b70b8231869890d4$export$7aabe8b3a840d2fd)(options)(target, propertyKey);\n        $1365a7571d71f20d$export$ca000e230c0caa3e()(target, propertyKey);\n    };\n}\nvar $1365a7571d71f20d$var$$f24f9f18a7b99a68$exports = {};\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$f24f9f18a7b99a68$exports, \"effect\", ()=>$1365a7571d71f20d$export$dc573d8a6576cdb3);\nfunction $1365a7571d71f20d$export$af73ab700e00763e(effects) {\n    const effects_register = new Map();\n    if (effects) Object.values(effects).forEach((effect)=>{\n        this.set(effect.name, effect);\n    });\n    effects_register.execute = function(dependency) {\n        let effects_without_depedencies = [\n            ...this.values()\n        ].filter((effect)=>!effect.dependencies || effect.dependencies.length == 0 ? effect : null);\n        let effects_with_depedencies = [\n            ...this.values()\n        ].filter((effect)=>effect.dependencies && effect.dependencies.length > 0 ? effect : null);\n        effects_with_depedencies.forEach((effect)=>{\n            let { dependencies: dependencies, callback: useEffect, name: name } = effect;\n            if (dependency && dependencies.includes(dependency)) {\n                console.log(`Math effect ${dependency}`);\n                useEffect();\n            }\n        });\n        if (!dependency) effects_without_depedencies.forEach((effect)=>{\n            let { callback: useEffect } = effect;\n            try {\n                useEffect();\n            } catch (error) {\n                console.error(error);\n            }\n        });\n    };\n    return effects_register;\n} // export class Effects extends Map< string , IEffect >{\n//   execute( dependency?:string ){\n//     let effects_without_depedencies = [...this.values()].filter(( effect ) => !effect.dependencies || effect.dependencies.length == 0 ? effect : null);\n//     let effects_with_depedencies = [...this.values()].filter(( effect ) => effect.dependencies && effect.dependencies.length > 0 ? effect : null);\n//     effects_with_depedencies.forEach(( effect ) => {\n//       let { dependencies , callback:useEffect , name } = effect;\n//       if(dependency && dependencies.includes( dependency )){\n//         useEffect();\n//       }\n//     })\n//     if( !dependency )effects_without_depedencies.forEach(( effect ) => {\n//       let { callback:useEffect } = effect;\n//       try{\n//         useEffect();\n//       }\n//       catch(error){\n//         console.error(error);\n//       }\n//     })\n//   }\n//   constructor( effects?:Record< string , IEffect > ){\n//     super();\n//     if(effects)Object.values(effects).forEach((effect) => {\n//       this.set( effect.name , effect )\n//     });\n//   }\n// }\nfunction $1365a7571d71f20d$export$dc573d8a6576cdb3(dependencies) {\n    return (target, propertyName, value = null)=>{\n        if (!target[propertyName]) Object.defineProperty(target, propertyName, {\n            get () {\n                // Retourne la valeur de l'état depuis l'objet 'states' pour CETTE instance\n                if (!this.effects) this.effects = $1365a7571d71f20d$export$af73ab700e00763e(); // Si l'objet 'states' n'existe pas encore, on le crée pour chaque instance\n                return this.effects.get(propertyName);\n            },\n            set (newValue) {\n                // Si l'objet 'states' n'existe pas encore, le créer pour CETTE instance\n                if (!this.effects) this.effects = $1365a7571d71f20d$export$af73ab700e00763e();\n                this.effects.set(propertyName, {\n                    name: propertyName,\n                    dependencies: dependencies,\n                    callback: newValue\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        if (value && target[propertyName] == null) target[propertyName] = value;\n    };\n}\n$1365a7571d71f20d$var$$parcel$exportWildcard($1365a7571d71f20d$var$$535bb7ac3b1a1d6d$exports, $1365a7571d71f20d$var$$b1b98f19caab25c2$exports);\n$1365a7571d71f20d$var$$parcel$exportWildcard($1365a7571d71f20d$var$$535bb7ac3b1a1d6d$exports, $1365a7571d71f20d$var$$a1f8df21dd3b8ee9$exports);\n$1365a7571d71f20d$var$$parcel$exportWildcard($1365a7571d71f20d$var$$535bb7ac3b1a1d6d$exports, $1365a7571d71f20d$var$$f24f9f18a7b99a68$exports);\nvar $1365a7571d71f20d$var$$5193209399721411$exports = {};\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$5193209399721411$exports, \"when\", ()=>(0, $74d218dd1da63c7a$export$a55877ca9db47377));\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$5193209399721411$exports, \"repeat\", ()=>(0, $35c5c2bf2e163710$export$76d90c956114f2c2));\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$5193209399721411$exports, \"children\", ()=>(0, $3703afe7bef39fc6$export$bacb5cc5a11aef16));\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$5193209399721411$exports, \"elements\", ()=>(0, $bb9d557ea06bd03b$export$7a5d735b2ab6389d));\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$5193209399721411$exports, \"slotted\", ()=>(0, $0e98bee1b5009bfe$export$e2355138873b532d));\nvar $1365a7571d71f20d$var$$21522158c10703ef$exports = {};\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$21522158c10703ef$exports, \"AsyncAppendBindig\", ()=>$1365a7571d71f20d$export$ca3487b83ec6860a);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$21522158c10703ef$exports, \"AsyncAppendDirective\", ()=>$1365a7571d71f20d$export$5761d9f85430a54b);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$21522158c10703ef$exports, \"asyncAppend\", ()=>$1365a7571d71f20d$export$eaa89ade56b7c0c1);\nclass $1365a7571d71f20d$export$ca3487b83ec6860a extends (0, $d4cc7f2a173492b7$export$f4f50f872cf9bd86) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $1365a7571d71f20d$export$5761d9f85430a54b extends (0, $a4c6739fd636375e$export$c590b280af2e6950) {\n    constructor(fn, callback){\n        super(new $1365a7571d71f20d$export$ca3487b83ec6860a((x)=>null));\n        this.fn = null;\n        this.callback = null;\n        Object.assign(this, {\n            fn: fn,\n            callback: callback\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                this.fn.then((result)=>{\n                    this.callback(result).render(source, target instanceof HTMLElement ? target : target.parentElement);\n                }).catch((error)=>{\n                    console.error(error);\n                    (0, $9c750268536c24e0$export$c0bb0b647f701bb5)`<span>Error: ${error}</span>`.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                });\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(fn, callback) {\n        return new $1365a7571d71f20d$export$5761d9f85430a54b(fn, callback);\n    }\n}\n(0, $92a0f71e83c36791$export$3b3d5ef3c555d599).define($1365a7571d71f20d$export$5761d9f85430a54b);\nconst $1365a7571d71f20d$export$eaa89ade56b7c0c1 = (fn, callback)=>$1365a7571d71f20d$export$5761d9f85430a54b.use(fn, callback);\nvar $1365a7571d71f20d$var$$f6651d38d609160e$exports = {};\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$f6651d38d609160e$exports, \"createRef\", ()=>$1365a7571d71f20d$export$7d1e3a5e95ceca43);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$f6651d38d609160e$exports, \"RefDirective\", ()=>$1365a7571d71f20d$export$1ef8aea9a6de98d);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$f6651d38d609160e$exports, \"ref\", ()=>$1365a7571d71f20d$export$eff4d24c3ff7876e);\nfunction $1365a7571d71f20d$export$7d1e3a5e95ceca43() {\n    return {\n        value: null\n    };\n}\nclass $1365a7571d71f20d$export$1ef8aea9a6de98d extends (0, $92a0f71e83c36791$export$683728dd3b823b8d) {\n    constructor(options){\n        super(options);\n        this.options = null;\n        Object.assign(this, {\n            options: options\n        });\n    }\n    bind(controller) {\n        let { lastChild: target } = controller;\n        this.options.value = target;\n    }\n    static use(options) {\n        return new $1365a7571d71f20d$export$1ef8aea9a6de98d(options);\n    }\n}\n(0, $92a0f71e83c36791$export$3b3d5ef3c555d599).define($1365a7571d71f20d$export$1ef8aea9a6de98d);\nconst $1365a7571d71f20d$export$eff4d24c3ff7876e = (options)=>$1365a7571d71f20d$export$1ef8aea9a6de98d.use(options);\nvar $1365a7571d71f20d$var$$c66c6ea353620255$exports = {};\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$c66c6ea353620255$exports, \"StateBindig\", ()=>$1365a7571d71f20d$export$28205fa712822499);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$c66c6ea353620255$exports, \"StateDirective\", ()=>$1365a7571d71f20d$export$792c882b75ca2192);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$c66c6ea353620255$exports, \"useState\", ()=>$1365a7571d71f20d$export$60241385465d0a34);\n// import { ViewTemplate, HTMLBindingDirective, ExecutionContext } from '@microsoft/fast-element';\nclass $1365a7571d71f20d$export$28205fa712822499 extends (0, $d4cc7f2a173492b7$export$f4f50f872cf9bd86) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $1365a7571d71f20d$export$792c882b75ca2192 extends (0, $a4c6739fd636375e$export$c590b280af2e6950) {\n    get state() {\n        return this._state.mutator[0];\n    }\n    set state(value) {\n        this._state.mutator[1](value);\n    }\n    constructor(state, callback){\n        super(new $1365a7571d71f20d$export$28205fa712822499((x)=>null));\n        this._state = null;\n        this._callback = null;\n        this._state = state;\n        this._callback = callback;\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        let view = null;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                if (this._callback) {\n                    this._state.subscribe(()=>{\n                        view.dispose();\n                        view = this._callback(this.state).render(source, target.parentElement);\n                    });\n                    view = this._callback(this.state).render(source, target.parentElement);\n                } else {\n                    this._state.subscribe(()=>{\n                        if (\"textContent\" in target) target.textContent = `${this.state}`;\n                    });\n                    if (\"textContent\" in target) target.textContent = `${this.state}`;\n                }\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(state, callback) {\n        return new $1365a7571d71f20d$export$792c882b75ca2192(state, callback);\n    }\n}\n(0, $92a0f71e83c36791$export$3b3d5ef3c555d599).define($1365a7571d71f20d$export$792c882b75ca2192);\nconst $1365a7571d71f20d$export$60241385465d0a34 = (state, callback)=>$1365a7571d71f20d$export$792c882b75ca2192.use(state, callback);\nvar $1365a7571d71f20d$var$$6e530dd7df9f7fe5$exports = {};\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$6e530dd7df9f7fe5$exports, \"StyleBindig\", ()=>$1365a7571d71f20d$export$81053cd05d55c9d8);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$6e530dd7df9f7fe5$exports, \"StyleDirective\", ()=>$1365a7571d71f20d$export$18211b6e76035cfa);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$6e530dd7df9f7fe5$exports, \"style\", ()=>$1365a7571d71f20d$export$1d567c320f4763bc);\nclass $1365a7571d71f20d$export$81053cd05d55c9d8 extends (0, $d4cc7f2a173492b7$export$f4f50f872cf9bd86) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $1365a7571d71f20d$export$18211b6e76035cfa extends (0, $a4c6739fd636375e$export$c590b280af2e6950) {\n    constructor(css){\n        super(new $1365a7571d71f20d$export$81053cd05d55c9d8((x)=>null));\n        this.css = null;\n        Object.assign(this, {\n            css: css\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        let view = null;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                if (target instanceof HTMLElement) Object.assign(target.style, this.css);\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(css) {\n        return new $1365a7571d71f20d$export$18211b6e76035cfa(css);\n    }\n}\n(0, $92a0f71e83c36791$export$3b3d5ef3c555d599).define($1365a7571d71f20d$export$18211b6e76035cfa);\nconst $1365a7571d71f20d$export$1d567c320f4763bc = (css)=>$1365a7571d71f20d$export$18211b6e76035cfa.use(css);\nvar $1365a7571d71f20d$var$$15db1e855f042fe6$exports = {};\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$15db1e855f042fe6$exports, \"UntilBindig\", ()=>$1365a7571d71f20d$export$f36d8f10294685f8);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$15db1e855f042fe6$exports, \"UntilDirective\", ()=>$1365a7571d71f20d$export$51c6edf8ee19b71a);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$15db1e855f042fe6$exports, \"until\", ()=>$1365a7571d71f20d$export$a40009bd2c363351);\nclass $1365a7571d71f20d$export$f36d8f10294685f8 extends (0, $d4cc7f2a173492b7$export$f4f50f872cf9bd86) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $1365a7571d71f20d$export$51c6edf8ee19b71a extends (0, $a4c6739fd636375e$export$c590b280af2e6950) {\n    constructor(fn, template){\n        super(new $1365a7571d71f20d$export$f36d8f10294685f8((x)=>null));\n        this.fn = null;\n        this.template = null;\n        Object.assign(this, {\n            fn: fn,\n            template: template\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                let loading = this.template.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                this.fn.then((result)=>{\n                    loading.dispose();\n                    result.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                }).catch((error)=>{\n                    console.error(error);\n                    loading.dispose();\n                    (0, $9c750268536c24e0$export$c0bb0b647f701bb5)`<span>Error: ${error}</span>`.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                });\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(fn, template) {\n        return new $1365a7571d71f20d$export$51c6edf8ee19b71a(fn, template);\n    }\n}\n(0, $92a0f71e83c36791$export$3b3d5ef3c555d599).define($1365a7571d71f20d$export$51c6edf8ee19b71a);\nconst $1365a7571d71f20d$export$a40009bd2c363351 = (fn, template)=>$1365a7571d71f20d$export$51c6edf8ee19b71a.use(fn, template);\n$1365a7571d71f20d$var$$parcel$exportWildcard($1365a7571d71f20d$var$$5193209399721411$exports, $1365a7571d71f20d$var$$21522158c10703ef$exports);\n$1365a7571d71f20d$var$$parcel$exportWildcard($1365a7571d71f20d$var$$5193209399721411$exports, $1365a7571d71f20d$var$$f6651d38d609160e$exports);\n$1365a7571d71f20d$var$$parcel$exportWildcard($1365a7571d71f20d$var$$5193209399721411$exports, $1365a7571d71f20d$var$$c66c6ea353620255$exports);\n$1365a7571d71f20d$var$$parcel$exportWildcard($1365a7571d71f20d$var$$5193209399721411$exports, $1365a7571d71f20d$var$$6e530dd7df9f7fe5$exports);\n$1365a7571d71f20d$var$$parcel$exportWildcard($1365a7571d71f20d$var$$5193209399721411$exports, $1365a7571d71f20d$var$$15db1e855f042fe6$exports);\nvar $1365a7571d71f20d$var$$fde9406d76ec24a9$exports = {};\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$fde9406d76ec24a9$exports, \"createObservableObject\", ()=>$1365a7571d71f20d$export$dcc5cf24d8fb3b41);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$fde9406d76ec24a9$exports, \"ObservableArray\", ()=>$1365a7571d71f20d$export$2b76b04f92326cd);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$fde9406d76ec24a9$exports, \"ObservableObject\", ()=>$1365a7571d71f20d$export$b176171395436676);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$fde9406d76ec24a9$exports, \"State\", ()=>(0, $bbcc8d9121aace42$export$7254cc27399e90bd));\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$fde9406d76ec24a9$exports, \"createState\", ()=>(0, $bbcc8d9121aace42$export$e6a0daad8304de));\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$fde9406d76ec24a9$exports, \"createStorage\", ()=>(0, $ed877747710b53cd$export$d184a47a971dd4b9));\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$fde9406d76ec24a9$exports, \"uuid\", ()=>(0, $c0e7b3090ccc4e49$export$31b40729666a4ae0));\nclass $1365a7571d71f20d$export$b176171395436676 extends Object {\n    static init(initialObject) {\n        let observabe = new $1365a7571d71f20d$export$b176171395436676(initialObject);\n        return observabe.createProxy.bind(observabe)();\n    }\n    constructor(initialObject){\n        super();\n        this.$data = {};\n        this.observers = {};\n        // Enregistre un observateur pour une propriété spécifique\n        this.subscribe = (propKey, callback)=>{\n            if (!this.observers[propKey]) this.observers[propKey] = new Set();\n            this.observers[propKey].add(callback);\n        };\n        // Supprime un observateur pour une propriété spécifique\n        this.unsubscribe = (propKey, callback)=>{\n            if (this.observers[propKey]) this.observers[propKey].delete(callback);\n        };\n        this.set = (key, value)=>{\n            const oldValue = this.$data[`_${key}`];\n            this.$data[`_${key}`] = value;\n            (0, $536bd8e250404810$export$77cea355fa80b5f4).defineProperty(this.$data, key);\n            this.notify(key, value, oldValue);\n            return this.$data[key];\n        };\n        Object.assign(this.$data, initialObject);\n    }\n    // Méthode appelée pour notifier les observateurs d'un changement de valeur\n    notify(propKey, newValue, oldValue) {\n        if (this.observers[propKey]) this.observers[propKey].forEach((callback)=>callback(newValue, oldValue));\n    }\n    createProxy() {\n        return new Proxy(this.$data, {\n            get: (store, propKey)=>{\n                let result = undefined;\n                if (propKey == \"subscribe\") return this.subscribe;\n                else if (propKey == \"unsubscribe\") return this.unsubscribe;\n                else if (propKey == \"keys\") return ()=>Object.keys(this.$data);\n                else if (propKey == \"values\") return ()=>Object.values(this.$data);\n                try {\n                    result = store[propKey];\n                } catch (error) {\n                    console.error(error);\n                } finally{\n                    return result;\n                }\n            },\n            set: (store, propKey, value)=>{\n                const oldValue = store[propKey];\n                if (store[propKey]) store[propKey] = value;\n                else {\n                    store[`_${propKey}`] = value;\n                    (0, $536bd8e250404810$export$77cea355fa80b5f4).defineProperty(store, propKey);\n                }\n                this.notify(propKey, value, oldValue);\n                return true;\n            }\n        });\n    }\n}\nfunction $1365a7571d71f20d$export$dcc5cf24d8fb3b41(initialObject) {\n    return $1365a7571d71f20d$export$b176171395436676.init(initialObject);\n}\nfunction $1365a7571d71f20d$export$2b76b04f92326cd(init = []) {\n    const observers = new Set();\n    const notifyObservers = (operation, args, result)=>{\n        observers.forEach((callback)=>callback(operation, args, result));\n    };\n    const arrayMethods = [\n        \"push\",\n        \"pop\",\n        \"splice\",\n        \"shift\",\n        \"unshift\",\n        \"sort\",\n        \"reverse\"\n    ];\n    return new Proxy(init, {\n        get (target, property, receiver) {\n            // Si on accède à une méthode de tableau, la redéfinir pour inclure la notification\n            if (arrayMethods.includes(property)) return (...args)=>{\n                const result = Array.prototype[property].apply(target, args);\n                // Notifier les observateurs du changement\n                notifyObservers(property, args, result);\n                return result;\n            };\n            return Reflect.get(target, property, receiver);\n        },\n        set (target, property, value, receiver) {\n            const oldValue = target[property];\n            const result = Reflect.set(target, property, value, receiver);\n            if (oldValue !== value) notifyObservers(\"set\", {\n                index: property,\n                value: value\n            }, result);\n            return result;\n        }\n    });\n}\n$1365a7571d71f20d$export$2b76b04f92326cd.prototype.subscribe = function(callback) {\n    this.observers.add(callback);\n};\n$1365a7571d71f20d$export$2b76b04f92326cd.prototype.unsubscribe = function(callback) {\n    this.observers.delete(callback);\n};\nvar $1365a7571d71f20d$var$$c5a7ff2cef84a00c$exports = {};\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$c5a7ff2cef84a00c$exports, \"html\", ()=>$1365a7571d71f20d$export$c0bb0b647f701bb5);\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$c5a7ff2cef84a00c$exports, \"customElement\", ()=>(0, $c96f3fac790afe8c$export$da64fc29f17f9d0e));\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$c5a7ff2cef84a00c$exports, \"css\", ()=>(0, $86e25679ac61f8ba$export$dbf350e5966cf602));\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$c5a7ff2cef84a00c$exports, \"ViewTemplate\", ()=>(0, $9c750268536c24e0$export$98f7e629c251afe6));\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$c5a7ff2cef84a00c$exports, \"HTMLView\", ()=>(0, $c4b29108f07d34df$export$1b0b7079c4551d79));\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$c5a7ff2cef84a00c$exports, \"volatile\", ()=>(0, $536bd8e250404810$export$e338fff42eed603a));\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$c5a7ff2cef84a00c$exports, \"WebComponent\", ()=>$1365a7571d71f20d$export$7f8b9f308979d41d);\nfunction $1365a7571d71f20d$var$$46dc60c1cf1be4f3$export$855330f8a2a9f2e8(effect_name, callback, dependencies) {\n    $1365a7571d71f20d$export$dc573d8a6576cdb3(dependencies)(this, effect_name, callback);\n}\nfunction $1365a7571d71f20d$var$$facec54f608d45db$export$ad300186e7a01246(key, value) {\n    function useState(key) {\n        return [\n            this[key],\n            (newValue)=>{\n                this[key] = newValue;\n            }\n        ];\n    }\n    $1365a7571d71f20d$export$ca000e230c0caa3e()(this, key, value);\n    return useState.bind(this)(key);\n}\nfunction $1365a7571d71f20d$var$$7d8e02f1fed4bf94$export$366cf43304d85757(key, value) {\n    $1365a7571d71f20d$export$ca000e230c0caa3e()(this, key, value, false);\n}\nclass $1365a7571d71f20d$export$7f8b9f308979d41d extends (0, $c96f3fac790afe8c$export$904ba5187827962e) {\n    constructor(){\n        super();\n    }\n    get bindState() {\n        return $1365a7571d71f20d$var$$facec54f608d45db$export$ad300186e7a01246.bind(this);\n    }\n    get bindConsumable() {\n        return $1365a7571d71f20d$var$$7d8e02f1fed4bf94$export$366cf43304d85757.bind(this);\n    }\n    get bindEffect() {\n        return $1365a7571d71f20d$var$$46dc60c1cf1be4f3$export$855330f8a2a9f2e8.bind(this);\n    }\n    handleStateChange(propertyName, oldValue, newValue) {\n        this[propertyName] = newValue;\n        this.effects?.execute(propertyName);\n    }\n    connectedCallback() {\n        this.effects?.execute();\n        super.connectedCallback();\n    }\n}\n$1365a7571d71f20d$export$7f8b9f308979d41d.define = (0, $c96f3fac790afe8c$export$904ba5187827962e).define;\nconst $1365a7571d71f20d$export$c0bb0b647f701bb5 = (0, $9c750268536c24e0$export$c0bb0b647f701bb5);\nvar $1365a7571d71f20d$var$$407cc31aa7cd1215$exports = {};\nvar $1365a7571d71f20d$var$$899e8805cec15bdd$exports = {};\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$899e8805cec15bdd$exports, \"ViewExecutionContext\", ()=>$1365a7571d71f20d$export$1053a9be1bcefef9);\nclass $1365a7571d71f20d$export$1053a9be1bcefef9 extends Object {\n    constructor(data){\n        super();\n        this.states = {};\n        this.effects = $1365a7571d71f20d$export$af73ab700e00763e();\n        this.handleStateChange = (propertyName, oldValue, newValue)=>{\n            this[propertyName] = newValue;\n            this[\"effects\"].execute(propertyName);\n        };\n        Object.assign(this, data);\n    }\n    get bindState() {\n        return $1365a7571d71f20d$var$$facec54f608d45db$export$ad300186e7a01246.bind(this);\n    }\n    get bindConsumable() {\n        return $1365a7571d71f20d$var$$7d8e02f1fed4bf94$export$366cf43304d85757.bind(this);\n    }\n    get bindEffect() {\n        return $1365a7571d71f20d$var$$46dc60c1cf1be4f3$export$855330f8a2a9f2e8.bind(this);\n    }\n    static init(data) {\n        return new $1365a7571d71f20d$export$1053a9be1bcefef9(data);\n    }\n}\nvar $1365a7571d71f20d$var$$3905e9ecff2931d2$exports = {};\nvar $1365a7571d71f20d$var$$dad4474276f9eead$exports = {};\n$1365a7571d71f20d$var$$parcel$exportWildcard($1365a7571d71f20d$var$$407cc31aa7cd1215$exports, $1365a7571d71f20d$var$$899e8805cec15bdd$exports);\n$1365a7571d71f20d$var$$parcel$exportWildcard($1365a7571d71f20d$var$$407cc31aa7cd1215$exports, $1365a7571d71f20d$var$$3905e9ecff2931d2$exports);\n$1365a7571d71f20d$var$$parcel$exportWildcard($1365a7571d71f20d$var$$407cc31aa7cd1215$exports, $1365a7571d71f20d$var$$dad4474276f9eead$exports);\nvar $1365a7571d71f20d$var$$4c5fb5bb6e826a01$exports = {};\nvar $1365a7571d71f20d$var$$ea70625fa1b5e3d6$exports = {};\n$1365a7571d71f20d$var$$parcel$export($1365a7571d71f20d$var$$ea70625fa1b5e3d6$exports, \"render\", ()=>$1365a7571d71f20d$export$b3890eb0ae9dca99);\n// Fonction pour observer les enfants ajoutés\nconst $1365a7571d71f20d$var$$ea70625fa1b5e3d6$var$observeChilds = (container, config, callback)=>{\n    // Crée un MutationObserver\n    const observer = new MutationObserver((mutationsList, observer)=>{\n        // Parcourt toutes les mutations détectées\n        mutationsList.forEach((mutation)=>{\n            if (mutation.type === \"childList\") mutation.addedNodes.forEach((node)=>{\n                if (node.nodeType === Node.ELEMENT_NODE) {\n                    console.log(\"Nouvel \\xe9l\\xe9ment ajout\\xe9 :\", node);\n                    callback(node); // Exécute le callback avec le nœud ajouté\n                }\n            });\n        });\n    });\n    // Démarre l'observation\n    observer.observe(container, config);\n    // Retourne l'observer pour pouvoir le déconnecter si besoin\n    return observer;\n};\nfunction $1365a7571d71f20d$export$b3890eb0ae9dca99(template, container = document.body, data = {}) {\n    let context = $1365a7571d71f20d$export$1053a9be1bcefef9.init(data);\n    let observer = $1365a7571d71f20d$var$$ea70625fa1b5e3d6$var$observeChilds(container, {\n        childList: true,\n        // Observe les ajouts et suppressions d'enfants\n        subtree: false // Si true, observe tous les descendants du parent\n    }, (node)=>{\n        if (node instanceof $1365a7571d71f20d$export$7f8b9f308979d41d == false) {\n            if (context[\"effects\"]) context[\"effects\"].execute();\n        }\n        observer.disconnect();\n    });\n    let element = template.render(context, container);\n    return element;\n}\n$1365a7571d71f20d$var$$parcel$exportWildcard($1365a7571d71f20d$var$$4c5fb5bb6e826a01$exports, $1365a7571d71f20d$var$$ea70625fa1b5e3d6$exports);\n\n\nfunction $b68a6531175bc8e1$export$27d4b096c6b2c10d(name, newValue) {\n    if (!this.attributes[name]) return false;\n    else if (!newValue || newValue != \"false\") return true;\n    else return false;\n}\n\n\n\nfunction $59edd190d21ff10d$export$5144c47e5f9a9878(slotName = null, callback) {\n    return (target)=>{\n        let childrens = target.childNodes;\n        let [children] = [\n            ...target.childNodes\n        ].map((element)=>{\n            if (element instanceof (0, $694e9d39e9dac0a0$export$4968fc43a1249d4e) == false) return null;\n            /// ## Aucun slot\n            if (!slotName && element?.getAttribute(\"slot\") == null) return element;\n            else if (slotName && element?.getAttribute(\"slot\") == slotName) return element;\n            else return null;\n        }).filter((x)=>x);\n        if (callback) callback(children);\n    };\n}\n\n\nclass $694e9d39e9dac0a0$export$4968fc43a1249d4e extends (0, $1365a7571d71f20d$export$7f8b9f308979d41d) {\n    get handleBooleanAttribute() {\n        return (0, $b68a6531175bc8e1$export$27d4b096c6b2c10d).bind(this);\n    }\n    get cretateOnSlotChangeHandler() {\n        return (0, $59edd190d21ff10d$export$5144c47e5f9a9878).bind(this);\n    }\n}\n\n\n\n\n\nvar $5OQrz = parcelRequire(\"5OQrz\");\nparcelRequire(\"lTDtW\");\nparcelRequire(\"2LYUy\");\nclass $ab497cf0bca85b9e$export$b94310965bed44e6 extends (0, $694e9d39e9dac0a0$export$4968fc43a1249d4e) {\n}\n$ab497cf0bca85b9e$export$b94310965bed44e6 = (0, $5c96a02c592fcff1$export$29e00dfd3077644b)([\n    (0, $1BF7I.customElement)({\n        name: \"main-home\",\n        template: (0, $1BF7I.html)`${(home)=>{\n            return (0, $1BF7I.html)`<div>\r\n            <pf-masthead display-inline>\r\n                <slot slot=\"brand\">\r\n                    <div class=\"logo\"></div>\r\n                </slot>\r\n                <pf-action-list>\r\n                    <pf-action-list-item>\r\n                        <pf-button>Acceuil</pf-button>\r\n                    </pf-action-list-item>\r\n                    <pf-action-list-item>\r\n                        <pf-button>Horaires</pf-button>\r\n                    </pf-action-list-item>\r\n                    <pf-action-list-item>\r\n                        <pf-button>Tarifs</pf-button>\r\n                    </pf-action-list-item>\r\n                    <pf-action-list-item>\r\n                        <pf-button>Connexion</pf-button>\r\n                    </pf-action-list-item>\r\n                </pf-action-list>\r\n            </pf-masthead>\r\n        </div>`;\n        }}`\n    })\n], $ab497cf0bca85b9e$export$b94310965bed44e6);\nclass $ab497cf0bca85b9e$export$6e2c8f0811a474ce extends (0, $694e9d39e9dac0a0$export$4968fc43a1249d4e) {\n}\n$ab497cf0bca85b9e$export$6e2c8f0811a474ce = (0, $5c96a02c592fcff1$export$29e00dfd3077644b)([\n    (0, $1BF7I.customElement)({\n        name: \"main-section\",\n        template: (0, $1BF7I.html)`${(section)=>{\n            return (0, $1BF7I.html)`<section>\r\n            <slot></slot>\r\n    </section>`;\n        }}`\n    })\n], $ab497cf0bca85b9e$export$6e2c8f0811a474ce);\nclass $ab497cf0bca85b9e$export$a06f1c675e846f6f extends (0, $694e9d39e9dac0a0$export$4968fc43a1249d4e) {\n}\n$ab497cf0bca85b9e$export$a06f1c675e846f6f = (0, $5c96a02c592fcff1$export$29e00dfd3077644b)([\n    (0, $1BF7I.customElement)({\n        name: \"main-footer\",\n        template: (0, $1BF7I.html)`${(footer)=>{\n            return (0, $1BF7I.html)`<footer>\r\n            <slot></slot>\r\n    </footer>`;\n        }}`\n    })\n], $ab497cf0bca85b9e$export$a06f1c675e846f6f);\nclass $ab497cf0bca85b9e$export$2b77a92f1a5ad772 extends (0, $5OQrz.PfModalBox) {\n}\n$ab497cf0bca85b9e$export$2b77a92f1a5ad772 = (0, $5c96a02c592fcff1$export$29e00dfd3077644b)([\n    (0, $1BF7I.customElement)({\n        name: \"custom-modal\"\n    })\n], $ab497cf0bca85b9e$export$2b77a92f1a5ad772);\n// function displaySelection(){\n//     const storedSelection = localStorage.getItem('selectionArray');\n//     const form = document.querySelectorAll('form')[0];\n//     console.log(storedSelection);\n// }\n// function displayForm() {\n//     const form = document.querySelectorAll('form')[0];\n//     const storedSelection = localStorage.getItem('selectionArray');\n//     form.classList.toggle('active');\n//     console.log(storedSelection)\n// }\n// function displayClasses(){\n//     const modal = document.querySelectorAll('pf-modal')[0];\n//     modal.classList.toggle('active');\n// }\n// function confirm(){\n// }\n// let selectionArray = JSON.parse(localStorage.getItem('selectionArray') || '[]');\n// function selectRow(cour) {\n//     const selectionElement = document.querySelector('.selection') as HTMLElement;\n//     if (selectionArray.length > 0) {\n//         alert('Veuillez d\\'abord supprimer la sélection actuelle avant d\\'en ajouter une nouvelle.');\n//         return;\n//     }\n//     const selectionTemplate = html`\n//         <div class=\"type-de-cours\">${cour.type_cours}</div>\n//         <div class=\"date\">${formatDateFromISO(cour.date_cours)}</div>\n//         <div class=\"heure-debut\">${cour.heure_debut}</div>\n//         <div class=\"heure-fin\">${cour.heure_fin}</div>\n//         <div class=\"delete\" @click=${() => deleteSelection(cour)}><pf-icons-trash-alt></pf-icons-trash-alt></div>\n//     `;\n//     if (selectionElement) {\n//         selectionArray.push({\n//             cour: cour.type_cours,\n//             date: formatDateFromISO(cour.date_cours),\n//             heure_debut: cour.heure_debut,\n//             heure_fin: cour.heure_fin\n//         });\n//         localStorage.setItem('selectionArray', JSON.stringify(selectionArray));\n//         console.log(selectionArray);\n//         render(selectionTemplate, selectionElement);\n//     } else {\n//         console.error('Élément .selection introuvable');\n//     }\n//     displayExistingSelection();\n// }\n// function displayExistingSelection() {\n//     const selectionElement = document.querySelector('.selection') as HTMLElement;\n//     selectionArray.forEach(cour => {\n//         const selectionTemplate = html`\n//             <div class=\"type-de-cours\">${cour.cour}</div>\n//             <div class=\"date\">${cour.date}</div>\n//             <div class=\"heure-debut\">${cour.heure_debut}</div>\n//             <div class=\"heure-fin\">${cour.heure_fin}</div>\n//             <div class=\"delete\" @click=${() => deleteSelection(cour)}><pf-icons-trash-alt></pf-icons-trash-alt></div>\n//         `;\n//         render(selectionTemplate, selectionElement);\n//     });\n// }\n// function deleteSelection(cour) {\n//     selectionArray = selectionArray.filter(\n//         (item) => item.cour !== cour.type_cours || item.date !== formatDateFromISO(cour.date_cours)\n//     );\n//     localStorage.setItem('selectionArray', JSON.stringify(selectionArray));\n//     console.log(selectionArray);\n//     const selectionElement = document.querySelector('.selection');\n//     if (selectionElement) {\n//         selectionElement.innerHTML = '';\n//     }\n// }\n// const preloadData: Promise<any[]> = new Promise((next, reject) => {\n//     fetch('http://localhost:3000/cours/', {\n//         method: 'GET',\n//         headers: {\n//             'Content-Type': 'application/json'\n//         }\n//     })\n//     .then(response => {\n//         if (!response.ok) {\n//             reject('Erreur serveur.');\n//             throw new Error('Erreur serveur.');\n//         }\n//         return response.json();\n//     })\n//     .then(data => {\n//         if (data.length > 0) {\n//             console.log('Réponse du serveur:', data);\n//             next(data);  // Retourne tout le tableau de cours ici\n//         } else {\n//             next([]);  // Retourne un tableau vide si aucun cours\n//         }\n//     })\n//     .catch(error => {\n//         console.error('Erreur lors de la requête fetch:', error);\n//         reject(error);\n//     });\n// });\n// function formatDateFromISO(isoDateString) {\n//     const date = new Date(isoDateString);\n//     const year = date.getFullYear();\n//     const month = String(date.getMonth() + 1).padStart(2, '0');\n//     const day = String(date.getDate()).padStart(2, '0');\n//     return `${year}-${month}-${day}`;\n// }\n// function convertToISODate(dateString) {\n//     const [year, month, day] = dateString.split('-');\n//     return new Date(`${year}-${month}-${day}T00:00:00Z`).toISOString();\n// }\n(0, $1BF7I.render)($ab497cf0bca85b9e$export$b94310965bed44e6, document.body);\n\n\n//# sourceMappingURL=index.64c3be7d.js.map\n","import { html , render , WebComponent , customElement , attr , attrState , state, css, ViewTemplate, ViewContext, asyncAppend, repeat, children } from '@lithium-framework/core';\r\nimport { PfWebComponent } from '../../../../PatternFlyLithium/unofficial-pf-v5-wc/src/models';\r\nimport { PfModalBox } from 'unofficial-pf-v5-wc';\r\nimport '@lithium-framework/router-element';\r\nimport 'unofficial-pf-v5-wc';\r\nimport 'unofficial-pf-v5-wc-icons';\r\n\r\n@customElement({\r\n    name: \"main-home\",\r\n    template: html`${(home: Home) => {\r\n        return html`<div>\r\n            <pf-masthead display-inline>\r\n                <slot slot=\"brand\">\r\n                    <div class=\"logo\"></div>\r\n                </slot>\r\n                <pf-action-list>\r\n                    <pf-action-list-item>\r\n                        <pf-button>Acceuil</pf-button>\r\n                    </pf-action-list-item>\r\n                    <pf-action-list-item>\r\n                        <pf-button>Horaires</pf-button>\r\n                    </pf-action-list-item>\r\n                    <pf-action-list-item>\r\n                        <pf-button>Tarifs</pf-button>\r\n                    </pf-action-list-item>\r\n                    <pf-action-list-item>\r\n                        <pf-button>Connexion</pf-button>\r\n                    </pf-action-list-item>\r\n                </pf-action-list>\r\n            </pf-masthead>\r\n        </div>`\r\n    }}`\r\n})\r\nexport class Home extends PfWebComponent{\r\n\r\n}\r\n\r\n@customElement({\r\n    name: \"main-section\",\r\n    template: html`${(section: Section) => {\r\n        return html`<section>\r\n            <slot></slot>\r\n    </section>`\r\n    }}`\r\n})\r\nexport class Section extends PfWebComponent{\r\n\r\n}\r\n\r\n@customElement({\r\n    name: \"main-footer\",\r\n    template: html`${(footer: Footer) => {\r\n        return html`<footer>\r\n            <slot></slot>\r\n    </footer>`\r\n    }}`\r\n})\r\nexport class Footer extends PfWebComponent{\r\n\r\n}\r\n\r\n@customElement({\r\n    name: \"custom-modal\",\r\n})\r\nexport class Modal extends PfModalBox{\r\n\r\n}\r\n\r\n\r\n// function displaySelection(){\r\n//     const storedSelection = localStorage.getItem('selectionArray');\r\n//     const form = document.querySelectorAll('form')[0];\r\n//     console.log(storedSelection);\r\n// }\r\n\r\n\r\n// function displayForm() {\r\n//     const form = document.querySelectorAll('form')[0];\r\n//     const storedSelection = localStorage.getItem('selectionArray');\r\n//     form.classList.toggle('active');\r\n//     console.log(storedSelection)\r\n// }\r\n\r\n// function displayClasses(){\r\n//     const modal = document.querySelectorAll('pf-modal')[0];\r\n//     modal.classList.toggle('active');\r\n// }\r\n\r\n// function confirm(){\r\n    \r\n// }\r\n\r\n\r\n// let selectionArray = JSON.parse(localStorage.getItem('selectionArray') || '[]');\r\n\r\n// function selectRow(cour) {\r\n//     const selectionElement = document.querySelector('.selection') as HTMLElement;\r\n\r\n\r\n//     if (selectionArray.length > 0) {\r\n//         alert('Veuillez d\\'abord supprimer la sélection actuelle avant d\\'en ajouter une nouvelle.');\r\n//         return;\r\n//     }\r\n\r\n//     const selectionTemplate = html`\r\n//         <div class=\"type-de-cours\">${cour.type_cours}</div>\r\n//         <div class=\"date\">${formatDateFromISO(cour.date_cours)}</div>\r\n//         <div class=\"heure-debut\">${cour.heure_debut}</div>\r\n//         <div class=\"heure-fin\">${cour.heure_fin}</div>\r\n//         <div class=\"delete\" @click=${() => deleteSelection(cour)}><pf-icons-trash-alt></pf-icons-trash-alt></div>\r\n//     `;\r\n\r\n//     if (selectionElement) {\r\n    \r\n//         selectionArray.push({\r\n//             cour: cour.type_cours,\r\n//             date: formatDateFromISO(cour.date_cours),\r\n//             heure_debut: cour.heure_debut,\r\n//             heure_fin: cour.heure_fin\r\n//         });\r\n\r\n//         localStorage.setItem('selectionArray', JSON.stringify(selectionArray));\r\n\r\n//         console.log(selectionArray);\r\n//         render(selectionTemplate, selectionElement);\r\n//     } else {\r\n//         console.error('Élément .selection introuvable');\r\n//     }\r\n\r\n//     displayExistingSelection();\r\n// }\r\n\r\n// function displayExistingSelection() {\r\n//     const selectionElement = document.querySelector('.selection') as HTMLElement;\r\n\r\n//     selectionArray.forEach(cour => {\r\n//         const selectionTemplate = html`\r\n//             <div class=\"type-de-cours\">${cour.cour}</div>\r\n//             <div class=\"date\">${cour.date}</div>\r\n//             <div class=\"heure-debut\">${cour.heure_debut}</div>\r\n//             <div class=\"heure-fin\">${cour.heure_fin}</div>\r\n//             <div class=\"delete\" @click=${() => deleteSelection(cour)}><pf-icons-trash-alt></pf-icons-trash-alt></div>\r\n//         `;\r\n\r\n//         render(selectionTemplate, selectionElement);\r\n//     });\r\n// }\r\n\r\n// function deleteSelection(cour) {\r\n//     selectionArray = selectionArray.filter(\r\n//         (item) => item.cour !== cour.type_cours || item.date !== formatDateFromISO(cour.date_cours)\r\n//     );\r\n\r\n//     localStorage.setItem('selectionArray', JSON.stringify(selectionArray));\r\n\r\n//     console.log(selectionArray);\r\n\r\n//     const selectionElement = document.querySelector('.selection');\r\n//     if (selectionElement) {\r\n//         selectionElement.innerHTML = '';\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n// const preloadData: Promise<any[]> = new Promise((next, reject) => {\r\n//     fetch('http://localhost:3000/cours/', {\r\n//         method: 'GET',\r\n//         headers: {\r\n//             'Content-Type': 'application/json'\r\n//         }\r\n//     })\r\n//     .then(response => {\r\n//         if (!response.ok) {\r\n//             reject('Erreur serveur.');\r\n//             throw new Error('Erreur serveur.');\r\n//         }\r\n//         return response.json();\r\n//     })\r\n//     .then(data => {\r\n//         if (data.length > 0) {\r\n//             console.log('Réponse du serveur:', data);\r\n//             next(data);  // Retourne tout le tableau de cours ici\r\n//         } else {\r\n//             next([]);  // Retourne un tableau vide si aucun cours\r\n//         }\r\n//     })\r\n//     .catch(error => {\r\n//         console.error('Erreur lors de la requête fetch:', error);\r\n//         reject(error);\r\n//     });\r\n// });\r\n\r\n\r\n\r\n// function formatDateFromISO(isoDateString) {\r\n//     const date = new Date(isoDateString);\r\n//     const year = date.getFullYear();\r\n//     const month = String(date.getMonth() + 1).padStart(2, '0');\r\n//     const day = String(date.getDate()).padStart(2, '0');\r\n//     return `${year}-${month}-${day}`;\r\n// }\r\n\r\n// function convertToISODate(dateString) {\r\n//     const [year, month, day] = dateString.split('-');\r\n//     return new Date(`${year}-${month}-${day}T00:00:00Z`).toISOString();\r\n// }\r\n\r\n\r\n\r\n\r\nrender(Home, document.body);","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","export * from './PfWebComponent';","import { WebComponent } from \"@lithium-framework/core\";\r\nimport { HandleBooleanAttribute } from \"../controllers/handle-boolean-attribute\";\r\nimport { cretateOnSlotChangeHandler } from \"../controllers/cretate-on-slot-change-handler\";\r\n\r\nexport class PfWebComponent extends WebComponent{\r\n\r\n  get handleBooleanAttribute():(name: string, newValue: string | null) => boolean{ return HandleBooleanAttribute.bind( this ) }\r\n  get cretateOnSlotChangeHandler():(slotName?: null | string, callback?: (node: HTMLElement | null) => void)=> (target: PfWebComponent) => void{ return cretateOnSlotChangeHandler.bind(this) }\r\n\r\n}","import {attr as $b1b98f19caab25c2$import$843d46ff018552b8$7aabe8b3a840d2fd, Observable as $hgUW1$Observable, when as $5193209399721411$re_export$when, repeat as $5193209399721411$re_export$repeat, children as $5193209399721411$re_export$children, elements as $5193209399721411$re_export$elements, slotted as $5193209399721411$re_export$slotted, Binding as $hgUW1$Binding, html as $hgUW1$html, HTMLBindingDirective as $hgUW1$HTMLBindingDirective, HTMLDirective as $hgUW1$HTMLDirective, StatelessAttachedAttributeDirective as $hgUW1$StatelessAttachedAttributeDirective, customElement as $c5a7ff2cef84a00c$re_export$customElement, css as $c5a7ff2cef84a00c$re_export$css, ViewTemplate as $c5a7ff2cef84a00c$re_export$ViewTemplate, HTMLView as $c5a7ff2cef84a00c$re_export$HTMLView, volatile as $c5a7ff2cef84a00c$re_export$volatile, FASTElement as $hgUW1$FASTElement} from \"@microsoft/fast-element\";\nimport {State as $fde9406d76ec24a9$re_export$State, createState as $fde9406d76ec24a9$re_export$createState} from \"@lithium-framework/state\";\nimport {createStorage as $fde9406d76ec24a9$re_export$createStorage} from \"@lithium-framework/context\";\nimport {uuid as $fde9406d76ec24a9$re_export$uuid} from \"@lithium-framework/huid\";\n\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      }\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n// export * from './dom';\nvar $535bb7ac3b1a1d6d$exports = {};\nvar $b1b98f19caab25c2$exports = {};\n\n$parcel$export($b1b98f19caab25c2$exports, \"attrState\", () => $b1b98f19caab25c2$export$683a0e8baad8b9c3);\n$parcel$export($b1b98f19caab25c2$exports, \"attr\", () => $b1b98f19caab25c2$import$843d46ff018552b8$7aabe8b3a840d2fd);\n\nvar $a1f8df21dd3b8ee9$exports = {};\n\n$parcel$export($a1f8df21dd3b8ee9$exports, \"state\", () => $a1f8df21dd3b8ee9$export$ca000e230c0caa3e);\n\nfunction $a1f8df21dd3b8ee9$export$ca000e230c0caa3e() {\n    return function(target, propertyName, value, y) {\n        let privateName = `_${propertyName}`;\n        if (!target[propertyName]) Object.defineProperty(target, propertyName, {\n            get () {\n                // Retourne la valeur de l'état depuis l'objet 'states' pour CETTE instance\n                if (!this.states) this.states = {}; // Si l'objet 'states' n'existe pas encore, on le crée pour chaque instance\n                (0, $hgUW1$Observable).track(this, propertyName);\n                return this.states[privateName];\n            },\n            set (newValue) {\n                // Si l'objet 'states' n'existe pas encore, le créer pour CETTE instance\n                if (!this.states) this.states = {};\n                const oldValue = this.states[privateName];\n                if (oldValue != newValue) {\n                    this.states[privateName] = newValue;\n                    (0, $hgUW1$Observable).notify(this, propertyName);\n                    // Si l'état a changé, déclenche une action pour CETTE instance\n                    if (oldValue !== newValue) this.handleStateChange(propertyName, oldValue, newValue);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        if (value && target[propertyName] == null) target[propertyName] = value;\n    };\n}\n\n\nfunction $b1b98f19caab25c2$export$683a0e8baad8b9c3(options = {}) {\n    return (target, propertyKey)=>{\n        (0, $b1b98f19caab25c2$import$843d46ff018552b8$7aabe8b3a840d2fd)(options)(target, propertyKey);\n        (0, $a1f8df21dd3b8ee9$export$ca000e230c0caa3e)()(target, propertyKey);\n    };\n}\n\n\n\nvar $f24f9f18a7b99a68$exports = {};\n\n$parcel$export($f24f9f18a7b99a68$exports, \"effect\", () => $f24f9f18a7b99a68$export$dc573d8a6576cdb3);\nfunction $935380081e1d8be7$export$af73ab700e00763e(effects) {\n    const effects_register = new Map();\n    if (effects) Object.values(effects).forEach((effect)=>{\n        this.set(effect.name, effect);\n    });\n    effects_register.execute = function(dependency) {\n        let effects_without_depedencies = [\n            ...this.values()\n        ].filter((effect)=>!effect.dependencies || effect.dependencies.length == 0 ? effect : null);\n        let effects_with_depedencies = [\n            ...this.values()\n        ].filter((effect)=>effect.dependencies && effect.dependencies.length > 0 ? effect : null);\n        effects_with_depedencies.forEach((effect)=>{\n            let { dependencies: dependencies, callback: useEffect, name: name } = effect;\n            if (dependency && dependencies.includes(dependency)) {\n                console.log(`Math effect ${dependency}`);\n                useEffect();\n            }\n        });\n        if (!dependency) effects_without_depedencies.forEach((effect)=>{\n            let { callback: useEffect } = effect;\n            try {\n                useEffect();\n            } catch (error) {\n                console.error(error);\n            }\n        });\n    };\n    return effects_register;\n} // export class Effects extends Map< string , IEffect >{\n //   execute( dependency?:string ){\n //     let effects_without_depedencies = [...this.values()].filter(( effect ) => !effect.dependencies || effect.dependencies.length == 0 ? effect : null);\n //     let effects_with_depedencies = [...this.values()].filter(( effect ) => effect.dependencies && effect.dependencies.length > 0 ? effect : null);\n //     effects_with_depedencies.forEach(( effect ) => {\n //       let { dependencies , callback:useEffect , name } = effect;\n //       if(dependency && dependencies.includes( dependency )){\n //         useEffect();\n //       }\n //     })\n //     if( !dependency )effects_without_depedencies.forEach(( effect ) => {\n //       let { callback:useEffect } = effect;\n //       try{\n //         useEffect();\n //       }\n //       catch(error){\n //         console.error(error);\n //       }\n //     })\n //   }\n //   constructor( effects?:Record< string , IEffect > ){\n //     super();\n //     if(effects)Object.values(effects).forEach((effect) => {\n //       this.set( effect.name , effect )\n //     });\n //   }\n // }\n\n\nfunction $f24f9f18a7b99a68$export$dc573d8a6576cdb3(dependencies) {\n    return (target, propertyName, value = null)=>{\n        if (!target[propertyName]) Object.defineProperty(target, propertyName, {\n            get () {\n                // Retourne la valeur de l'état depuis l'objet 'states' pour CETTE instance\n                if (!this.effects) this.effects = (0, $935380081e1d8be7$export$af73ab700e00763e)(); // Si l'objet 'states' n'existe pas encore, on le crée pour chaque instance\n                return this.effects.get(propertyName);\n            },\n            set (newValue) {\n                // Si l'objet 'states' n'existe pas encore, le créer pour CETTE instance\n                if (!this.effects) this.effects = (0, $935380081e1d8be7$export$af73ab700e00763e)();\n                this.effects.set(propertyName, {\n                    name: propertyName,\n                    dependencies: dependencies,\n                    callback: newValue\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        if (value && target[propertyName] == null) target[propertyName] = value;\n    };\n}\n\n\n$parcel$exportWildcard($535bb7ac3b1a1d6d$exports, $b1b98f19caab25c2$exports);\n$parcel$exportWildcard($535bb7ac3b1a1d6d$exports, $a1f8df21dd3b8ee9$exports);\n$parcel$exportWildcard($535bb7ac3b1a1d6d$exports, $f24f9f18a7b99a68$exports);\n\n\nvar $5193209399721411$exports = {};\n\n$parcel$export($5193209399721411$exports, \"when\", () => $5193209399721411$re_export$when);\n$parcel$export($5193209399721411$exports, \"repeat\", () => $5193209399721411$re_export$repeat);\n$parcel$export($5193209399721411$exports, \"children\", () => $5193209399721411$re_export$children);\n$parcel$export($5193209399721411$exports, \"elements\", () => $5193209399721411$re_export$elements);\n$parcel$export($5193209399721411$exports, \"slotted\", () => $5193209399721411$re_export$slotted);\n\nvar $21522158c10703ef$exports = {};\n\n$parcel$export($21522158c10703ef$exports, \"AsyncAppendBindig\", () => $21522158c10703ef$export$ca3487b83ec6860a);\n$parcel$export($21522158c10703ef$exports, \"AsyncAppendDirective\", () => $21522158c10703ef$export$5761d9f85430a54b);\n$parcel$export($21522158c10703ef$exports, \"asyncAppend\", () => $21522158c10703ef$export$eaa89ade56b7c0c1);\n\nclass $21522158c10703ef$export$ca3487b83ec6860a extends (0, $hgUW1$Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $21522158c10703ef$export$5761d9f85430a54b extends (0, $hgUW1$HTMLBindingDirective) {\n    constructor(fn, callback){\n        super(new $21522158c10703ef$export$ca3487b83ec6860a((x)=>null));\n        this.fn = null;\n        this.callback = null;\n        Object.assign(this, {\n            fn: fn,\n            callback: callback\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                this.fn.then((result)=>{\n                    this.callback(result).render(source, target instanceof HTMLElement ? target : target.parentElement);\n                }).catch((error)=>{\n                    console.error(error);\n                    (0, $hgUW1$html)`<span>Error: ${error}</span>`.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                });\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(fn, callback) {\n        return new $21522158c10703ef$export$5761d9f85430a54b(fn, callback);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($21522158c10703ef$export$5761d9f85430a54b);\nconst $21522158c10703ef$export$eaa89ade56b7c0c1 = (fn, callback)=>$21522158c10703ef$export$5761d9f85430a54b.use(fn, callback);\n\n\nvar $f6651d38d609160e$exports = {};\n\n$parcel$export($f6651d38d609160e$exports, \"createRef\", () => $f6651d38d609160e$export$7d1e3a5e95ceca43);\n$parcel$export($f6651d38d609160e$exports, \"RefDirective\", () => $f6651d38d609160e$export$1ef8aea9a6de98d);\n$parcel$export($f6651d38d609160e$exports, \"ref\", () => $f6651d38d609160e$export$eff4d24c3ff7876e);\n\nfunction $f6651d38d609160e$export$7d1e3a5e95ceca43() {\n    return {\n        value: null\n    };\n}\nclass $f6651d38d609160e$export$1ef8aea9a6de98d extends (0, $hgUW1$StatelessAttachedAttributeDirective) {\n    constructor(options){\n        super(options);\n        this.options = null;\n        Object.assign(this, {\n            options: options\n        });\n    }\n    bind(controller) {\n        let { lastChild: target } = controller;\n        this.options.value = target;\n    }\n    static use(options) {\n        return new $f6651d38d609160e$export$1ef8aea9a6de98d(options);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($f6651d38d609160e$export$1ef8aea9a6de98d);\nconst $f6651d38d609160e$export$eff4d24c3ff7876e = (options)=>$f6651d38d609160e$export$1ef8aea9a6de98d.use(options);\n\n\nvar $c66c6ea353620255$exports = {};\n\n$parcel$export($c66c6ea353620255$exports, \"StateBindig\", () => $c66c6ea353620255$export$28205fa712822499);\n$parcel$export($c66c6ea353620255$exports, \"StateDirective\", () => $c66c6ea353620255$export$792c882b75ca2192);\n$parcel$export($c66c6ea353620255$exports, \"useState\", () => $c66c6ea353620255$export$60241385465d0a34);\n// import { ViewTemplate, HTMLBindingDirective, ExecutionContext } from '@microsoft/fast-element';\n\nclass $c66c6ea353620255$export$28205fa712822499 extends (0, $hgUW1$Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $c66c6ea353620255$export$792c882b75ca2192 extends (0, $hgUW1$HTMLBindingDirective) {\n    get state() {\n        return this._state.mutator[0];\n    }\n    set state(value) {\n        this._state.mutator[1](value);\n    }\n    constructor(state, callback){\n        super(new $c66c6ea353620255$export$28205fa712822499((x)=>null));\n        this._state = null;\n        this._callback = null;\n        this._state = state;\n        this._callback = callback;\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        let view = null;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                if (this._callback) {\n                    this._state.subscribe(()=>{\n                        view.dispose();\n                        view = this._callback(this.state).render(source, target.parentElement);\n                    });\n                    view = this._callback(this.state).render(source, target.parentElement);\n                } else {\n                    this._state.subscribe(()=>{\n                        if (\"textContent\" in target) target.textContent = `${this.state}`;\n                    });\n                    if (\"textContent\" in target) target.textContent = `${this.state}`;\n                }\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(state, callback) {\n        return new $c66c6ea353620255$export$792c882b75ca2192(state, callback);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($c66c6ea353620255$export$792c882b75ca2192);\nconst $c66c6ea353620255$export$60241385465d0a34 = (state, callback)=>$c66c6ea353620255$export$792c882b75ca2192.use(state, callback);\n\n\nvar $6e530dd7df9f7fe5$exports = {};\n\n$parcel$export($6e530dd7df9f7fe5$exports, \"StyleBindig\", () => $6e530dd7df9f7fe5$export$81053cd05d55c9d8);\n$parcel$export($6e530dd7df9f7fe5$exports, \"StyleDirective\", () => $6e530dd7df9f7fe5$export$18211b6e76035cfa);\n$parcel$export($6e530dd7df9f7fe5$exports, \"style\", () => $6e530dd7df9f7fe5$export$1d567c320f4763bc);\n\nclass $6e530dd7df9f7fe5$export$81053cd05d55c9d8 extends (0, $hgUW1$Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $6e530dd7df9f7fe5$export$18211b6e76035cfa extends (0, $hgUW1$HTMLBindingDirective) {\n    constructor(css){\n        super(new $6e530dd7df9f7fe5$export$81053cd05d55c9d8((x)=>null));\n        this.css = null;\n        Object.assign(this, {\n            css: css\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        let view = null;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                if (target instanceof HTMLElement) Object.assign(target.style, this.css);\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(css) {\n        return new $6e530dd7df9f7fe5$export$18211b6e76035cfa(css);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($6e530dd7df9f7fe5$export$18211b6e76035cfa);\nconst $6e530dd7df9f7fe5$export$1d567c320f4763bc = (css)=>$6e530dd7df9f7fe5$export$18211b6e76035cfa.use(css);\n\n\nvar $15db1e855f042fe6$exports = {};\n\n$parcel$export($15db1e855f042fe6$exports, \"UntilBindig\", () => $15db1e855f042fe6$export$f36d8f10294685f8);\n$parcel$export($15db1e855f042fe6$exports, \"UntilDirective\", () => $15db1e855f042fe6$export$51c6edf8ee19b71a);\n$parcel$export($15db1e855f042fe6$exports, \"until\", () => $15db1e855f042fe6$export$a40009bd2c363351);\n\nclass $15db1e855f042fe6$export$f36d8f10294685f8 extends (0, $hgUW1$Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $15db1e855f042fe6$export$51c6edf8ee19b71a extends (0, $hgUW1$HTMLBindingDirective) {\n    constructor(fn, template){\n        super(new $15db1e855f042fe6$export$f36d8f10294685f8((x)=>null));\n        this.fn = null;\n        this.template = null;\n        Object.assign(this, {\n            fn: fn,\n            template: template\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                let loading = this.template.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                this.fn.then((result)=>{\n                    loading.dispose();\n                    result.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                }).catch((error)=>{\n                    console.error(error);\n                    loading.dispose();\n                    (0, $hgUW1$html)`<span>Error: ${error}</span>`.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                });\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(fn, template) {\n        return new $15db1e855f042fe6$export$51c6edf8ee19b71a(fn, template);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($15db1e855f042fe6$export$51c6edf8ee19b71a);\nconst $15db1e855f042fe6$export$a40009bd2c363351 = (fn, template)=>$15db1e855f042fe6$export$51c6edf8ee19b71a.use(fn, template);\n\n\n$parcel$exportWildcard($5193209399721411$exports, $21522158c10703ef$exports);\n$parcel$exportWildcard($5193209399721411$exports, $f6651d38d609160e$exports);\n$parcel$exportWildcard($5193209399721411$exports, $c66c6ea353620255$exports);\n$parcel$exportWildcard($5193209399721411$exports, $6e530dd7df9f7fe5$exports);\n$parcel$exportWildcard($5193209399721411$exports, $15db1e855f042fe6$exports);\n\n\nvar $fde9406d76ec24a9$exports = {};\n\n$parcel$export($fde9406d76ec24a9$exports, \"createObservableObject\", () => $592e71a4a1bc8d5d$export$dcc5cf24d8fb3b41);\n$parcel$export($fde9406d76ec24a9$exports, \"ObservableArray\", () => $07fd0000f26edeb5$export$2b76b04f92326cd);\n$parcel$export($fde9406d76ec24a9$exports, \"ObservableObject\", () => $f0b90d4a5f4da766$export$b176171395436676);\n$parcel$export($fde9406d76ec24a9$exports, \"State\", () => $fde9406d76ec24a9$re_export$State);\n$parcel$export($fde9406d76ec24a9$exports, \"createState\", () => $fde9406d76ec24a9$re_export$createState);\n$parcel$export($fde9406d76ec24a9$exports, \"createStorage\", () => $fde9406d76ec24a9$re_export$createStorage);\n$parcel$export($fde9406d76ec24a9$exports, \"uuid\", () => $fde9406d76ec24a9$re_export$uuid);\n\nclass $f0b90d4a5f4da766$export$b176171395436676 extends Object {\n    static init(initialObject) {\n        let observabe = new $f0b90d4a5f4da766$export$b176171395436676(initialObject);\n        return observabe.createProxy.bind(observabe)();\n    }\n    constructor(initialObject){\n        super();\n        this.$data = {};\n        this.observers = {};\n        // Enregistre un observateur pour une propriété spécifique\n        this.subscribe = (propKey, callback)=>{\n            if (!this.observers[propKey]) this.observers[propKey] = new Set();\n            this.observers[propKey].add(callback);\n        };\n        // Supprime un observateur pour une propriété spécifique\n        this.unsubscribe = (propKey, callback)=>{\n            if (this.observers[propKey]) this.observers[propKey].delete(callback);\n        };\n        this.set = (key, value)=>{\n            const oldValue = this.$data[`_${key}`];\n            this.$data[`_${key}`] = value;\n            (0, $hgUW1$Observable).defineProperty(this.$data, key);\n            this.notify(key, value, oldValue);\n            return this.$data[key];\n        };\n        Object.assign(this.$data, initialObject);\n    }\n    // Méthode appelée pour notifier les observateurs d'un changement de valeur\n    notify(propKey, newValue, oldValue) {\n        if (this.observers[propKey]) this.observers[propKey].forEach((callback)=>callback(newValue, oldValue));\n    }\n    createProxy() {\n        return new Proxy(this.$data, {\n            get: (store, propKey)=>{\n                let result = undefined;\n                if (propKey == \"subscribe\") return this.subscribe;\n                else if (propKey == \"unsubscribe\") return this.unsubscribe;\n                else if (propKey == \"keys\") return ()=>Object.keys(this.$data);\n                else if (propKey == \"values\") return ()=>Object.values(this.$data);\n                try {\n                    result = store[propKey];\n                } catch (error) {\n                    console.error(error);\n                } finally{\n                    return result;\n                }\n            },\n            set: (store, propKey, value)=>{\n                const oldValue = store[propKey];\n                if (store[propKey]) store[propKey] = value;\n                else {\n                    store[`_${propKey}`] = value;\n                    (0, $hgUW1$Observable).defineProperty(store, propKey);\n                }\n                this.notify(propKey, value, oldValue);\n                return true;\n            }\n        });\n    }\n}\n\n\nfunction $592e71a4a1bc8d5d$export$dcc5cf24d8fb3b41(initialObject) {\n    return (0, $f0b90d4a5f4da766$export$b176171395436676).init(initialObject);\n}\n\n\nfunction $07fd0000f26edeb5$export$2b76b04f92326cd(init = []) {\n    const observers = new Set();\n    const notifyObservers = (operation, args, result)=>{\n        observers.forEach((callback)=>callback(operation, args, result));\n    };\n    const arrayMethods = [\n        \"push\",\n        \"pop\",\n        \"splice\",\n        \"shift\",\n        \"unshift\",\n        \"sort\",\n        \"reverse\"\n    ];\n    return new Proxy(init, {\n        get (target, property, receiver) {\n            // Si on accède à une méthode de tableau, la redéfinir pour inclure la notification\n            if (arrayMethods.includes(property)) return (...args)=>{\n                const result = Array.prototype[property].apply(target, args);\n                // Notifier les observateurs du changement\n                notifyObservers(property, args, result);\n                return result;\n            };\n            return Reflect.get(target, property, receiver);\n        },\n        set (target, property, value, receiver) {\n            const oldValue = target[property];\n            const result = Reflect.set(target, property, value, receiver);\n            if (oldValue !== value) notifyObservers(\"set\", {\n                index: property,\n                value: value\n            }, result);\n            return result;\n        }\n    });\n}\n$07fd0000f26edeb5$export$2b76b04f92326cd.prototype.subscribe = function(callback) {\n    this.observers.add(callback);\n};\n$07fd0000f26edeb5$export$2b76b04f92326cd.prototype.unsubscribe = function(callback) {\n    this.observers.delete(callback);\n};\n\n\n\n\n\n\n\n\nvar $c5a7ff2cef84a00c$exports = {};\n\n$parcel$export($c5a7ff2cef84a00c$exports, \"html\", () => $c5a7ff2cef84a00c$export$c0bb0b647f701bb5);\n$parcel$export($c5a7ff2cef84a00c$exports, \"customElement\", () => $c5a7ff2cef84a00c$re_export$customElement);\n$parcel$export($c5a7ff2cef84a00c$exports, \"css\", () => $c5a7ff2cef84a00c$re_export$css);\n$parcel$export($c5a7ff2cef84a00c$exports, \"ViewTemplate\", () => $c5a7ff2cef84a00c$re_export$ViewTemplate);\n$parcel$export($c5a7ff2cef84a00c$exports, \"HTMLView\", () => $c5a7ff2cef84a00c$re_export$HTMLView);\n$parcel$export($c5a7ff2cef84a00c$exports, \"volatile\", () => $c5a7ff2cef84a00c$re_export$volatile);\n$parcel$export($c5a7ff2cef84a00c$exports, \"WebComponent\", () => $284c1ee70f828408$export$7f8b9f308979d41d);\n\n\n\nfunction $46dc60c1cf1be4f3$export$855330f8a2a9f2e8(effect_name, callback, dependencies) {\n    (0, $f24f9f18a7b99a68$export$dc573d8a6576cdb3)(dependencies)(this, effect_name, callback);\n}\n\n\n\nfunction $facec54f608d45db$export$ad300186e7a01246(key, value) {\n    function useState(key) {\n        return [\n            this[key],\n            (newValue)=>{\n                this[key] = newValue;\n            }\n        ];\n    }\n    (0, $a1f8df21dd3b8ee9$export$ca000e230c0caa3e)()(this, key, value);\n    return useState.bind(this)(key);\n}\n\n\n\nfunction $7d8e02f1fed4bf94$export$366cf43304d85757(key, value) {\n    (0, $a1f8df21dd3b8ee9$export$ca000e230c0caa3e)()(this, key, value, false);\n}\n\n\nclass $284c1ee70f828408$export$7f8b9f308979d41d extends (0, $hgUW1$FASTElement) {\n    constructor(){\n        super();\n    }\n    get bindState() {\n        return (0, $facec54f608d45db$export$ad300186e7a01246).bind(this);\n    }\n    get bindConsumable() {\n        return (0, $7d8e02f1fed4bf94$export$366cf43304d85757).bind(this);\n    }\n    get bindEffect() {\n        return (0, $46dc60c1cf1be4f3$export$855330f8a2a9f2e8).bind(this);\n    }\n    handleStateChange(propertyName, oldValue, newValue) {\n        this[propertyName] = newValue;\n        this.effects?.execute(propertyName);\n    }\n    connectedCallback() {\n        this.effects?.execute();\n        super.connectedCallback();\n    }\n}\n$284c1ee70f828408$export$7f8b9f308979d41d.define = (0, $hgUW1$FASTElement).define;\n\n\nconst $c5a7ff2cef84a00c$export$c0bb0b647f701bb5 = (0, $hgUW1$html);\n\n\nvar $407cc31aa7cd1215$exports = {};\nvar $899e8805cec15bdd$exports = {};\n\n$parcel$export($899e8805cec15bdd$exports, \"ViewExecutionContext\", () => $899e8805cec15bdd$export$1053a9be1bcefef9);\n\n\n\n\nclass $899e8805cec15bdd$export$1053a9be1bcefef9 extends Object {\n    constructor(data){\n        super();\n        this.states = {};\n        this.effects = (0, $935380081e1d8be7$export$af73ab700e00763e)();\n        this.handleStateChange = (propertyName, oldValue, newValue)=>{\n            this[propertyName] = newValue;\n            this[\"effects\"].execute(propertyName);\n        };\n        Object.assign(this, data);\n    }\n    get bindState() {\n        return (0, $facec54f608d45db$export$ad300186e7a01246).bind(this);\n    }\n    get bindConsumable() {\n        return (0, $7d8e02f1fed4bf94$export$366cf43304d85757).bind(this);\n    }\n    get bindEffect() {\n        return (0, $46dc60c1cf1be4f3$export$855330f8a2a9f2e8).bind(this);\n    }\n    static init(data) {\n        return new $899e8805cec15bdd$export$1053a9be1bcefef9(data);\n    }\n}\n\n\nvar $3905e9ecff2931d2$exports = {};\n\n\nvar $dad4474276f9eead$exports = {};\n\n\n$parcel$exportWildcard($407cc31aa7cd1215$exports, $899e8805cec15bdd$exports);\n$parcel$exportWildcard($407cc31aa7cd1215$exports, $3905e9ecff2931d2$exports);\n$parcel$exportWildcard($407cc31aa7cd1215$exports, $dad4474276f9eead$exports);\n\n\nvar $4c5fb5bb6e826a01$exports = {};\nvar $ea70625fa1b5e3d6$exports = {};\n\n$parcel$export($ea70625fa1b5e3d6$exports, \"render\", () => $ea70625fa1b5e3d6$export$b3890eb0ae9dca99);\n\n\n// Fonction pour observer les enfants ajoutés\nconst $ea70625fa1b5e3d6$var$observeChilds = (container, config, callback)=>{\n    // Crée un MutationObserver\n    const observer = new MutationObserver((mutationsList, observer)=>{\n        // Parcourt toutes les mutations détectées\n        mutationsList.forEach((mutation)=>{\n            if (mutation.type === \"childList\") // Vérifie si des nœuds ont été ajoutés\n            mutation.addedNodes.forEach((node)=>{\n                if (node.nodeType === Node.ELEMENT_NODE) {\n                    console.log(\"Nouvel \\xe9l\\xe9ment ajout\\xe9 :\", node);\n                    callback(node); // Exécute le callback avec le nœud ajouté\n                }\n            });\n        });\n    });\n    // Démarre l'observation\n    observer.observe(container, config);\n    // Retourne l'observer pour pouvoir le déconnecter si besoin\n    return observer;\n};\nfunction $ea70625fa1b5e3d6$export$b3890eb0ae9dca99(template, container = document.body, data = {}) {\n    let context = (0, $899e8805cec15bdd$export$1053a9be1bcefef9).init(data);\n    let observer = $ea70625fa1b5e3d6$var$observeChilds(container, {\n        childList: true,\n        // Observe les ajouts et suppressions d'enfants\n        subtree: false // Si true, observe tous les descendants du parent\n    }, (node)=>{\n        if (node instanceof (0, $284c1ee70f828408$export$7f8b9f308979d41d) == false) {\n            if (context[\"effects\"]) context[\"effects\"].execute();\n        }\n        observer.disconnect();\n    });\n    let element = template.render(context, container);\n    return element;\n}\n\n\n$parcel$exportWildcard($4c5fb5bb6e826a01$exports, $ea70625fa1b5e3d6$exports);\n\n\n\n\n\nexport {$935380081e1d8be7$export$af73ab700e00763e as Effects, $b1b98f19caab25c2$export$683a0e8baad8b9c3 as attrState, $b1b98f19caab25c2$import$843d46ff018552b8$7aabe8b3a840d2fd as attr, $a1f8df21dd3b8ee9$export$ca000e230c0caa3e as state, $f24f9f18a7b99a68$export$dc573d8a6576cdb3 as effect, $5193209399721411$re_export$when as when, $5193209399721411$re_export$repeat as repeat, $5193209399721411$re_export$children as children, $5193209399721411$re_export$elements as elements, $5193209399721411$re_export$slotted as slotted, $21522158c10703ef$export$ca3487b83ec6860a as AsyncAppendBindig, $21522158c10703ef$export$5761d9f85430a54b as AsyncAppendDirective, $21522158c10703ef$export$eaa89ade56b7c0c1 as asyncAppend, $f6651d38d609160e$export$7d1e3a5e95ceca43 as createRef, $f6651d38d609160e$export$1ef8aea9a6de98d as RefDirective, $f6651d38d609160e$export$eff4d24c3ff7876e as ref, $c66c6ea353620255$export$28205fa712822499 as StateBindig, $c66c6ea353620255$export$792c882b75ca2192 as StateDirective, $c66c6ea353620255$export$60241385465d0a34 as useState, $6e530dd7df9f7fe5$export$81053cd05d55c9d8 as StyleBindig, $6e530dd7df9f7fe5$export$18211b6e76035cfa as StyleDirective, $6e530dd7df9f7fe5$export$1d567c320f4763bc as style, $15db1e855f042fe6$export$f36d8f10294685f8 as UntilBindig, $15db1e855f042fe6$export$51c6edf8ee19b71a as UntilDirective, $15db1e855f042fe6$export$a40009bd2c363351 as until, $592e71a4a1bc8d5d$export$dcc5cf24d8fb3b41 as createObservableObject, $07fd0000f26edeb5$export$2b76b04f92326cd as ObservableArray, $f0b90d4a5f4da766$export$b176171395436676 as ObservableObject, $fde9406d76ec24a9$re_export$State as State, $fde9406d76ec24a9$re_export$createState as createState, $fde9406d76ec24a9$re_export$createStorage as createStorage, $fde9406d76ec24a9$re_export$uuid as uuid, $c5a7ff2cef84a00c$export$c0bb0b647f701bb5 as html, $c5a7ff2cef84a00c$re_export$customElement as customElement, $c5a7ff2cef84a00c$re_export$css as css, $c5a7ff2cef84a00c$re_export$ViewTemplate as ViewTemplate, $c5a7ff2cef84a00c$re_export$HTMLView as HTMLView, $c5a7ff2cef84a00c$re_export$volatile as volatile, $284c1ee70f828408$export$7f8b9f308979d41d as WebComponent, $899e8805cec15bdd$export$1053a9be1bcefef9 as ViewExecutionContext, $ea70625fa1b5e3d6$export$b3890eb0ae9dca99 as render};\n//# sourceMappingURL=module.js.map\n","// export * from './dom';\nexport * from './decorators';\nexport * from './directives';\nexport * from './utils';\nexport * from './webComponent';\nexport * from './templateComponent';\n\nexport * from './functions';\n\nexport { Effects } from './models/effects';\nexport type { EffectRegistery } from './models/effects';","export * from './attributeState';\nexport * from './state';\nexport * from './effect';","import { DecoratorAttributeConfiguration, attr } from \"@microsoft/fast-element\";\nimport { state } from './state';\n\n/**\n * @AttributeState decorator\n * A decorator to define a property as both an attribute and a state on a WebComponent.\n * This combines the behavior of @attr and @State decorators.\n * \n * @param {DecoratorAttributeConfiguration} options - Options to configure the attribute.\n * @returns {Function} - The decorator function.\n * \n * @example\n * ```typescript\n * // Define an editable title component using the AttributeState decorator\n * \n * customElement({\n *     name: 'editable-title',\n *     template : html`...`\n * })\n * class EditableTitle extends WebComponent {\n *     AttributeState() level: number = 2;\n *     AttributeState() editable: string = \"false\";\n *     State value: string = \"Hello World\";\n * \n *     handleInput(event) {\n *         this.value = event.target.innerText;\n *     }\n * \n *     connectedCallback() {\n *         super.connectedCallback();\n *     }\n * }\n * ```\n */\nexport function attrState( options:DecoratorAttributeConfiguration = {} ){\n\n  return ( target, propertyKey: string ) => {\n    attr( options )( target , propertyKey );\n    state()( target , propertyKey );\n  }\n\n}\n\nexport { attr };","import { Observable } from \"@microsoft/fast-element\";\n\nexport function state(  ) {\n  return function (target: any, propertyName: string , value?:any , y?) {\n      let privateName = `_${propertyName}`\n\n      if(!target[propertyName])Object.defineProperty(target, propertyName, {\n          get() {\n              // Retourne la valeur de l'état depuis l'objet 'states' pour CETTE instance\n              if (!this.states) {\n                  this.states = {};  // Si l'objet 'states' n'existe pas encore, on le crée pour chaque instance\n              }\n\n              Observable.track(this, propertyName);\n\n              return this.states[privateName];\n          },\n          set(newValue: any) {\n              // Si l'objet 'states' n'existe pas encore, le créer pour CETTE instance\n              if (!this.states) {\n                  this.states = {};\n              }\n\n              const oldValue = this.states[privateName];\n\n              if(oldValue != newValue){\n\n                this.states[privateName] = newValue;\n\n                Observable.notify( this, propertyName);\n\n                // Si l'état a changé, déclenche une action pour CETTE instance\n                if (oldValue !== newValue) {\n                    this.handleStateChange(propertyName, oldValue, newValue);\n                }\n\n              }\n\n          },\n          enumerable: true,\n          configurable: true\n      });\n\n      if( value && target[propertyName] == null )target[ propertyName ] = value;\n\n  };\n}","import { Effects } from \"../models/effects\";\nimport { IWebComponent } from \"../webComponent/interface\";\n\nexport function effect( dependencies:any[] ){\n\n  return ( target:IWebComponent , propertyName: string , value = null ) => {\n\n    if( !target[propertyName] )Object.defineProperty(target, propertyName, {\n      get() {\n          // Retourne la valeur de l'état depuis l'objet 'states' pour CETTE instance\n          if (!this.effects) {\n              this.effects = Effects();  // Si l'objet 'states' n'existe pas encore, on le crée pour chaque instance\n          }\n\n          return this.effects.get( propertyName );\n      },\n      set(newValue: any) {\n          // Si l'objet 'states' n'existe pas encore, le créer pour CETTE instance\n          if (!this.effects) {\n            this.effects = Effects();\n          }\n\n          this.effects.set( propertyName , {\n            name : propertyName,\n            dependencies : dependencies,\n            callback : newValue\n          } )\n\n      },\n      enumerable: true,\n      configurable: true\n    });\n    \n    if( value && target[propertyName] == null )target[ propertyName ] = value;\n  \n  }\n\n}","import { WebComponent } from \"../webComponent\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { IWebComponent } from \"src/webComponent/interface\";\n\nexport type EffectRegistery = ( Map< string , IEffect > & { execute( dependency?:string ):void } );\n\nexport interface IEffect{\n  name:string;\n  dependencies : string[];\n  callback:any;\n}\n\nexport function Effects( effects?:Record< string , IEffect > ):EffectRegistery{\n\n  const effects_register = new Map() as EffectRegistery;\n\n  if(effects)Object.values(effects).forEach((effect) => {\n    this.set( effect.name , effect )\n  });\n\n  effects_register.execute = function( dependency?:string ){\n\n    let effects_without_depedencies = [...this.values()].filter(( effect ) => !effect.dependencies || effect.dependencies.length == 0 ? effect : null);\n    let effects_with_depedencies = [...this.values()].filter(( effect ) => effect.dependencies && effect.dependencies.length > 0 ? effect : null);\n\n    effects_with_depedencies.forEach(( effect ) => {\n\n      let { dependencies , callback:useEffect , name } = effect;\n\n      if(dependency && dependencies.includes( dependency )){\n        console.log( `Math effect ${dependency}` )\n        useEffect();\n      }\n\n    })\n\n    if( !dependency )effects_without_depedencies.forEach(( effect ) => {\n\n      let { callback:useEffect } = effect;\n      try{\n        useEffect();\n      }\n      catch(error){\n        console.error(error);\n      }\n\n    })\n\n  }\n\n  return effects_register;\n\n}\n\n// export class Effects extends Map< string , IEffect >{\n\n//   execute( dependency?:string ){\n\n//     let effects_without_depedencies = [...this.values()].filter(( effect ) => !effect.dependencies || effect.dependencies.length == 0 ? effect : null);\n//     let effects_with_depedencies = [...this.values()].filter(( effect ) => effect.dependencies && effect.dependencies.length > 0 ? effect : null);\n\n//     effects_with_depedencies.forEach(( effect ) => {\n\n//       let { dependencies , callback:useEffect , name } = effect;\n\n//       if(dependency && dependencies.includes( dependency )){\n//         useEffect();\n//       }\n\n//     })\n\n//     if( !dependency )effects_without_depedencies.forEach(( effect ) => {\n\n//       let { callback:useEffect } = effect;\n//       try{\n//         useEffect();\n//       }\n//       catch(error){\n//         console.error(error);\n//       }\n\n//     })\n\n//   }\n\n//   constructor( effects?:Record< string , IEffect > ){\n//     super();\n\n//     if(effects)Object.values(effects).forEach((effect) => {\n//       this.set( effect.name , effect )\n//     });\n\n//   }\n\n// }","import {\n  when,\n  repeat,\n  // ref,\n  children,\n  elements,\n  slotted,\n} from '@microsoft/fast-element';\n\nexport {\n  when,\n  repeat,\n  children,\n  elements,\n  slotted\n}\n\nexport * from './assyncAppend.js';\nexport * from './ref.js';\nexport * from './state.js';\nexport * from './style.js';\nexport * from './until.js';","import { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , html , Binding } from '@microsoft/fast-element';\nimport type { Subscriber , BindingDirective, ExpressionObserver } from '@microsoft/fast-element';\n\nexport class AsyncAppendBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class AsyncAppendDirective<T = any> extends HTMLBindingDirective {\n\n  fn:Promise<T> = null;\n  callback:( result:T ) => ViewTemplate = null;\n\n  constructor( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) {\n    super( new AsyncAppendBindig( (x) => null ) );\n    Object.assign( this , { fn , callback } );\n  }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n\n    return {\n        bind : (source:HTMLView ) => {\n\n          let target = source.targets[targetNodeId];\n\n          this.fn\n          .then(( result ) => {\n            this.callback( result ).render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n          .catch(( error ) => {\n            console.error(error)\n            html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ){\n    return new AsyncAppendDirective( fn , callback);\n  }\n\n}\n\nHTMLDirective.define( AsyncAppendDirective );\n\nexport { Subscriber }\n\nexport const asyncAppend = <T = any>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) => AsyncAppendDirective.use<T>( fn , callback );","import { HTMLDirective, HTMLView, Binding, BindingDirective, ExpressionObserver, Subscriber, StatelessAttachedAttributeDirective } from '@microsoft/fast-element';\n\nexport interface IElementRef< T extends Node >{\n  value : T;\n}\n\nexport function createRef< T extends Node >():IElementRef<T>{\n  return {\n    value : null\n  }\n}\n\nexport class RefDirective<T extends Node> extends StatelessAttachedAttributeDirective<IElementRef<T>> {\n\n  options:IElementRef<T> = null;\n\n  constructor( options:IElementRef<T> ) {\n    super( options );\n    Object.assign( this , { options } )\n  }\n\n  bind(controller: HTMLView): void {\n\n    let { lastChild:target } = controller;\n\n    this.options.value = target as any;\n\n  }\n\n  static use<T extends Node>( options:IElementRef<T> ){\n    return new RefDirective<T>( options );\n  }\n\n}\n\nHTMLDirective.define( RefDirective )\n\nexport const ref = <T extends Node>( options:IElementRef<T> ) => RefDirective.use<T>( options );","// import { ViewTemplate, HTMLBindingDirective, ExecutionContext } from '@microsoft/fast-element';\nimport { State , createState } from '@lithium-framework/state';\nimport { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class StateBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StateDirective<T = any> extends HTMLBindingDirective {\n\n    _state:State<T> = null;\n    get state(){ return this._state.mutator[0] }\n    set state( value:T ){ this._state.mutator[1](value) }\n\n    _callback:( newValue:T ) => ViewTemplate = null;\n\n    constructor( state: State<T> , callback:( newValue:T ) => ViewTemplate ) {\n        super( new StateBindig( (x) => null ) );\n        this._state = state;\n        this._callback = callback;\n    }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n    let view:HTMLView = null;\n\n    return {\n        bind : (source:HTMLView) => {\n\n            let target = source.targets[targetNodeId];\n\n            if(this._callback){\n\n                this._state.subscribe(() => {\n                    view.dispose();\n                    view = this._callback( this.state ).render( source , target.parentElement );\n                });\n\n                view = this._callback( this.state ).render( source , target.parentElement );\n\n            }\n\n            else{\n\n                this._state.subscribe(() => {\n                    if(\"textContent\" in target){\n                        target.textContent = `${this.state}`;\n                    }\n                });\n\n                if(\"textContent\" in target){\n                    target.textContent = `${this.state}`;\n                }\n\n            }\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T = any>( state , callback ){\n    return new StateDirective<T>( state , callback )\n  }\n\n}\n\nHTMLDirective.define( StateDirective )\n\nexport const useState = <T>( state: State<T> , callback?:( newValue:T ) => ViewTemplate ) => StateDirective.use<T>( state , callback );","import { HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\nimport { Properties } from '../utils/css-object';\n\nexport class StyleBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StyleDirective extends HTMLBindingDirective {\n\n  css:Properties = null;\n\n  constructor( css:Properties ) {\n      super( new StyleBindig( (x) => null ) );\n      Object.assign( this , { css } );\n\n  }\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n  let view:HTMLView = null;\n\n  return {\n      bind : (source:HTMLView) => {\n\n        let target = source.targets[targetNodeId];\n        if(target instanceof HTMLElement)Object.assign( target.style , this.css );\n\n      },\n      unbind : () => {\n          // Nettoyage si nécessaire\n      }\n  };\n\n}\n\nstatic use( css:Properties ){\n  return new StyleDirective( css )\n}\n\n}\n\nHTMLDirective.define( StyleDirective );\n\nexport const style = ( css:Properties ) => StyleDirective.use( css );","import { ViewTemplate , html , HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class UntilBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class UntilDirective extends HTMLBindingDirective {\n\n  fn:Promise<ViewTemplate> = null;\n  template:ViewTemplate = null;\n\n  constructor( fn:Promise<ViewTemplate> , template:ViewTemplate ) {\n    super( new UntilBindig( (x) => null ) );\n    Object.assign( this , { fn , template } );\n}\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n\n  return {\n    bind : (source:HTMLView) => {\n\n      let target = source.targets[targetNodeId];\n      let loading = this.template.render( source , target instanceof HTMLElement ? target : target.parentElement );\n\n      this.fn\n      .then(( result ) => {\n        loading.dispose()\n        result.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n      .catch(( error ) => {\n        console.error(error);\n        loading.dispose();\n        html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n\n    },\n    unbind : () => {\n        // Nettoyage si nécessaire\n    }\n};\n\n}\n\nstatic use( fn:Promise<ViewTemplate> , template: ViewTemplate ){\n  return new UntilDirective( fn , template);\n}\n\n}\n\nHTMLDirective.define( UntilDirective );\n\nexport const until = ( fn:Promise<ViewTemplate> , template:ViewTemplate ) => UntilDirective.use( fn , template );","export {\n  // _cssObject,\n  // Properties,\n  // createCSS\n} from './css-object';\n\nexport {\n  createObservableObject,\n} from './observable-object';\n\nexport {\n  ObservableArray,\n} from './observable-array';\n\nexport {\n  ObservableObject,\n  type ObservableProxy,\n} from './observable-object/models';\n\nexport { \n  State,\n  createState\n} from '@lithium-framework/state';\n\nexport { \n  createStorage,\n  // Storage, \n  // StorageKeys, \n  // StorageValues, \n  // StateValidator\n} from '@lithium-framework/context';\n\nexport {\n  // ComponentId,\n  // Segment,\n  // ParentSegementId,\n  // CollectionId,\n  // HUID,\n  // HierarchicalUUIDOptions,\n  uuid\n} from '@lithium-framework/huid';","import { ObservableObject } from './models';\n\nexport function createObservableObject< Key extends string , Value extends any >( initialObject:Record< Key , Value > ){\n  return ObservableObject.init< Key , Value >( initialObject );\n}","import { Observable } from \"@microsoft/fast-element\";\n\nexport type ObservableProxy< key extends string , value extends any = any > = Record<string , value> & { \n  subscribe : ObservableObject< key , value >[\"subscribe\"] , \n  unsubscribe : ObservableObject< key , value >[\"unsubscribe\"],\n  keys():string[];\n  values():any[];\n}\n\nexport class ObservableObject< key extends string , value extends any = any > extends Object{\n\n  static init< key extends string , value extends any >( initialObject:Record<key , value> ){\n    let observabe = new ObservableObject< key , value >( initialObject );\n    return observabe.createProxy.bind(observabe)();\n  }\n\n  $data:Record<string , value> = {};\n  private observers: Record<string, Set<(newValue: any, oldValue: any) => void>> = {};\n\n  constructor( initialObject:Record<key , value> ){\n    super();\n    Object.assign( this.$data , initialObject );\n  };\n\n  // Enregistre un observateur pour une propriété spécifique\n  subscribe = (propKey: key, callback: (newValue: any, oldValue: any) => void) => {\n    if (!this.observers[propKey]) {\n      this.observers[propKey] = new Set();\n    }\n    this.observers[propKey].add(callback);\n  }\n\n  // Supprime un observateur pour une propriété spécifique\n  unsubscribe = (propKey: key, callback: (newValue: any, oldValue: any) => void) => {\n    if (this.observers[propKey]) {\n      this.observers[propKey].delete(callback);\n    }\n  }\n\n  // Méthode appelée pour notifier les observateurs d'un changement de valeur\n  private notify(propKey: string, newValue: any, oldValue: any) {\n    if (this.observers[propKey]) {\n      this.observers[propKey].forEach(callback => callback(newValue, oldValue));\n    }\n  }\n\n  set = <T extends value = any>( key:key , value:T ) => {   \n\n    const oldValue = this.$data[`_${key}`];\n\n    this.$data[`_${key}`] = value as any;\n    Observable.defineProperty( this.$data, key);\n    this.notify(key, value, oldValue);\n    return this.$data[key];\n\n  }\n\n  createProxy():ObservableProxy< key , value > {\n\n    return new Proxy( this.$data , {\n      get : ( store , propKey:string ) => {\n\n        let result:any = undefined;\n\n        if( propKey == \"subscribe\" )return this.subscribe;\n        else if( propKey == \"unsubscribe\" )return this.unsubscribe;\n        else if( propKey == \"keys\" )return () => Object.keys( this.$data );\n        else if( propKey == \"values\" )return () => Object.values( this.$data );\n\n        try{\n          result = store[propKey];\n        }\n        catch(error){\n          console.error(error);\n        }\n        finally{\n          return result;\n        }\n\n      },\n      set : ( store , propKey: string, value: any ) => {\n        const oldValue = store[propKey];\n\n        if(store[propKey]){\n          store[propKey] = value;\n        }\n        else {\n          store[ `_${propKey}` ] = value;\n          Observable.defineProperty( store, propKey);\n        }\n\n        this.notify(propKey, value, oldValue);\n\n        return true;\n  \n      }\n    }) as ObservableProxy< key , value >;\n\n  }\n\n}","export function ObservableArray(init: Array<any> = []) {\n\n  const observers = new Set<(operation: string, args: any, result: any) => void>();\n\n  const notifyObservers = (operation: string, args: any, result: any) => {\n    observers.forEach(callback => callback(operation, args, result));\n  };\n\n  const arrayMethods = ['push', 'pop', 'splice', 'shift', 'unshift', 'sort', 'reverse'];\n\n  return new Proxy(init, {\n    get(target, property, receiver) {\n      // Si on accède à une méthode de tableau, la redéfinir pour inclure la notification\n      if (arrayMethods.includes(property as string)) {\n        return (...args: any[]) => {\n          const result = Array.prototype[property].apply(target, args);\n          // Notifier les observateurs du changement\n          notifyObservers(property as string, args, result);\n          return result;\n        };\n      }\n\n      return Reflect.get(target, property, receiver);\n    },\n\n    set(target, property, value, receiver) {\n      const oldValue = target[property];\n      const result = Reflect.set(target, property, value, receiver);\n\n      if (oldValue !== value) {\n        notifyObservers('set', { index: property, value }, result);\n      }\n\n      return result;\n    },\n  });\n}\n\nObservableArray.prototype.subscribe = function (callback: (operation: string, args: any, result: any) => void) {\n  this.observers.add(callback);\n};\n\nObservableArray.prototype.unsubscribe = function (callback: (operation: string, args: any, result: any) => void) {\n  this.observers.delete(callback);\n};\n","export { \n  customElement , \n  css,\n  // html,\n  ViewTemplate,\n  HTMLView,\n  volatile,\n} from \"@microsoft/fast-element\";\n\nimport {\n  html as _html,\n  HTMLTemplateTag\n} from \"@microsoft/fast-element\"\n\nexport const html:HTMLTemplateTag = _html;\n\nexport { \n  WebComponent \n} from './model';","import { FASTElement, Observable } from \"@microsoft/fast-element\";\nimport { IWebComponent } from \"./interface\";\n\nimport { bindEffect } from '../controllers/bindEffect';\nimport { bindState } from '../controllers/bindState';\nimport { bindConsumable } from '../controllers/bindConsumable';\n\n/* The WebComponent class extends FASTElement and provides state management functionality using\nObservableObject. */\nexport class WebComponent extends FASTElement implements IWebComponent{\n\n  constructor(){\n    super();\n  }\n\n  get bindState():< States , Value >(key: keyof States, value: Value) => [state: Value, setter: (newValue: Value) => void]{ return bindState.bind(this) }\n  get bindConsumable():< Value >(key: string, value: Value) => void{ return bindConsumable.bind(this) }\n  get bindEffect():( effect_name : string , callback: () => void, dependencies: any[])=> void{ return bindEffect.bind( this ) }\n\n  handleStateChange( this:IWebComponent , propertyName, oldValue, newValue ){\n    this[propertyName] = newValue;\n    this.effects?.execute( propertyName );\n  }\n\n  connectedCallback( this:IWebComponent ) {\n    this.effects?.execute();\n    super.connectedCallback();\n  }\n\n  static define = FASTElement.define\n  \n}","import { WebComponent } from \"../webComponent\";\nimport { IEffect } from \"../models/effects\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { effect } from \"../decorators\";\n\nexport function bindEffect( this:WebComponent | ViewExecutionContext , effect_name:string , callback : () => void , dependencies : any[] ){\n\n  effect( dependencies )( this , effect_name , callback );\n\n}","import { ObservableObject, ObservableProxy } from \"../utils\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { WebComponent } from \"../webComponent\";\nimport { state } from \"../decorators\";\n\nexport function bindState< States , Value >( this:WebComponent | ViewExecutionContext , key:keyof States , value:Value ):[ state:Value , setter:( newValue:Value ) => void ]{\n\n  function useState( this:ViewExecutionContext , key:keyof States ):[ state:Value , setter:( newValue:Value ) => void ]{\n\n    return [ this[key as string] , ( newValue ) => {\n      this[key as string] = newValue;\n    } ]\n\n  }\n\n  state()( this , key as string , value );\n  return useState.bind( this )( key );\n\n}","import { WebComponent } from \"src/webComponent\";\nimport { state } from \"../decorators\";\nimport { ViewExecutionContext } from \"src/templateComponent\";\nimport { ObservableProxy } from \"../utils\";\n\nexport function bindConsumable<Value = any>( this:WebComponent | ViewExecutionContext , key:string , value:Value ){\n  state()( this , key , value , false );\n}","export * from './model';\nexport * from './types';\nexport * from './interfaces';","import { ViewContext } from './types';\nimport { EffectRegistery, Effects, IEffect } from '../models/effects';\nimport { IWebComponent } from '../webComponent/interface';\n\nimport { bindEffect } from '../controllers/bindEffect';\nimport { bindState } from '../controllers/bindState';\nimport { bindConsumable } from '../controllers/bindConsumable';\n\nexport class ViewExecutionContext< T = any , States extends Record<string , any> = Record<string , any> > extends Object implements IWebComponent{\n\n  states = {};\n  effects?: EffectRegistery = Effects();\n\n  constructor(data?:T ){\n    super();\n\n    Object.assign( this , data );\n\n  }\n\n  get bindState():< Value = never >(key: keyof States, value: Value) => [state: Value, setter: (newValue: Value) => void]{ return bindState.bind(this) }\n  get bindConsumable():< Value >(key: string, value: Value) => void{ return bindConsumable.bind(this) }\n  get bindEffect():( effect_name:string , callback: () => void, dependencies: any[])=> void{ return bindEffect.bind( this ) }\n\n  handleStateChange = ( propertyName, oldValue, newValue ) => {\n    this[propertyName] = newValue;\n    this[\"effects\"].execute( propertyName );\n  }\n\n  static init< T extends Record<string , any> = {} >( data?:T ):ViewContext<T>{\n      return new ViewExecutionContext( data ) as any as ViewContext<T>;\n  }\n\n}","import { ViewExecutionContext } from \"./model\";\n\nexport type ViewContext< T = Record<string , any> , States = Record<string , any> > = ViewExecutionContext<T , States> & T;","export {};","export * from './render';","import { ViewTemplate } from '@microsoft/fast-element';\nimport { ViewExecutionContext } from '../templateComponent/model';\nimport { WebComponent } from '../webComponent';\n\n// Fonction pour observer les enfants ajoutés\nconst observeChilds = (\n  container: HTMLElement,\n  config: MutationObserverInit,\n  callback: (node: Node) => void\n) => {\n  // Crée un MutationObserver\n  const observer = new MutationObserver((mutationsList, observer) => {\n    // Parcourt toutes les mutations détectées\n    mutationsList.forEach(mutation => {\n      if (mutation.type === 'childList') {\n        // Vérifie si des nœuds ont été ajoutés\n        mutation.addedNodes.forEach(node => {\n          if (node.nodeType === Node.ELEMENT_NODE) {\n            console.log('Nouvel élément ajouté :', node);\n            callback(node);  // Exécute le callback avec le nœud ajouté\n          }\n        });\n      }\n    });\n  });\n\n  // Démarre l'observation\n  observer.observe(container, config);\n\n  // Retourne l'observer pour pouvoir le déconnecter si besoin\n  return observer;\n};\n\nexport function render< T extends Record<string , any> = {} , Storage extends Record<string , any> = Record<string , any> >(template: ViewTemplate<ViewExecutionContext<any, Record<string, any>>, any>, container: HTMLElement = document.body , data = {} ) {\n\n  let context = ViewExecutionContext.init(data);\n\n  let observer = observeChilds( \n    container, \n    {\n      childList: true,  // Observe les ajouts et suppressions d'enfants\n      subtree: false    // Si true, observe tous les descendants du parent\n    },\n    ( node ) => {\n\n      if( node instanceof WebComponent == false ){\n        if(context[\"effects\"])context[\"effects\"].execute();\n      }\n\n      observer.disconnect();\n    }\n  );\n\n  let element = template.render( context , container);\n\n  return element;\n\n}","import { Observable } from \"../observation/observable.js\";\nimport { isString } from \"../interfaces.js\";\nimport { Updates } from \"../observation/update-queue.js\";\nimport { DOM } from \"../dom.js\";\nimport { createMetadataLocator } from \"../platform.js\";\nconst booleanMode = \"boolean\";\nconst reflectMode = \"reflect\";\n/**\n * Metadata used to configure a custom attribute's behavior.\n * @public\n */\nexport const AttributeConfiguration = Object.freeze({\n    /**\n     * Locates all attribute configurations associated with a type.\n     */\n    locate: createMetadataLocator(),\n});\n/**\n * A {@link ValueConverter} that converts to and from `boolean` values.\n * @remarks\n * Used automatically when the `boolean` {@link AttributeMode} is selected.\n * @public\n */\nexport const booleanConverter = {\n    toView(value) {\n        return value ? \"true\" : \"false\";\n    },\n    fromView(value) {\n        return value === null ||\n            value === void 0 ||\n            value === \"false\" ||\n            value === false ||\n            value === 0\n            ? false\n            : true;\n    },\n};\n/**\n * A {@link ValueConverter} that converts to and from `boolean` values. `null`, `undefined`, `\"\"`,\n * and `void` values are converted to `null`.\n * @public\n */\nexport const nullableBooleanConverter = {\n    toView(value) {\n        return typeof value === \"boolean\" ? value.toString() : \"\";\n    },\n    fromView(value) {\n        return [null, undefined, void 0].includes(value)\n            ? null\n            : booleanConverter.fromView(value);\n    },\n};\nfunction toNumber(value) {\n    if (value === null || value === undefined) {\n        return null;\n    }\n    const number = value * 1;\n    return isNaN(number) ? null : number;\n}\n/**\n * A {@link ValueConverter} that converts to and from `number` values.\n * @remarks\n * This converter allows for nullable numbers, returning `null` if the\n * input was `null`, `undefined`, or `NaN`.\n * @public\n */\nexport const nullableNumberConverter = {\n    toView(value) {\n        const output = toNumber(value);\n        return output ? output.toString() : output;\n    },\n    fromView: toNumber,\n};\n/**\n * An implementation of {@link Accessor} that supports reactivity,\n * change callbacks, attribute reflection, and type conversion for\n * custom elements.\n * @public\n */\nexport class AttributeDefinition {\n    /**\n     * Creates an instance of AttributeDefinition.\n     * @param Owner - The class constructor that owns this attribute.\n     * @param name - The name of the property associated with the attribute.\n     * @param attribute - The name of the attribute in HTML.\n     * @param mode - The {@link AttributeMode} that describes the behavior of this attribute.\n     * @param converter - A {@link ValueConverter} that integrates with the property getter/setter\n     * to convert values to and from a DOM string.\n     */\n    constructor(Owner, name, attribute = name.toLowerCase(), mode = reflectMode, converter) {\n        this.guards = new Set();\n        this.Owner = Owner;\n        this.name = name;\n        this.attribute = attribute;\n        this.mode = mode;\n        this.converter = converter;\n        this.fieldName = `_${name}`;\n        this.callbackName = `${name}Changed`;\n        this.hasCallback = this.callbackName in Owner.prototype;\n        if (mode === booleanMode && converter === void 0) {\n            this.converter = booleanConverter;\n        }\n    }\n    /**\n     * Sets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     * @param value - The value to set the attribute/property to.\n     */\n    setValue(source, newValue) {\n        const oldValue = source[this.fieldName];\n        const converter = this.converter;\n        if (converter !== void 0) {\n            newValue = converter.fromView(newValue);\n        }\n        if (oldValue !== newValue) {\n            source[this.fieldName] = newValue;\n            this.tryReflectToAttribute(source);\n            if (this.hasCallback) {\n                source[this.callbackName](oldValue, newValue);\n            }\n            source.$fastController.notify(this.name);\n        }\n    }\n    /**\n     * Gets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     */\n    getValue(source) {\n        Observable.track(source, this.name);\n        return source[this.fieldName];\n    }\n    /** @internal */\n    onAttributeChangedCallback(element, value) {\n        if (this.guards.has(element)) {\n            return;\n        }\n        this.guards.add(element);\n        this.setValue(element, value);\n        this.guards.delete(element);\n    }\n    tryReflectToAttribute(element) {\n        const mode = this.mode;\n        const guards = this.guards;\n        if (guards.has(element) || mode === \"fromView\") {\n            return;\n        }\n        Updates.enqueue(() => {\n            guards.add(element);\n            const latestValue = element[this.fieldName];\n            switch (mode) {\n                case reflectMode:\n                    const converter = this.converter;\n                    DOM.setAttribute(element, this.attribute, converter !== void 0 ? converter.toView(latestValue) : latestValue);\n                    break;\n                case booleanMode:\n                    DOM.setBooleanAttribute(element, this.attribute, latestValue);\n                    break;\n            }\n            guards.delete(element);\n        });\n    }\n    /**\n     * Collects all attribute definitions associated with the owner.\n     * @param Owner - The class constructor to collect attribute for.\n     * @param attributeLists - Any existing attributes to collect and merge with those associated with the owner.\n     * @internal\n     */\n    static collect(Owner, ...attributeLists) {\n        const attributes = [];\n        attributeLists.push(AttributeConfiguration.locate(Owner));\n        for (let i = 0, ii = attributeLists.length; i < ii; ++i) {\n            const list = attributeLists[i];\n            if (list === void 0) {\n                continue;\n            }\n            for (let j = 0, jj = list.length; j < jj; ++j) {\n                const config = list[j];\n                if (isString(config)) {\n                    attributes.push(new AttributeDefinition(Owner, config));\n                }\n                else {\n                    attributes.push(new AttributeDefinition(Owner, config.property, config.attribute, config.mode, config.converter));\n                }\n            }\n        }\n        return attributes;\n    }\n}\nexport function attr(configOrTarget, prop) {\n    let config;\n    function decorator($target, $prop) {\n        if (arguments.length > 1) {\n            // Non invocation:\n            // - @attr\n            // Invocation with or w/o opts:\n            // - @attr()\n            // - @attr({...opts})\n            config.property = $prop;\n        }\n        AttributeConfiguration.locate($target.constructor).push(config);\n    }\n    if (arguments.length > 1) {\n        // Non invocation:\n        // - @attr\n        config = {};\n        decorator(configOrTarget, prop);\n        return;\n    }\n    // Invocation with or w/o opts:\n    // - @attr()\n    // - @attr({...opts})\n    config = configOrTarget === void 0 ? {} : configOrTarget;\n    return decorator;\n}\n","import { isFunction, isString, KernelServiceId, } from \"../interfaces.js\";\nimport { createMetadataLocator, FAST, makeSerializationNoop } from \"../platform.js\";\nimport { Updates } from \"./update-queue.js\";\nimport { PropertyChangeNotifier, SubscriberSet } from \"./notifier.js\";\n/**\n * Describes how the source's lifetime relates to its controller's lifetime.\n * @public\n */\nexport const SourceLifetime = Object.freeze({\n    /**\n     * The source to controller lifetime relationship is unknown.\n     */\n    unknown: void 0,\n    /**\n     * The source and controller lifetimes are coupled to one another.\n     * They can/will be GC'd together.\n     */\n    coupled: 1,\n});\n/**\n * Common Observable APIs.\n * @public\n */\nexport const Observable = FAST.getById(KernelServiceId.observable, () => {\n    const queueUpdate = Updates.enqueue;\n    const volatileRegex = /(:|&&|\\|\\||if|\\?\\.)/;\n    const notifierLookup = new WeakMap();\n    let watcher = void 0;\n    let createArrayObserver = (array) => {\n        throw FAST.error(1101 /* Message.needsArrayObservation */);\n    };\n    function getNotifier(source) {\n        var _a;\n        let found = (_a = source.$fastController) !== null && _a !== void 0 ? _a : notifierLookup.get(source);\n        if (found === void 0) {\n            Array.isArray(source)\n                ? (found = createArrayObserver(source))\n                : notifierLookup.set(source, (found = new PropertyChangeNotifier(source)));\n        }\n        return found;\n    }\n    const getAccessors = createMetadataLocator();\n    class DefaultObservableAccessor {\n        constructor(name) {\n            this.name = name;\n            this.field = `_${name}`;\n            this.callback = `${name}Changed`;\n        }\n        getValue(source) {\n            if (watcher !== void 0) {\n                watcher.watch(source, this.name);\n            }\n            return source[this.field];\n        }\n        setValue(source, newValue) {\n            const field = this.field;\n            const oldValue = source[field];\n            if (oldValue !== newValue) {\n                source[field] = newValue;\n                const callback = source[this.callback];\n                if (isFunction(callback)) {\n                    callback.call(source, oldValue, newValue);\n                }\n                getNotifier(source).notify(this.name);\n            }\n        }\n    }\n    class ExpressionNotifierImplementation extends SubscriberSet {\n        constructor(expression, initialSubscriber, isVolatileBinding = false) {\n            super(expression, initialSubscriber);\n            this.expression = expression;\n            this.isVolatileBinding = isVolatileBinding;\n            this.needsRefresh = true;\n            this.needsQueue = true;\n            this.isAsync = true;\n            this.first = this;\n            this.last = null;\n            this.propertySource = void 0;\n            this.propertyName = void 0;\n            this.notifier = void 0;\n            this.next = void 0;\n        }\n        setMode(isAsync) {\n            this.isAsync = this.needsQueue = isAsync;\n        }\n        bind(controller) {\n            this.controller = controller;\n            const value = this.observe(controller.source, controller.context);\n            if (!controller.isBound && this.requiresUnbind(controller)) {\n                controller.onUnbind(this);\n            }\n            return value;\n        }\n        requiresUnbind(controller) {\n            return (controller.sourceLifetime !== SourceLifetime.coupled ||\n                this.first !== this.last ||\n                this.first.propertySource !== controller.source);\n        }\n        unbind(controller) {\n            this.dispose();\n        }\n        observe(source, context) {\n            if (this.needsRefresh && this.last !== null) {\n                this.dispose();\n            }\n            const previousWatcher = watcher;\n            watcher = this.needsRefresh ? this : void 0;\n            this.needsRefresh = this.isVolatileBinding;\n            let result;\n            try {\n                result = this.expression(source, context);\n            }\n            finally {\n                watcher = previousWatcher;\n            }\n            return result;\n        }\n        // backwards compat with v1 kernel\n        disconnect() {\n            this.dispose();\n        }\n        dispose() {\n            if (this.last !== null) {\n                let current = this.first;\n                while (current !== void 0) {\n                    current.notifier.unsubscribe(this, current.propertyName);\n                    current = current.next;\n                }\n                this.last = null;\n                this.needsRefresh = this.needsQueue = this.isAsync;\n            }\n        }\n        watch(propertySource, propertyName) {\n            const prev = this.last;\n            const notifier = getNotifier(propertySource);\n            const current = prev === null ? this.first : {};\n            current.propertySource = propertySource;\n            current.propertyName = propertyName;\n            current.notifier = notifier;\n            notifier.subscribe(this, propertyName);\n            if (prev !== null) {\n                if (!this.needsRefresh) {\n                    // Declaring the variable prior to assignment below circumvents\n                    // a bug in Angular's optimization process causing infinite recursion\n                    // of this watch() method. Details https://github.com/microsoft/fast/issues/4969\n                    let prevValue;\n                    watcher = void 0;\n                    /* eslint-disable-next-line */\n                    prevValue = prev.propertySource[prev.propertyName];\n                    /* eslint-disable-next-line */\n                    watcher = this;\n                    if (propertySource === prevValue) {\n                        this.needsRefresh = true;\n                    }\n                }\n                prev.next = current;\n            }\n            this.last = current;\n        }\n        handleChange() {\n            if (this.needsQueue) {\n                this.needsQueue = false;\n                queueUpdate(this);\n            }\n            else if (!this.isAsync) {\n                this.call();\n            }\n        }\n        call() {\n            if (this.last !== null) {\n                this.needsQueue = this.isAsync;\n                this.notify(this);\n            }\n        }\n        *records() {\n            let next = this.first;\n            while (next !== void 0) {\n                yield next;\n                next = next.next;\n            }\n        }\n    }\n    makeSerializationNoop(ExpressionNotifierImplementation);\n    return Object.freeze({\n        /**\n         * @internal\n         * @param factory - The factory used to create array observers.\n         */\n        setArrayObserverFactory(factory) {\n            createArrayObserver = factory;\n        },\n        /**\n         * Gets a notifier for an object or Array.\n         * @param source - The object or Array to get the notifier for.\n         */\n        getNotifier,\n        /**\n         * Records a property change for a source object.\n         * @param source - The object to record the change against.\n         * @param propertyName - The property to track as changed.\n         */\n        track(source, propertyName) {\n            watcher && watcher.watch(source, propertyName);\n        },\n        /**\n         * Notifies watchers that the currently executing property getter or function is volatile\n         * with respect to its observable dependencies.\n         */\n        trackVolatile() {\n            watcher && (watcher.needsRefresh = true);\n        },\n        /**\n         * Notifies subscribers of a source object of changes.\n         * @param source - the object to notify of changes.\n         * @param args - The change args to pass to subscribers.\n         */\n        notify(source, args) {\n            /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n            getNotifier(source).notify(args);\n        },\n        /**\n         * Defines an observable property on an object or prototype.\n         * @param target - The target object to define the observable on.\n         * @param nameOrAccessor - The name of the property to define as observable;\n         * or a custom accessor that specifies the property name and accessor implementation.\n         */\n        defineProperty(target, nameOrAccessor) {\n            if (isString(nameOrAccessor)) {\n                nameOrAccessor = new DefaultObservableAccessor(nameOrAccessor);\n            }\n            getAccessors(target).push(nameOrAccessor);\n            Reflect.defineProperty(target, nameOrAccessor.name, {\n                enumerable: true,\n                get() {\n                    return nameOrAccessor.getValue(this);\n                },\n                set(newValue) {\n                    nameOrAccessor.setValue(this, newValue);\n                },\n            });\n        },\n        /**\n         * Finds all the observable accessors defined on the target,\n         * including its prototype chain.\n         * @param target - The target object to search for accessor on.\n         */\n        getAccessors,\n        /**\n         * Creates a {@link ExpressionNotifier} that can watch the\n         * provided {@link Expression} for changes.\n         * @param expression - The binding to observe.\n         * @param initialSubscriber - An initial subscriber to changes in the binding value.\n         * @param isVolatileBinding - Indicates whether the binding's dependency list must be re-evaluated on every value evaluation.\n         */\n        binding(expression, initialSubscriber, isVolatileBinding = this.isVolatileBinding(expression)) {\n            return new ExpressionNotifierImplementation(expression, initialSubscriber, isVolatileBinding);\n        },\n        /**\n         * Determines whether a binding expression is volatile and needs to have its dependency list re-evaluated\n         * on every evaluation of the value.\n         * @param expression - The binding to inspect.\n         */\n        isVolatileBinding(expression) {\n            return volatileRegex.test(expression.toString());\n        },\n    });\n});\n/**\n * Decorator: Defines an observable property on the target.\n * @param target - The target to define the observable on.\n * @param nameOrAccessor - The property name or accessor to define the observable as.\n * @public\n */\nexport function observable(target, nameOrAccessor) {\n    Observable.defineProperty(target, nameOrAccessor);\n}\n/**\n * Decorator: Marks a property getter as having volatile observable dependencies.\n * @param target - The target that the property is defined on.\n * @param name - The property name.\n * @param name - The existing descriptor.\n * @public\n */\nexport function volatile(target, name, descriptor) {\n    return Object.assign({}, descriptor, {\n        get() {\n            Observable.trackVolatile();\n            return descriptor.get.apply(this);\n        },\n    });\n}\nconst contextEvent = FAST.getById(KernelServiceId.contextEvent, () => {\n    let current = null;\n    return {\n        get() {\n            return current;\n        },\n        set(event) {\n            current = event;\n        },\n    };\n});\n/**\n * Provides additional contextual information available to behaviors and expressions.\n * @public\n */\nexport const ExecutionContext = Object.freeze({\n    /**\n     * A default execution context.\n     */\n    default: {\n        index: 0,\n        length: 0,\n        get event() {\n            return ExecutionContext.getEvent();\n        },\n        eventDetail() {\n            return this.event.detail;\n        },\n        eventTarget() {\n            return this.event.target;\n        },\n    },\n    /**\n     * Gets the current event.\n     * @returns An event object.\n     */\n    getEvent() {\n        return contextEvent.get();\n    },\n    /**\n     * Sets the current event.\n     * @param event - An event object.\n     */\n    setEvent(event) {\n        contextEvent.set(event);\n    },\n});\n","let kernelMode;\nconst kernelAttr = \"fast-kernel\";\ntry {\n    if (document.currentScript) {\n        kernelMode = document.currentScript.getAttribute(kernelAttr);\n    }\n    else {\n        const scripts = document.getElementsByTagName(\"script\");\n        const currentScript = scripts[scripts.length - 1];\n        kernelMode = currentScript.getAttribute(kernelAttr);\n    }\n}\ncatch (e) {\n    kernelMode = \"isolate\";\n}\nlet KernelServiceId;\nswitch (kernelMode) {\n    case \"share\": // share the kernel across major versions\n        KernelServiceId = Object.freeze({\n            updateQueue: 1,\n            observable: 2,\n            contextEvent: 3,\n            elementRegistry: 4,\n        });\n        break;\n    case \"share-v2\": // only share the kernel with other v2 instances\n        KernelServiceId = Object.freeze({\n            updateQueue: 1.2,\n            observable: 2.2,\n            contextEvent: 3.2,\n            elementRegistry: 4.2,\n        });\n        break;\n    default:\n        // fully isolate the kernel from all other FAST instances\n        const postfix = `-${Math.random().toString(36).substring(2, 8)}`;\n        KernelServiceId = Object.freeze({\n            updateQueue: `1.2${postfix}`,\n            observable: `2.2${postfix}`,\n            contextEvent: `3.2${postfix}`,\n            elementRegistry: `4.2${postfix}`,\n        });\n        break;\n}\nexport { KernelServiceId };\n/**\n * Determines whether or not an object is a function.\n * @public\n */\nexport const isFunction = (object) => typeof object === \"function\";\n/**\n * Determines whether or not an object is a string.\n * @public\n */\nexport const isString = (object) => typeof object === \"string\";\n/**\n * A function which does nothing.\n * @public\n */\nexport const noop = () => void 0;\n","import { noop } from \"./interfaces.js\";\nimport \"./polyfills.js\";\n// ensure FAST global - duplicated debug.ts\nconst propConfig = {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n};\nif (globalThis.FAST === void 0) {\n    Reflect.defineProperty(globalThis, \"FAST\", Object.assign({ value: Object.create(null) }, propConfig));\n}\n/**\n * The FAST global.\n * @public\n */\nexport const FAST = globalThis.FAST;\nif (FAST.getById === void 0) {\n    const storage = Object.create(null);\n    Reflect.defineProperty(FAST, \"getById\", Object.assign({ value(id, initialize) {\n            let found = storage[id];\n            if (found === void 0) {\n                found = initialize ? (storage[id] = initialize()) : null;\n            }\n            return found;\n        } }, propConfig));\n}\nif (FAST.error === void 0) {\n    Object.assign(FAST, {\n        warn() { },\n        error(code) {\n            return new Error(`Error ${code}`);\n        },\n        addMessages() { },\n    });\n}\n/**\n * A readonly, empty array.\n * @remarks\n * Typically returned by APIs that return arrays when there are\n * no actual items to return.\n * @public\n */\nexport const emptyArray = Object.freeze([]);\n/**\n * Do not change. Part of shared kernel contract.\n * @internal\n */\nexport function createTypeRegistry() {\n    const typeToDefinition = new Map();\n    return Object.freeze({\n        register(definition) {\n            if (typeToDefinition.has(definition.type)) {\n                return false;\n            }\n            typeToDefinition.set(definition.type, definition);\n            return true;\n        },\n        getByType(key) {\n            return typeToDefinition.get(key);\n        },\n        getForInstance(object) {\n            if (object === null || object === void 0) {\n                return void 0;\n            }\n            return typeToDefinition.get(object.constructor);\n        },\n    });\n}\n/**\n * Creates a function capable of locating metadata associated with a type.\n * @returns A metadata locator function.\n * @internal\n */\nexport function createMetadataLocator() {\n    const metadataLookup = new WeakMap();\n    return function (target) {\n        let metadata = metadataLookup.get(target);\n        if (metadata === void 0) {\n            let currentTarget = Reflect.getPrototypeOf(target);\n            while (metadata === void 0 && currentTarget !== null) {\n                metadata = metadataLookup.get(currentTarget);\n                currentTarget = Reflect.getPrototypeOf(currentTarget);\n            }\n            metadata = metadata === void 0 ? [] : metadata.slice(0);\n            metadataLookup.set(target, metadata);\n        }\n        return metadata;\n    };\n}\n/**\n * Makes a type noop for JSON serialization.\n * @param type - The type to make noop for JSON serialization.\n * @internal\n */\nexport function makeSerializationNoop(type) {\n    type.prototype.toJSON = noop;\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n(function ensureGlobalThis() {\n    if (typeof globalThis !== \"undefined\") {\n        // We're running in a modern environment.\n        return;\n    }\n    // @ts-ignore\n    if (typeof global !== \"undefined\") {\n        // We're running in NodeJS\n        // @ts-ignore\n        global.globalThis = global;\n    }\n    else if (typeof self !== \"undefined\") {\n        self.globalThis = self;\n    }\n    else if (typeof window !== \"undefined\") {\n        // We're running in the browser's main thread.\n        window.globalThis = window;\n    }\n    else {\n        // Hopefully we never get here...\n        // Not all environments allow eval and Function. Use only as a last resort:\n        // eslint-disable-next-line no-new-func\n        const result = new Function(\"return this\")();\n        result.globalThis = result;\n    }\n})();\n","import { KernelServiceId } from \"../interfaces.js\";\nimport { FAST } from \"../platform.js\";\n/**\n * The default UpdateQueue.\n * @public\n */\nexport const Updates = FAST.getById(KernelServiceId.updateQueue, () => {\n    const tasks = [];\n    const pendingErrors = [];\n    const rAF = globalThis.requestAnimationFrame;\n    let updateAsync = true;\n    function throwFirstError() {\n        if (pendingErrors.length) {\n            throw pendingErrors.shift();\n        }\n    }\n    function tryRunTask(task) {\n        try {\n            task.call();\n        }\n        catch (error) {\n            if (updateAsync) {\n                pendingErrors.push(error);\n                setTimeout(throwFirstError, 0);\n            }\n            else {\n                tasks.length = 0;\n                throw error;\n            }\n        }\n    }\n    function process() {\n        const capacity = 1024;\n        let index = 0;\n        while (index < tasks.length) {\n            tryRunTask(tasks[index]);\n            index++;\n            // Prevent leaking memory for long chains of recursive calls to `enqueue`.\n            // If we call `enqueue` within a task scheduled by `enqueue`, the queue will\n            // grow, but to avoid an O(n) walk for every task we execute, we don't\n            // shift tasks off the queue after they have been executed.\n            // Instead, we periodically shift 1024 tasks off the queue.\n            if (index > capacity) {\n                // Manually shift all values starting at the index back to the\n                // beginning of the queue.\n                for (let scan = 0, newLength = tasks.length - index; scan < newLength; scan++) {\n                    tasks[scan] = tasks[scan + index];\n                }\n                tasks.length -= index;\n                index = 0;\n            }\n        }\n        tasks.length = 0;\n    }\n    function enqueue(callable) {\n        tasks.push(callable);\n        if (tasks.length < 2) {\n            updateAsync ? rAF(process) : process();\n        }\n    }\n    return Object.freeze({\n        enqueue,\n        next: () => new Promise(enqueue),\n        process,\n        setMode: (isAsync) => (updateAsync = isAsync),\n    });\n});\n","/**\n * An implementation of {@link Notifier} that efficiently keeps track of\n * subscribers interested in a specific change notification on an\n * observable subject.\n *\n * @remarks\n * This set is optimized for the most common scenario of 1 or 2 subscribers.\n * With this in mind, it can store a subscriber in an internal field, allowing it to avoid Array#push operations.\n * If the set ever exceeds two subscribers, it upgrades to an array automatically.\n * @public\n */\nexport class SubscriberSet {\n    /**\n     * Creates an instance of SubscriberSet for the specified subject.\n     * @param subject - The subject that subscribers will receive notifications from.\n     * @param initialSubscriber - An initial subscriber to changes.\n     */\n    constructor(subject, initialSubscriber) {\n        this.sub1 = void 0;\n        this.sub2 = void 0;\n        this.spillover = void 0;\n        this.subject = subject;\n        this.sub1 = initialSubscriber;\n    }\n    /**\n     * Checks whether the provided subscriber has been added to this set.\n     * @param subscriber - The subscriber to test for inclusion in this set.\n     */\n    has(subscriber) {\n        return this.spillover === void 0\n            ? this.sub1 === subscriber || this.sub2 === subscriber\n            : this.spillover.indexOf(subscriber) !== -1;\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     */\n    subscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.has(subscriber)) {\n                return;\n            }\n            if (this.sub1 === void 0) {\n                this.sub1 = subscriber;\n                return;\n            }\n            if (this.sub2 === void 0) {\n                this.sub2 = subscriber;\n                return;\n            }\n            this.spillover = [this.sub1, this.sub2, subscriber];\n            this.sub1 = void 0;\n            this.sub2 = void 0;\n        }\n        else {\n            const index = spillover.indexOf(subscriber);\n            if (index === -1) {\n                spillover.push(subscriber);\n            }\n        }\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     */\n    unsubscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.sub1 === subscriber) {\n                this.sub1 = void 0;\n            }\n            else if (this.sub2 === subscriber) {\n                this.sub2 = void 0;\n            }\n        }\n        else {\n            const index = spillover.indexOf(subscriber);\n            if (index !== -1) {\n                spillover.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Notifies all subscribers.\n     * @param args - Data passed along to subscribers during notification.\n     */\n    notify(args) {\n        const spillover = this.spillover;\n        const subject = this.subject;\n        if (spillover === void 0) {\n            const sub1 = this.sub1;\n            const sub2 = this.sub2;\n            if (sub1 !== void 0) {\n                sub1.handleChange(subject, args);\n            }\n            if (sub2 !== void 0) {\n                sub2.handleChange(subject, args);\n            }\n        }\n        else {\n            for (let i = 0, ii = spillover.length; i < ii; ++i) {\n                spillover[i].handleChange(subject, args);\n            }\n        }\n    }\n}\n/**\n * An implementation of Notifier that allows subscribers to be notified\n * of individual property changes on an object.\n * @public\n */\nexport class PropertyChangeNotifier {\n    /**\n     * Creates an instance of PropertyChangeNotifier for the specified subject.\n     * @param subject - The object that subscribers will receive notifications for.\n     */\n    constructor(subject) {\n        this.subscribers = {};\n        this.subjectSubscribers = null;\n        this.subject = subject;\n    }\n    /**\n     * Notifies all subscribers, based on the specified property.\n     * @param propertyName - The property name, passed along to subscribers during notification.\n     */\n    notify(propertyName) {\n        var _a, _b;\n        (_a = this.subscribers[propertyName]) === null || _a === void 0 ? void 0 : _a.notify(propertyName);\n        (_b = this.subjectSubscribers) === null || _b === void 0 ? void 0 : _b.notify(propertyName);\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     * @param propertyToWatch - The name of the property that the subscriber is interested in watching for changes.\n     */\n    subscribe(subscriber, propertyToWatch) {\n        var _a, _b;\n        let subscribers;\n        if (propertyToWatch) {\n            subscribers =\n                (_a = this.subscribers[propertyToWatch]) !== null && _a !== void 0 ? _a : (this.subscribers[propertyToWatch] = new SubscriberSet(this.subject));\n        }\n        else {\n            subscribers =\n                (_b = this.subjectSubscribers) !== null && _b !== void 0 ? _b : (this.subjectSubscribers = new SubscriberSet(this.subject));\n        }\n        subscribers.subscribe(subscriber);\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     * @param propertyToUnwatch - The name of the property that the subscriber is no longer interested in watching.\n     */\n    unsubscribe(subscriber, propertyToUnwatch) {\n        var _a, _b;\n        if (propertyToUnwatch) {\n            (_a = this.subscribers[propertyToUnwatch]) === null || _a === void 0 ? void 0 : _a.unsubscribe(subscriber);\n        }\n        else {\n            (_b = this.subjectSubscribers) === null || _b === void 0 ? void 0 : _b.unsubscribe(subscriber);\n        }\n    }\n}\n","import \"./interfaces.js\";\nimport { FAST } from \"./platform.js\";\n/**\n * The type of HTML aspect to target.\n * @public\n */\nexport const DOMAspect = Object.freeze({\n    /**\n     * Not aspected.\n     */\n    none: 0,\n    /**\n     * An attribute.\n     */\n    attribute: 1,\n    /**\n     * A boolean attribute.\n     */\n    booleanAttribute: 2,\n    /**\n     * A property.\n     */\n    property: 3,\n    /**\n     * Content\n     */\n    content: 4,\n    /**\n     * A token list.\n     */\n    tokenList: 5,\n    /**\n     * An event.\n     */\n    event: 6,\n});\nconst createHTML = html => html;\nconst fastTrustedType = globalThis.trustedTypes\n    ? globalThis.trustedTypes.createPolicy(\"fast-html\", { createHTML })\n    : { createHTML };\nlet defaultPolicy = Object.freeze({\n    createHTML(value) {\n        return fastTrustedType.createHTML(value);\n    },\n    protect(tagName, aspect, aspectName, sink) {\n        return sink;\n    },\n});\nconst fastPolicy = defaultPolicy;\n/**\n * Common DOM APIs.\n * @public\n */\nexport const DOM = Object.freeze({\n    /**\n     * Gets the dom policy used by the templating system.\n     */\n    get policy() {\n        return defaultPolicy;\n    },\n    /**\n     * Sets the dom policy used by the templating system.\n     * @param policy - The policy to set.\n     * @remarks\n     * This API can only be called once, for security reasons. It should be\n     * called by the application developer at the start of their program.\n     */\n    setPolicy(value) {\n        if (defaultPolicy !== fastPolicy) {\n            throw FAST.error(1201 /* Message.onlySetDOMPolicyOnce */);\n        }\n        defaultPolicy = value;\n    },\n    /**\n     * Sets an attribute value on an element.\n     * @param element - The element to set the attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is `null` or `undefined`, the attribute is removed, otherwise\n     * it is set to the provided value using the standard `setAttribute` API.\n     */\n    setAttribute(element, attributeName, value) {\n        value === null || value === undefined\n            ? element.removeAttribute(attributeName)\n            : element.setAttribute(attributeName, value);\n    },\n    /**\n     * Sets a boolean attribute value.\n     * @param element - The element to set the boolean attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is true, the attribute is added; otherwise it is removed.\n     */\n    setBooleanAttribute(element, attributeName, value) {\n        value\n            ? element.setAttribute(attributeName, \"\")\n            : element.removeAttribute(attributeName);\n    },\n});\n","/**\n * Captures a binding expression along with related information and capabilities.\n *\n * @public\n */\nexport class Binding {\n    /**\n     * Creates a binding.\n     * @param evaluate - Evaluates the binding.\n     * @param policy - The security policy to associate with this binding.\n     * @param isVolatile - Indicates whether the binding is volatile.\n     */\n    constructor(evaluate, policy, isVolatile = false) {\n        this.evaluate = evaluate;\n        this.policy = policy;\n        this.isVolatile = isVolatile;\n    }\n}\n","import { isString, noop } from \"../interfaces.js\";\nimport { HTMLDirective } from \"./html-directive.js\";\nimport { NodeObservationDirective } from \"./node-observation.js\";\n/**\n * The runtime behavior for child node observation.\n * @public\n */\nexport class ChildrenDirective extends NodeObservationDirective {\n    /**\n     * Creates an instance of ChildrenDirective.\n     * @param options - The options to use in configuring the child observation behavior.\n     */\n    constructor(options) {\n        super(options);\n        this.observerProperty = Symbol();\n        this.handleEvent = (mutations, observer) => {\n            const target = observer.target;\n            this.updateTarget(this.getSource(target), this.computeNodes(target));\n        };\n        options.childList = true;\n    }\n    /**\n     * Begins observation of the nodes.\n     * @param target - The target to observe.\n     */\n    observe(target) {\n        let observer = target[this.observerProperty];\n        if (!observer) {\n            observer = new MutationObserver(this.handleEvent);\n            observer.toJSON = noop;\n            target[this.observerProperty] = observer;\n        }\n        observer.target = target;\n        observer.observe(target, this.options);\n    }\n    /**\n     * Disconnects observation of the nodes.\n     * @param target - The target to unobserve.\n     */\n    disconnect(target) {\n        const observer = target[this.observerProperty];\n        observer.target = null;\n        observer.disconnect();\n    }\n    /**\n     * Retrieves the raw nodes that should be assigned to the source property.\n     * @param target - The target to get the node to.\n     */\n    getNodes(target) {\n        if (\"selector\" in this.options) {\n            return Array.from(target.querySelectorAll(this.options.selector));\n        }\n        return Array.from(target.childNodes);\n    }\n}\nHTMLDirective.define(ChildrenDirective);\n/**\n * A directive that observes the `childNodes` of an element and updates a property\n * whenever they change.\n * @param propertyOrOptions - The options used to configure child node observation.\n * @public\n */\nexport function children(propertyOrOptions) {\n    if (isString(propertyOrOptions)) {\n        propertyOrOptions = {\n            property: propertyOrOptions,\n        };\n    }\n    return new ChildrenDirective(propertyOrOptions);\n}\n","import { DOMAspect } from \"../dom.js\";\nimport { createTypeRegistry, makeSerializationNoop } from \"../platform.js\";\nimport { Markup } from \"./markup.js\";\nconst registry = createTypeRegistry();\n/**\n * Instructs the template engine to apply behavior to a node.\n * @public\n */\nexport const HTMLDirective = Object.freeze({\n    /**\n     * Gets the directive definition associated with the instance.\n     * @param instance - The directive instance to retrieve the definition for.\n     */\n    getForInstance: registry.getForInstance,\n    /**\n     * Gets the directive definition associated with the specified type.\n     * @param type - The directive type to retrieve the definition for.\n     */\n    getByType: registry.getByType,\n    /**\n     * Defines an HTMLDirective based on the options.\n     * @param type - The type to define as a directive.\n     * @param options - Options that specify the directive's application.\n     */\n    define(type, options) {\n        options = options || {};\n        options.type = type;\n        registry.register(options);\n        return type;\n    },\n    /**\n     *\n     * @param directive - The directive to assign the aspect to.\n     * @param value - The value to base the aspect determination on.\n     * @remarks\n     * If a falsy value is provided, then the content aspect will be assigned.\n     */\n    assignAspect(directive, value) {\n        if (!value) {\n            directive.aspectType = DOMAspect.content;\n            return;\n        }\n        directive.sourceAspect = value;\n        switch (value[0]) {\n            case \":\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType =\n                    directive.targetAspect === \"classList\"\n                        ? DOMAspect.tokenList\n                        : DOMAspect.property;\n                break;\n            case \"?\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = DOMAspect.booleanAttribute;\n                break;\n            case \"@\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = DOMAspect.event;\n                break;\n            default:\n                directive.targetAspect = value;\n                directive.aspectType = DOMAspect.attribute;\n                break;\n        }\n    },\n});\n/**\n * Decorator: Defines an HTMLDirective.\n * @param options - Provides options that specify the directive's application.\n * @public\n */\nexport function htmlDirective(options) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\n    return function (type) {\n        HTMLDirective.define(type, options);\n    };\n}\n/**\n * A base class used for attribute directives that don't need internal state.\n * @public\n */\nexport class StatelessAttachedAttributeDirective {\n    /**\n     * Creates an instance of RefDirective.\n     * @param options - The options to use in configuring the directive.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     * @remarks\n     * Creates a custom attribute placeholder.\n     */\n    createHTML(add) {\n        return Markup.attribute(add(this));\n    }\n    /**\n     * Creates a behavior.\n     * @param targets - The targets available for behaviors to be attached to.\n     */\n    createBehavior() {\n        return this;\n    }\n}\nmakeSerializationNoop(StatelessAttachedAttributeDirective);\n","const marker = `fast-${Math.random().toString(36).substring(2, 8)}`;\nconst interpolationStart = `${marker}{`;\nconst interpolationEnd = `}${marker}`;\nconst interpolationEndLength = interpolationEnd.length;\nlet id = 0;\n/** @internal */\nexport const nextId = () => `${marker}-${++id}`;\n/**\n * Common APIs related to markup generation.\n * @public\n */\nexport const Markup = Object.freeze({\n    /**\n     * Creates a placeholder string suitable for marking out a location *within*\n     * an attribute value or HTML content.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by binding directives.\n     */\n    interpolation: (id) => `${interpolationStart}${id}${interpolationEnd}`,\n    /**\n     * Creates a placeholder that manifests itself as an attribute on an\n     * element.\n     * @param attributeName - The name of the custom attribute.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by attribute directives such as `ref`, `slotted`, and `children`.\n     */\n    attribute: (id) => `${nextId()}=\"${interpolationStart}${id}${interpolationEnd}\"`,\n    /**\n     * Creates a placeholder that manifests itself as a marker within the DOM structure.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by structural directives such as `repeat`.\n     */\n    comment: (id) => `<!--${interpolationStart}${id}${interpolationEnd}-->`,\n});\n/**\n * Common APIs related to content parsing.\n * @public\n */\nexport const Parser = Object.freeze({\n    /**\n     * Parses text content or HTML attribute content, separating out the static strings\n     * from the directives.\n     * @param value - The content or attribute string to parse.\n     * @param factories - A list of directives to search for in the string.\n     * @returns A heterogeneous array of static strings interspersed with\n     * directives or null if no directives are found in the string.\n     */\n    parse(value, factories) {\n        const parts = value.split(interpolationStart);\n        if (parts.length === 1) {\n            return null;\n        }\n        const result = [];\n        for (let i = 0, ii = parts.length; i < ii; ++i) {\n            const current = parts[i];\n            const index = current.indexOf(interpolationEnd);\n            let literal;\n            if (index === -1) {\n                literal = current;\n            }\n            else {\n                const factoryId = current.substring(0, index);\n                result.push(factories[factoryId]);\n                literal = current.substring(index + interpolationEndLength);\n            }\n            if (literal !== \"\") {\n                result.push(literal);\n            }\n        }\n        return result;\n    },\n});\n","import { emptyArray } from \"../platform.js\";\nimport { StatelessAttachedAttributeDirective } from \"./html-directive.js\";\nconst selectElements = (value) => value.nodeType === 1;\n/**\n * Creates a function that can be used to filter a Node array, selecting only elements.\n * @param selector - An optional selector to restrict the filter to.\n * @public\n */\nexport const elements = (selector) => selector\n    ? value => value.nodeType === 1 && value.matches(selector)\n    : selectElements;\n/**\n * A base class for node observation.\n * @public\n * @remarks\n * Internally used by the SlottedDirective and the ChildrenDirective.\n */\nexport class NodeObservationDirective extends StatelessAttachedAttributeDirective {\n    /**\n     * The unique id of the factory.\n     */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value;\n        this._controllerProperty = `${value}-c`;\n    }\n    /**\n     * Bind this behavior to the source.\n     * @param source - The source to bind to.\n     * @param context - The execution context that the binding is operating within.\n     * @param targets - The targets that behaviors in a view can attach to.\n     */\n    bind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        target[this._controllerProperty] = controller;\n        this.updateTarget(controller.source, this.computeNodes(target));\n        this.observe(target);\n        controller.onUnbind(this);\n    }\n    /**\n     * Unbinds this behavior from the source.\n     * @param source - The source to unbind from.\n     * @param context - The execution context that the binding is operating within.\n     * @param targets - The targets that behaviors in a view can attach to.\n     */\n    unbind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        this.updateTarget(controller.source, emptyArray);\n        this.disconnect(target);\n        target[this._controllerProperty] = null;\n    }\n    /**\n     * Gets the data source for the target.\n     * @param target - The target to get the source for.\n     * @returns The source.\n     */\n    getSource(target) {\n        return target[this._controllerProperty].source;\n    }\n    /**\n     * Updates the source property with the computed nodes.\n     * @param source - The source object to assign the nodes property to.\n     * @param value - The nodes to assign to the source object property.\n     */\n    updateTarget(source, value) {\n        source[this.options.property] = value;\n    }\n    /**\n     * Computes the set of nodes that should be assigned to the source property.\n     * @param target - The target to compute the nodes for.\n     * @returns The computed nodes.\n     * @remarks\n     * Applies filters if provided.\n     */\n    computeNodes(target) {\n        let nodes = this.getNodes(target);\n        if (\"filter\" in this.options) {\n            nodes = nodes.filter(this.options.filter);\n        }\n        return nodes;\n    }\n}\n","import { isFunction, isString } from \"../interfaces.js\";\nimport { Binding } from \"../binding/binding.js\";\nimport { oneWay } from \"../binding/one-way.js\";\nimport { CSSDirective } from \"./css-directive.js\";\nimport { ElementStyles } from \"./element-styles.js\";\nimport { CSSBindingDirective } from \"./css-binding-directive.js\";\nconst marker = `${Math.random().toString(36).substring(2, 8)}`;\nlet varId = 0;\nconst nextCSSVariable = () => `--v${marker}${++varId}`;\nfunction collectStyles(strings, values) {\n    const styles = [];\n    let cssString = \"\";\n    const behaviors = [];\n    const add = (behavior) => {\n        behaviors.push(behavior);\n    };\n    for (let i = 0, ii = strings.length - 1; i < ii; ++i) {\n        cssString += strings[i];\n        let value = values[i];\n        if (isFunction(value)) {\n            value = new CSSBindingDirective(oneWay(value), nextCSSVariable()).createCSS(add);\n        }\n        else if (value instanceof Binding) {\n            value = new CSSBindingDirective(value, nextCSSVariable()).createCSS(add);\n        }\n        else if (CSSDirective.getForInstance(value) !== void 0) {\n            value = value.createCSS(add);\n        }\n        if (value instanceof ElementStyles || value instanceof CSSStyleSheet) {\n            if (cssString.trim() !== \"\") {\n                styles.push(cssString);\n                cssString = \"\";\n            }\n            styles.push(value);\n        }\n        else {\n            cssString += value;\n        }\n    }\n    cssString += strings[strings.length - 1];\n    if (cssString.trim() !== \"\") {\n        styles.push(cssString);\n    }\n    return {\n        styles,\n        behaviors,\n    };\n}\n/**\n * Transforms a template literal string into styles.\n * @param strings - The string fragments that are interpolated with the values.\n * @param values - The values that are interpolated with the string fragments.\n * @remarks\n * The css helper supports interpolation of strings and ElementStyle instances.\n * @public\n */\nexport const css = ((strings, ...values) => {\n    const { styles, behaviors } = collectStyles(strings, values);\n    const elementStyles = new ElementStyles(styles);\n    return behaviors.length ? elementStyles.withBehaviors(...behaviors) : elementStyles;\n});\nclass CSSPartial {\n    constructor(styles, behaviors) {\n        this.behaviors = behaviors;\n        this.css = \"\";\n        const stylesheets = styles.reduce((accumulated, current) => {\n            if (isString(current)) {\n                this.css += current;\n            }\n            else {\n                accumulated.push(current);\n            }\n            return accumulated;\n        }, []);\n        if (stylesheets.length) {\n            this.styles = new ElementStyles(stylesheets);\n        }\n    }\n    createCSS(add) {\n        this.behaviors.forEach(add);\n        if (this.styles) {\n            add(this);\n        }\n        return this.css;\n    }\n    addedCallback(controller) {\n        controller.addStyles(this.styles);\n    }\n    removedCallback(controller) {\n        controller.removeStyles(this.styles);\n    }\n}\nCSSDirective.define(CSSPartial);\ncss.partial = (strings, ...values) => {\n    const { styles, behaviors } = collectStyles(strings, values);\n    return new CSSPartial(styles, behaviors);\n};\n","import { Observable } from \"../observation/observable.js\";\nimport { Binding } from \"./binding.js\";\nclass OneWayBinding extends Binding {\n    createObserver(subscriber) {\n        return Observable.binding(this.evaluate, subscriber, this.isVolatile);\n    }\n}\n/**\n * Creates an standard binding.\n * @param expression - The binding to refresh when changed.\n * @param policy - The security policy to associate with th binding.\n * @param isVolatile - Indicates whether the binding is volatile or not.\n * @returns A binding configuration.\n * @public\n */\nexport function oneWay(expression, policy, isVolatile = Observable.isVolatileBinding(expression)) {\n    return new OneWayBinding(expression, policy, isVolatile);\n}\n/**\n * Creates an event listener binding.\n * @param expression - The binding to invoke when the event is raised.\n * @param options - Event listener options.\n * @returns A binding configuration.\n * @public\n */\nexport function listener(expression, options) {\n    const config = new OneWayBinding(expression);\n    config.options = options;\n    return config;\n}\n","import { createTypeRegistry } from \"../platform.js\";\nconst registry = createTypeRegistry();\n/**\n * Instructs the css engine to provide dynamic styles or\n * associate behaviors with styles.\n * @public\n */\nexport const CSSDirective = Object.freeze({\n    /**\n     * Gets the directive definition associated with the instance.\n     * @param instance - The directive instance to retrieve the definition for.\n     */\n    getForInstance: registry.getForInstance,\n    /**\n     * Gets the directive definition associated with the specified type.\n     * @param type - The directive type to retrieve the definition for.\n     */\n    getByType: registry.getByType,\n    /**\n     * Defines a CSSDirective.\n     * @param type - The type to define as a directive.\n     */\n    define(type) {\n        registry.register({ type });\n        return type;\n    },\n});\n/**\n * Decorator: Defines a CSSDirective.\n * @public\n */\nexport function cssDirective() {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\n    return function (type) {\n        CSSDirective.define(type);\n    };\n}\n","let DefaultStyleStrategy;\nfunction reduceStyles(styles) {\n    return styles\n        .map((x) => x instanceof ElementStyles ? reduceStyles(x.styles) : [x])\n        .reduce((prev, curr) => prev.concat(curr), []);\n}\n/**\n * Represents styles that can be applied to a custom element.\n * @public\n */\nexport class ElementStyles {\n    /**\n     * Creates an instance of ElementStyles.\n     * @param styles - The styles that will be associated with elements.\n     */\n    constructor(styles) {\n        this.styles = styles;\n        this.targets = new WeakSet();\n        this._strategy = null;\n        this.behaviors = styles\n            .map((x) => x instanceof ElementStyles ? x.behaviors : null)\n            .reduce((prev, curr) => (curr === null ? prev : prev === null ? curr : prev.concat(curr)), null);\n    }\n    /**\n     * Gets the StyleStrategy associated with these element styles.\n     */\n    get strategy() {\n        if (this._strategy === null) {\n            this.withStrategy(DefaultStyleStrategy);\n        }\n        return this._strategy;\n    }\n    /** @internal */\n    addStylesTo(target) {\n        this.strategy.addStylesTo(target);\n        this.targets.add(target);\n    }\n    /** @internal */\n    removeStylesFrom(target) {\n        this.strategy.removeStylesFrom(target);\n        this.targets.delete(target);\n    }\n    /** @internal */\n    isAttachedTo(target) {\n        return this.targets.has(target);\n    }\n    /**\n     * Associates behaviors with this set of styles.\n     * @param behaviors - The behaviors to associate.\n     */\n    withBehaviors(...behaviors) {\n        this.behaviors =\n            this.behaviors === null ? behaviors : this.behaviors.concat(behaviors);\n        return this;\n    }\n    /**\n     * Sets the strategy that handles adding/removing these styles for an element.\n     * @param strategy - The strategy to use.\n     */\n    withStrategy(Strategy) {\n        this._strategy = new Strategy(reduceStyles(this.styles));\n        return this;\n    }\n    /**\n     * Sets the default strategy type to use when creating style strategies.\n     * @param Strategy - The strategy type to construct.\n     */\n    static setDefaultStrategy(Strategy) {\n        DefaultStyleStrategy = Strategy;\n    }\n    /**\n     * Normalizes a set of composable style options.\n     * @param styles - The style options to normalize.\n     * @returns A singular ElementStyles instance or undefined.\n     */\n    static normalize(styles) {\n        return styles === void 0\n            ? void 0\n            : Array.isArray(styles)\n                ? new ElementStyles(styles)\n                : styles instanceof ElementStyles\n                    ? styles\n                    : new ElementStyles([styles]);\n    }\n}\n/**\n * Indicates whether the DOM supports the adoptedStyleSheets feature.\n */\nElementStyles.supportsAdoptedStyleSheets = Array.isArray(document.adoptedStyleSheets) &&\n    \"replace\" in CSSStyleSheet.prototype;\n","import { CSSDirective } from \"./css-directive.js\";\nfunction handleChange(directive, controller, observer) {\n    controller.source.style.setProperty(directive.targetAspect, observer.bind(controller));\n}\n/**\n * Enables bindings in CSS.\n *\n * @public\n */\nexport class CSSBindingDirective {\n    /**\n     * Creates an instance of CSSBindingDirective.\n     * @param dataBinding - The binding to use in CSS.\n     * @param targetAspect - The CSS property to target.\n     */\n    constructor(dataBinding, targetAspect) {\n        this.dataBinding = dataBinding;\n        this.targetAspect = targetAspect;\n    }\n    /**\n     * Creates a CSS fragment to interpolate into the CSS document.\n     * @returns - the string to interpolate into CSS\n     */\n    createCSS(add) {\n        add(this);\n        return `var(${this.targetAspect})`;\n    }\n    /**\n     * Executed when this behavior is attached to a controller.\n     * @param controller - Controls the behavior lifecycle.\n     */\n    addedCallback(controller) {\n        var _a;\n        const element = controller.source;\n        if (!element.$cssBindings) {\n            element.$cssBindings = new Map();\n            const setAttribute = element.setAttribute;\n            element.setAttribute = (attr, value) => {\n                setAttribute.call(element, attr, value);\n                if (attr === \"style\") {\n                    element.$cssBindings.forEach((v, k) => handleChange(k, v.controller, v.observer));\n                }\n            };\n        }\n        const observer = (_a = controller[this.targetAspect]) !== null && _a !== void 0 ? _a : (controller[this.targetAspect] = this.dataBinding.createObserver(this, this));\n        observer.controller = controller;\n        controller.source.$cssBindings.set(this, { controller, observer });\n    }\n    /**\n     * Executed when this behavior's host is connected.\n     * @param controller - Controls the behavior lifecycle.\n     */\n    connectedCallback(controller) {\n        handleChange(this, controller, controller[this.targetAspect]);\n    }\n    /**\n     * Executed when this behavior is detached from a controller.\n     * @param controller - Controls the behavior lifecycle.\n     */\n    removedCallback(controller) {\n        if (controller.source.$cssBindings) {\n            controller.source.$cssBindings.delete(this);\n        }\n    }\n    /**\n     * Called when a subject this instance has subscribed to changes.\n     * @param subject - The subject of the change.\n     * @param args - The event args detailing the change that occurred.\n     *\n     * @internal\n     */\n    handleChange(_, observer) {\n        handleChange(this, observer.controller, observer);\n    }\n}\nCSSDirective.define(CSSBindingDirective);\n","import { isFunction } from \"../interfaces.js\";\nimport { ElementController } from \"./element-controller.js\";\nimport { FASTElementDefinition, } from \"./fast-definitions.js\";\n/* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\nfunction createFASTElement(BaseType) {\n    const type = class extends BaseType {\n        constructor() {\n            /* eslint-disable-next-line */\n            super();\n            ElementController.forCustomElement(this);\n        }\n        $emit(type, detail, options) {\n            return this.$fastController.emit(type, detail, options);\n        }\n        connectedCallback() {\n            this.$fastController.connect();\n        }\n        disconnectedCallback() {\n            this.$fastController.disconnect();\n        }\n        attributeChangedCallback(name, oldValue, newValue) {\n            this.$fastController.onAttributeChangedCallback(name, oldValue, newValue);\n        }\n    };\n    FASTElementDefinition.registerBaseType(type);\n    return type;\n}\nfunction compose(type, nameOrDef) {\n    if (isFunction(type)) {\n        return FASTElementDefinition.compose(type, nameOrDef);\n    }\n    return FASTElementDefinition.compose(this, type);\n}\nfunction define(type, nameOrDef) {\n    if (isFunction(type)) {\n        return FASTElementDefinition.compose(type, nameOrDef).define().type;\n    }\n    return FASTElementDefinition.compose(this, type).define().type;\n}\nfunction from(BaseType) {\n    return createFASTElement(BaseType);\n}\n/**\n * A minimal base class for FASTElements that also provides\n * static helpers for working with FASTElements.\n * @public\n */\nexport const FASTElement = Object.assign(createFASTElement(HTMLElement), {\n    /**\n     * Creates a new FASTElement base class inherited from the\n     * provided base type.\n     * @param BaseType - The base element type to inherit from.\n     */\n    from,\n    /**\n     * Defines a platform custom element based on the provided type and definition.\n     * @param type - The custom element type to define.\n     * @param nameOrDef - The name of the element to define or a definition object\n     * that describes the element to define.\n     */\n    define,\n    /**\n     * Defines metadata for a FASTElement which can be used to later define the element.\n     * @public\n     */\n    compose,\n});\n/**\n * Decorator: Defines a platform custom element based on `FASTElement`.\n * @param nameOrDef - The name of the element to define or a definition object\n * that describes the element to define.\n * @public\n */\nexport function customElement(nameOrDef) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\n    return function (type) {\n        define(type, nameOrDef);\n    };\n}\n","import \"../interfaces.js\";\nimport { PropertyChangeNotifier } from \"../observation/notifier.js\";\nimport { ExecutionContext, Observable, SourceLifetime, } from \"../observation/observable.js\";\nimport { FAST, makeSerializationNoop } from \"../platform.js\";\nimport { ElementStyles } from \"../styles/element-styles.js\";\nimport { UnobservableMutationObserver } from \"../utilities.js\";\nimport { FASTElementDefinition } from \"./fast-definitions.js\";\nimport { HydrationMarkup, isHydratable } from \"./hydration.js\";\nconst defaultEventOptions = {\n    bubbles: true,\n    composed: true,\n    cancelable: true,\n};\nconst isConnectedPropertyName = \"isConnected\";\nconst shadowRoots = new WeakMap();\nfunction getShadowRoot(element) {\n    var _a, _b;\n    return (_b = (_a = element.shadowRoot) !== null && _a !== void 0 ? _a : shadowRoots.get(element)) !== null && _b !== void 0 ? _b : null;\n}\nlet elementControllerStrategy;\n/**\n * Controls the lifecycle and rendering of a `FASTElement`.\n * @public\n */\nexport class ElementController extends PropertyChangeNotifier {\n    /**\n     * Creates a Controller to control the specified element.\n     * @param element - The element to be controlled by this controller.\n     * @param definition - The element definition metadata that instructs this\n     * controller in how to handle rendering and other platform integrations.\n     * @internal\n     */\n    constructor(element, definition) {\n        super(element);\n        this.boundObservables = null;\n        this.needsInitialization = true;\n        this.hasExistingShadowRoot = false;\n        this._template = null;\n        this.stage = 3 /* Stages.disconnected */;\n        /**\n         * A guard against connecting behaviors multiple times\n         * during connect in scenarios where a behavior adds\n         * another behavior during it's connectedCallback\n         */\n        this.guardBehaviorConnection = false;\n        this.behaviors = null;\n        /**\n         * Tracks whether behaviors are connected so that\n         * behaviors cant be connected multiple times\n         */\n        this.behaviorsConnected = false;\n        this._mainStyles = null;\n        /**\n         * This allows Observable.getNotifier(...) to return the Controller\n         * when the notifier for the Controller itself is being requested. The\n         * result is that the Observable system does not need to create a separate\n         * instance of Notifier for observables on the Controller. The component and\n         * the controller will now share the same notifier, removing one-object construct\n         * per web component instance.\n         */\n        this.$fastController = this;\n        /**\n         * The view associated with the custom element.\n         * @remarks\n         * If `null` then the element is managing its own rendering.\n         */\n        this.view = null;\n        this.source = element;\n        this.definition = definition;\n        const shadowOptions = definition.shadowOptions;\n        if (shadowOptions !== void 0) {\n            let shadowRoot = element.shadowRoot;\n            if (shadowRoot) {\n                this.hasExistingShadowRoot = true;\n            }\n            else {\n                shadowRoot = element.attachShadow(shadowOptions);\n                if (shadowOptions.mode === \"closed\") {\n                    shadowRoots.set(element, shadowRoot);\n                }\n            }\n        }\n        // Capture any observable values that were set by the binding engine before\n        // the browser upgraded the element. Then delete the property since it will\n        // shadow the getter/setter that is required to make the observable operate.\n        // Later, in the connect callback, we'll re-apply the values.\n        const accessors = Observable.getAccessors(element);\n        if (accessors.length > 0) {\n            const boundObservables = (this.boundObservables = Object.create(null));\n            for (let i = 0, ii = accessors.length; i < ii; ++i) {\n                const propertyName = accessors[i].name;\n                const value = element[propertyName];\n                if (value !== void 0) {\n                    delete element[propertyName];\n                    boundObservables[propertyName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Indicates whether or not the custom element has been\n     * connected to the document.\n     */\n    get isConnected() {\n        Observable.track(this, isConnectedPropertyName);\n        return this.stage === 1 /* Stages.connected */;\n    }\n    /**\n     * The context the expression is evaluated against.\n     */\n    get context() {\n        var _a, _b;\n        return (_b = (_a = this.view) === null || _a === void 0 ? void 0 : _a.context) !== null && _b !== void 0 ? _b : ExecutionContext.default;\n    }\n    /**\n     * Indicates whether the controller is bound.\n     */\n    get isBound() {\n        var _a, _b;\n        return (_b = (_a = this.view) === null || _a === void 0 ? void 0 : _a.isBound) !== null && _b !== void 0 ? _b : false;\n    }\n    /**\n     * Indicates how the source's lifetime relates to the controller's lifetime.\n     */\n    get sourceLifetime() {\n        var _a;\n        return (_a = this.view) === null || _a === void 0 ? void 0 : _a.sourceLifetime;\n    }\n    /**\n     * Gets/sets the template used to render the component.\n     * @remarks\n     * This value can only be accurately read after connect but can be set at any time.\n     */\n    get template() {\n        var _a;\n        // 1. Template overrides take top precedence.\n        if (this._template === null) {\n            const definition = this.definition;\n            if (this.source.resolveTemplate) {\n                // 2. Allow for element instance overrides next.\n                this._template = this.source.resolveTemplate();\n            }\n            else if (definition.template) {\n                // 3. Default to the static definition.\n                this._template = (_a = definition.template) !== null && _a !== void 0 ? _a : null;\n            }\n        }\n        return this._template;\n    }\n    set template(value) {\n        if (this._template === value) {\n            return;\n        }\n        this._template = value;\n        if (!this.needsInitialization) {\n            this.renderTemplate(value);\n        }\n    }\n    /**\n     * The main set of styles used for the component, independent\n     * of any dynamically added styles.\n     */\n    get mainStyles() {\n        var _a;\n        // 1. Styles overrides take top precedence.\n        if (this._mainStyles === null) {\n            const definition = this.definition;\n            if (this.source.resolveStyles) {\n                // 2. Allow for element instance overrides next.\n                this._mainStyles = this.source.resolveStyles();\n            }\n            else if (definition.styles) {\n                // 3. Default to the static definition.\n                this._mainStyles = (_a = definition.styles) !== null && _a !== void 0 ? _a : null;\n            }\n        }\n        return this._mainStyles;\n    }\n    set mainStyles(value) {\n        if (this._mainStyles === value) {\n            return;\n        }\n        if (this._mainStyles !== null) {\n            this.removeStyles(this._mainStyles);\n        }\n        this._mainStyles = value;\n        if (!this.needsInitialization) {\n            this.addStyles(value);\n        }\n    }\n    /**\n     * Registers an unbind handler with the controller.\n     * @param behavior - An object to call when the controller unbinds.\n     */\n    onUnbind(behavior) {\n        var _a;\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.onUnbind(behavior);\n    }\n    /**\n     * Adds the behavior to the component.\n     * @param behavior - The behavior to add.\n     */\n    addBehavior(behavior) {\n        var _a, _b;\n        const targetBehaviors = (_a = this.behaviors) !== null && _a !== void 0 ? _a : (this.behaviors = new Map());\n        const count = (_b = targetBehaviors.get(behavior)) !== null && _b !== void 0 ? _b : 0;\n        if (count === 0) {\n            targetBehaviors.set(behavior, 1);\n            behavior.addedCallback && behavior.addedCallback(this);\n            if (behavior.connectedCallback &&\n                !this.guardBehaviorConnection &&\n                (this.stage === 1 /* Stages.connected */ || this.stage === 0 /* Stages.connecting */)) {\n                behavior.connectedCallback(this);\n            }\n        }\n        else {\n            targetBehaviors.set(behavior, count + 1);\n        }\n    }\n    /**\n     * Removes the behavior from the component.\n     * @param behavior - The behavior to remove.\n     * @param force - Forces removal even if this behavior was added more than once.\n     */\n    removeBehavior(behavior, force = false) {\n        const targetBehaviors = this.behaviors;\n        if (targetBehaviors === null) {\n            return;\n        }\n        const count = targetBehaviors.get(behavior);\n        if (count === void 0) {\n            return;\n        }\n        if (count === 1 || force) {\n            targetBehaviors.delete(behavior);\n            if (behavior.disconnectedCallback && this.stage !== 3 /* Stages.disconnected */) {\n                behavior.disconnectedCallback(this);\n            }\n            behavior.removedCallback && behavior.removedCallback(this);\n        }\n        else {\n            targetBehaviors.set(behavior, count - 1);\n        }\n    }\n    /**\n     * Adds styles to this element. Providing an HTMLStyleElement will attach the element instance to the shadowRoot.\n     * @param styles - The styles to add.\n     */\n    addStyles(styles) {\n        var _a;\n        if (!styles) {\n            return;\n        }\n        const source = this.source;\n        if (styles instanceof HTMLElement) {\n            const target = (_a = getShadowRoot(source)) !== null && _a !== void 0 ? _a : this.source;\n            target.append(styles);\n        }\n        else if (!styles.isAttachedTo(source)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.addStylesTo(source);\n            if (sourceBehaviors !== null) {\n                for (let i = 0, ii = sourceBehaviors.length; i < ii; ++i) {\n                    this.addBehavior(sourceBehaviors[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Removes styles from this element. Providing an HTMLStyleElement will detach the element instance from the shadowRoot.\n     * @param styles - the styles to remove.\n     */\n    removeStyles(styles) {\n        var _a;\n        if (!styles) {\n            return;\n        }\n        const source = this.source;\n        if (styles instanceof HTMLElement) {\n            const target = (_a = getShadowRoot(source)) !== null && _a !== void 0 ? _a : source;\n            target.removeChild(styles);\n        }\n        else if (styles.isAttachedTo(source)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.removeStylesFrom(source);\n            if (sourceBehaviors !== null) {\n                for (let i = 0, ii = sourceBehaviors.length; i < ii; ++i) {\n                    this.removeBehavior(sourceBehaviors[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Runs connected lifecycle behavior on the associated element.\n     */\n    connect() {\n        if (this.stage !== 3 /* Stages.disconnected */) {\n            return;\n        }\n        this.stage = 0 /* Stages.connecting */;\n        this.bindObservables();\n        this.connectBehaviors();\n        if (this.needsInitialization) {\n            this.renderTemplate(this.template);\n            this.addStyles(this.mainStyles);\n            this.needsInitialization = false;\n        }\n        else if (this.view !== null) {\n            this.view.bind(this.source);\n        }\n        this.stage = 1 /* Stages.connected */;\n        Observable.notify(this, isConnectedPropertyName);\n    }\n    bindObservables() {\n        if (this.boundObservables !== null) {\n            const element = this.source;\n            const boundObservables = this.boundObservables;\n            const propertyNames = Object.keys(boundObservables);\n            for (let i = 0, ii = propertyNames.length; i < ii; ++i) {\n                const propertyName = propertyNames[i];\n                element[propertyName] = boundObservables[propertyName];\n            }\n            this.boundObservables = null;\n        }\n    }\n    connectBehaviors() {\n        if (this.behaviorsConnected === false) {\n            const behaviors = this.behaviors;\n            if (behaviors !== null) {\n                this.guardBehaviorConnection = true;\n                for (const key of behaviors.keys()) {\n                    key.connectedCallback && key.connectedCallback(this);\n                }\n                this.guardBehaviorConnection = false;\n            }\n            this.behaviorsConnected = true;\n        }\n    }\n    disconnectBehaviors() {\n        if (this.behaviorsConnected === true) {\n            const behaviors = this.behaviors;\n            if (behaviors !== null) {\n                for (const key of behaviors.keys()) {\n                    key.disconnectedCallback && key.disconnectedCallback(this);\n                }\n            }\n            this.behaviorsConnected = false;\n        }\n    }\n    /**\n     * Runs disconnected lifecycle behavior on the associated element.\n     */\n    disconnect() {\n        if (this.stage !== 1 /* Stages.connected */) {\n            return;\n        }\n        this.stage = 2 /* Stages.disconnecting */;\n        Observable.notify(this, isConnectedPropertyName);\n        if (this.view !== null) {\n            this.view.unbind();\n        }\n        this.disconnectBehaviors();\n        this.stage = 3 /* Stages.disconnected */;\n    }\n    /**\n     * Runs the attribute changed callback for the associated element.\n     * @param name - The name of the attribute that changed.\n     * @param oldValue - The previous value of the attribute.\n     * @param newValue - The new value of the attribute.\n     */\n    onAttributeChangedCallback(name, oldValue, newValue) {\n        const attrDef = this.definition.attributeLookup[name];\n        if (attrDef !== void 0) {\n            attrDef.onAttributeChangedCallback(this.source, newValue);\n        }\n    }\n    /**\n     * Emits a custom HTML event.\n     * @param type - The type name of the event.\n     * @param detail - The event detail object to send with the event.\n     * @param options - The event options. By default bubbles and composed.\n     * @remarks\n     * Only emits events if connected.\n     */\n    emit(type, detail, options) {\n        if (this.stage === 1 /* Stages.connected */) {\n            return this.source.dispatchEvent(new CustomEvent(type, Object.assign(Object.assign({ detail }, defaultEventOptions), options)));\n        }\n        return false;\n    }\n    renderTemplate(template) {\n        var _a;\n        // When getting the host to render to, we start by looking\n        // up the shadow root. If there isn't one, then that means\n        // we're doing a Light DOM render to the element's direct children.\n        const element = this.source;\n        const host = (_a = getShadowRoot(element)) !== null && _a !== void 0 ? _a : element;\n        if (this.view !== null) {\n            // If there's already a view, we need to unbind and remove through dispose.\n            this.view.dispose();\n            this.view = null;\n        }\n        else if (!this.needsInitialization || this.hasExistingShadowRoot) {\n            this.hasExistingShadowRoot = false;\n            // If there was previous custom rendering, we need to clear out the host.\n            for (let child = host.firstChild; child !== null; child = host.firstChild) {\n                host.removeChild(child);\n            }\n        }\n        if (template) {\n            // If a new template was provided, render it.\n            this.view = template.render(element, host, element);\n            this.view.sourceLifetime =\n                SourceLifetime.coupled;\n        }\n    }\n    /**\n     * Locates or creates a controller for the specified element.\n     * @param element - The element to return the controller for.\n     * @remarks\n     * The specified element must have a {@link FASTElementDefinition}\n     * registered either through the use of the {@link customElement}\n     * decorator or a call to `FASTElement.define`.\n     */\n    static forCustomElement(element) {\n        const controller = element.$fastController;\n        if (controller !== void 0) {\n            return controller;\n        }\n        const definition = FASTElementDefinition.getForInstance(element);\n        if (definition === void 0) {\n            throw FAST.error(1401 /* Message.missingElementDefinition */);\n        }\n        return (element.$fastController = new elementControllerStrategy(element, definition));\n    }\n    /**\n     * Sets the strategy that ElementController.forCustomElement uses to construct\n     * ElementController instances for an element.\n     * @param strategy - The strategy to use.\n     */\n    static setStrategy(strategy) {\n        elementControllerStrategy = strategy;\n    }\n}\nmakeSerializationNoop(ElementController);\n// Set default strategy for ElementController\nElementController.setStrategy(ElementController);\n/**\n * Converts a styleTarget into the operative target. When the provided target is an Element\n * that is a FASTElement, the function will return the ShadowRoot for that element. Otherwise,\n * it will return the root node for the element.\n * @param target\n * @returns\n */\nfunction normalizeStyleTarget(target) {\n    var _a;\n    if (\"adoptedStyleSheets\" in target) {\n        return target;\n    }\n    else {\n        return ((_a = getShadowRoot(target)) !== null && _a !== void 0 ? _a : target.getRootNode());\n    }\n}\n// Default StyleStrategy implementations are defined in this module because they\n// require access to element shadowRoots, and we don't want to leak shadowRoot\n// objects out of this module.\n/**\n * https://wicg.github.io/construct-stylesheets/\n * https://developers.google.com/web/updates/2019/02/constructable-stylesheets\n *\n * @internal\n */\nexport class AdoptedStyleSheetsStrategy {\n    constructor(styles) {\n        const styleSheetCache = AdoptedStyleSheetsStrategy.styleSheetCache;\n        this.sheets = styles.map((x) => {\n            if (x instanceof CSSStyleSheet) {\n                return x;\n            }\n            let sheet = styleSheetCache.get(x);\n            if (sheet === void 0) {\n                sheet = new CSSStyleSheet();\n                sheet.replaceSync(x);\n                styleSheetCache.set(x, sheet);\n            }\n            return sheet;\n        });\n    }\n    addStylesTo(target) {\n        addAdoptedStyleSheets(normalizeStyleTarget(target), this.sheets);\n    }\n    removeStylesFrom(target) {\n        removeAdoptedStyleSheets(normalizeStyleTarget(target), this.sheets);\n    }\n}\nAdoptedStyleSheetsStrategy.styleSheetCache = new Map();\nlet id = 0;\nconst nextStyleId = () => `fast-${++id}`;\nfunction usableStyleTarget(target) {\n    return target === document ? document.body : target;\n}\n/**\n * @internal\n */\nexport class StyleElementStrategy {\n    constructor(styles) {\n        this.styles = styles;\n        this.styleClass = nextStyleId();\n    }\n    addStylesTo(target) {\n        target = usableStyleTarget(normalizeStyleTarget(target));\n        const styles = this.styles;\n        const styleClass = this.styleClass;\n        for (let i = 0; i < styles.length; i++) {\n            const element = document.createElement(\"style\");\n            element.innerHTML = styles[i];\n            element.className = styleClass;\n            target.append(element);\n        }\n    }\n    removeStylesFrom(target) {\n        target = usableStyleTarget(normalizeStyleTarget(target));\n        const styles = target.querySelectorAll(`.${this.styleClass}`);\n        for (let i = 0, ii = styles.length; i < ii; ++i) {\n            target.removeChild(styles[i]);\n        }\n    }\n}\nlet addAdoptedStyleSheets = (target, sheets) => {\n    target.adoptedStyleSheets = [...target.adoptedStyleSheets, ...sheets];\n};\nlet removeAdoptedStyleSheets = (target, sheets) => {\n    target.adoptedStyleSheets = target.adoptedStyleSheets.filter((x) => sheets.indexOf(x) === -1);\n};\nif (ElementStyles.supportsAdoptedStyleSheets) {\n    try {\n        // Test if browser implementation uses FrozenArray.\n        // If not, use push / splice to alter the stylesheets\n        // in place. This circumvents a bug in Safari 16.4 where\n        // periodically, assigning the array would previously\n        // cause sheets to be removed.\n        document.adoptedStyleSheets.push();\n        document.adoptedStyleSheets.splice();\n        addAdoptedStyleSheets = (target, sheets) => {\n            target.adoptedStyleSheets.push(...sheets);\n        };\n        removeAdoptedStyleSheets = (target, sheets) => {\n            for (const sheet of sheets) {\n                const index = target.adoptedStyleSheets.indexOf(sheet);\n                if (index !== -1) {\n                    target.adoptedStyleSheets.splice(index, 1);\n                }\n            }\n        };\n    }\n    catch (e) {\n        // Do nothing if an error is thrown, the default\n        // case handles FrozenArray.\n    }\n    ElementStyles.setDefaultStrategy(AdoptedStyleSheetsStrategy);\n}\nelse {\n    ElementStyles.setDefaultStrategy(StyleElementStrategy);\n}\nconst deferHydrationAttribute = \"defer-hydration\";\nconst needsHydrationAttribute = \"needs-hydration\";\n/**\n * An ElementController capable of hydrating FAST elements from\n * Declarative Shadow DOM.\n *\n * @beta\n */\nexport class HydratableElementController extends ElementController {\n    static hydrationObserverHandler(records) {\n        for (const record of records) {\n            HydratableElementController.hydrationObserver.unobserve(record.target);\n            record.target.$fastController.connect();\n        }\n    }\n    connect() {\n        var _a, _b;\n        // Initialize needsHydration on first connect\n        if (this.needsHydration === undefined) {\n            this.needsHydration =\n                this.source.getAttribute(needsHydrationAttribute) !== null;\n        }\n        // If the `defer-hydration` attribute exists on the source,\n        // wait for it to be removed before continuing connection behavior.\n        if (this.source.hasAttribute(deferHydrationAttribute)) {\n            HydratableElementController.hydrationObserver.observe(this.source, {\n                attributeFilter: [deferHydrationAttribute],\n            });\n            return;\n        }\n        // If the controller does not need to be hydrated, defer connection behavior\n        // to the base-class. This case handles element re-connection and initial connection\n        // of elements that did not get declarative shadow-dom emitted, as well as if an extending\n        // class\n        if (!this.needsHydration) {\n            super.connect();\n            return;\n        }\n        if (this.stage !== 3 /* Stages.disconnected */) {\n            return;\n        }\n        this.stage = 0 /* Stages.connecting */;\n        this.bindObservables();\n        this.connectBehaviors();\n        const element = this.source;\n        const host = (_a = getShadowRoot(element)) !== null && _a !== void 0 ? _a : element;\n        if (this.template) {\n            if (isHydratable(this.template)) {\n                let firstChild = host.firstChild;\n                let lastChild = host.lastChild;\n                if (element.shadowRoot === null) {\n                    // handle element boundary markers when shadowRoot is not present\n                    if (HydrationMarkup.isElementBoundaryStartMarker(firstChild)) {\n                        firstChild.data = \"\";\n                        firstChild = firstChild.nextSibling;\n                    }\n                    if (HydrationMarkup.isElementBoundaryEndMarker(lastChild)) {\n                        lastChild.data = \"\";\n                        lastChild = lastChild.previousSibling;\n                    }\n                }\n                this.view = this.template.hydrate(firstChild, lastChild, element);\n                (_b = this.view) === null || _b === void 0 ? void 0 : _b.bind(this.source);\n            }\n            else {\n                this.renderTemplate(this.template);\n            }\n        }\n        this.addStyles(this.mainStyles);\n        this.stage = 1 /* Stages.connected */;\n        this.source.removeAttribute(needsHydrationAttribute);\n        this.needsInitialization = this.needsHydration = false;\n        Observable.notify(this, isConnectedPropertyName);\n    }\n    disconnect() {\n        super.disconnect();\n        HydratableElementController.hydrationObserver.unobserve(this.source);\n    }\n    static install() {\n        ElementController.setStrategy(HydratableElementController);\n    }\n}\nHydratableElementController.hydrationObserver = new UnobservableMutationObserver(HydratableElementController.hydrationObserverHandler);\n","import { DOM } from \"./dom.js\";\nimport { ExecutionContext } from \"./observation/observable.js\";\nimport { nextId } from \"./templating/markup.js\";\n/**\n * Retrieves the \"composed parent\" element of a node, ignoring DOM tree boundaries.\n * When the parent of a node is a shadow-root, it will return the host\n * element of the shadow root. Otherwise it will return the parent node or null if\n * no parent node exists.\n * @param element - The element for which to retrieve the composed parent\n *\n * @public\n */\nexport function composedParent(element) {\n    const parentNode = element.parentElement;\n    if (parentNode) {\n        return parentNode;\n    }\n    else {\n        const rootNode = element.getRootNode();\n        if (rootNode.host instanceof HTMLElement) {\n            // this is shadow-root\n            return rootNode.host;\n        }\n    }\n    return null;\n}\n/**\n * Determines if the reference element contains the test element in a \"composed\" DOM tree that\n * ignores shadow DOM boundaries.\n *\n * Returns true of the test element is a descendent of the reference, or exists in\n * a shadow DOM that is a logical descendent of the reference. Otherwise returns false.\n * @param reference - The element to test for containment against.\n * @param test - The element being tested for containment.\n *\n * @public\n */\nexport function composedContains(reference, test) {\n    let current = test;\n    while (current !== null) {\n        if (current === reference) {\n            return true;\n        }\n        current = composedParent(current);\n    }\n    return false;\n}\n/**\n * An extension of MutationObserver that supports unobserving nodes.\n * @internal\n */\nexport class UnobservableMutationObserver extends MutationObserver {\n    /**\n     * Creates an instance of UnobservableMutationObserver.\n     * @param callback - The callback to invoke when observed nodes are changed.\n     */\n    constructor(callback) {\n        function handler(mutations) {\n            this.callback.call(null, mutations.filter(record => this.observedNodes.has(record.target)));\n        }\n        super(handler);\n        this.callback = callback;\n        this.observedNodes = new Set();\n    }\n    observe(target, options) {\n        this.observedNodes.add(target);\n        super.observe(target, options);\n    }\n    unobserve(target) {\n        this.observedNodes.delete(target);\n        if (this.observedNodes.size < 1) {\n            this.disconnect();\n        }\n    }\n}\n/**\n * Bridges between ViewBehaviors and HostBehaviors, enabling a host to\n * control ViewBehaviors.\n * @public\n */\nexport const ViewBehaviorOrchestrator = Object.freeze({\n    /**\n     * Creates a ViewBehaviorOrchestrator.\n     * @param source - The source to to associate behaviors with.\n     * @returns A ViewBehaviorOrchestrator.\n     */\n    create(source) {\n        const behaviors = [];\n        const targets = {};\n        let unbindables = null;\n        let isConnected = false;\n        return {\n            source,\n            context: ExecutionContext.default,\n            targets,\n            get isBound() {\n                return isConnected;\n            },\n            addBehaviorFactory(factory, target) {\n                var _a, _b, _c, _d;\n                const compiled = factory;\n                compiled.id = (_a = compiled.id) !== null && _a !== void 0 ? _a : nextId();\n                compiled.targetNodeId = (_b = compiled.targetNodeId) !== null && _b !== void 0 ? _b : nextId();\n                compiled.targetTagName = (_c = target.tagName) !== null && _c !== void 0 ? _c : null;\n                compiled.policy = (_d = compiled.policy) !== null && _d !== void 0 ? _d : DOM.policy;\n                this.addTarget(compiled.targetNodeId, target);\n                this.addBehavior(compiled.createBehavior());\n            },\n            addTarget(nodeId, target) {\n                targets[nodeId] = target;\n            },\n            addBehavior(behavior) {\n                behaviors.push(behavior);\n                if (isConnected) {\n                    behavior.bind(this);\n                }\n            },\n            onUnbind(unbindable) {\n                if (unbindables === null) {\n                    unbindables = [];\n                }\n                unbindables.push(unbindable);\n            },\n            connectedCallback(controller) {\n                if (!isConnected) {\n                    isConnected = true;\n                    behaviors.forEach(x => x.bind(this));\n                }\n            },\n            disconnectedCallback(controller) {\n                if (isConnected) {\n                    isConnected = false;\n                    if (unbindables !== null) {\n                        unbindables.forEach(x => x.unbind(this));\n                    }\n                }\n            },\n        };\n    },\n});\n","import { isString, KernelServiceId } from \"../interfaces.js\";\nimport { Observable } from \"../observation/observable.js\";\nimport { createTypeRegistry, FAST } from \"../platform.js\";\nimport { ElementStyles } from \"../styles/element-styles.js\";\nimport { AttributeDefinition } from \"./attributes.js\";\nconst defaultShadowOptions = { mode: \"open\" };\nconst defaultElementOptions = {};\nconst fastElementBaseTypes = new Set();\nconst fastElementRegistry = FAST.getById(KernelServiceId.elementRegistry, () => createTypeRegistry());\n/**\n * Defines metadata for a FASTElement.\n * @public\n */\nexport class FASTElementDefinition {\n    constructor(type, nameOrConfig = type.definition) {\n        var _a;\n        this.platformDefined = false;\n        if (isString(nameOrConfig)) {\n            nameOrConfig = { name: nameOrConfig };\n        }\n        this.type = type;\n        this.name = nameOrConfig.name;\n        this.template = nameOrConfig.template;\n        this.registry = (_a = nameOrConfig.registry) !== null && _a !== void 0 ? _a : customElements;\n        const proto = type.prototype;\n        const attributes = AttributeDefinition.collect(type, nameOrConfig.attributes);\n        const observedAttributes = new Array(attributes.length);\n        const propertyLookup = {};\n        const attributeLookup = {};\n        for (let i = 0, ii = attributes.length; i < ii; ++i) {\n            const current = attributes[i];\n            observedAttributes[i] = current.attribute;\n            propertyLookup[current.name] = current;\n            attributeLookup[current.attribute] = current;\n            Observable.defineProperty(proto, current);\n        }\n        Reflect.defineProperty(type, \"observedAttributes\", {\n            value: observedAttributes,\n            enumerable: true,\n        });\n        this.attributes = attributes;\n        this.propertyLookup = propertyLookup;\n        this.attributeLookup = attributeLookup;\n        this.shadowOptions =\n            nameOrConfig.shadowOptions === void 0\n                ? defaultShadowOptions\n                : nameOrConfig.shadowOptions === null\n                    ? void 0\n                    : Object.assign(Object.assign({}, defaultShadowOptions), nameOrConfig.shadowOptions);\n        this.elementOptions =\n            nameOrConfig.elementOptions === void 0\n                ? defaultElementOptions\n                : Object.assign(Object.assign({}, defaultElementOptions), nameOrConfig.elementOptions);\n        this.styles = ElementStyles.normalize(nameOrConfig.styles);\n        fastElementRegistry.register(this);\n    }\n    /**\n     * Indicates if this element has been defined in at least one registry.\n     */\n    get isDefined() {\n        return this.platformDefined;\n    }\n    /**\n     * Defines a custom element based on this definition.\n     * @param registry - The element registry to define the element in.\n     * @remarks\n     * This operation is idempotent per registry.\n     */\n    define(registry = this.registry) {\n        const type = this.type;\n        if (!registry.get(this.name)) {\n            this.platformDefined = true;\n            registry.define(this.name, type, this.elementOptions);\n        }\n        return this;\n    }\n    /**\n     * Creates an instance of FASTElementDefinition.\n     * @param type - The type this definition is being created for.\n     * @param nameOrDef - The name of the element to define or a config object\n     * that describes the element to define.\n     */\n    static compose(type, nameOrDef) {\n        if (fastElementBaseTypes.has(type) || fastElementRegistry.getByType(type)) {\n            return new FASTElementDefinition(class extends type {\n            }, nameOrDef);\n        }\n        return new FASTElementDefinition(type, nameOrDef);\n    }\n    /**\n     * Registers a FASTElement base type.\n     * @param type - The type to register as a base type.\n     * @internal\n     */\n    static registerBaseType(type) {\n        fastElementBaseTypes.add(type);\n    }\n}\n/**\n * Gets the element definition associated with the specified type.\n * @param type - The custom element type to retrieve the definition for.\n */\nFASTElementDefinition.getByType = fastElementRegistry.getByType;\n/**\n * Gets the element definition associated with the instance.\n * @param instance - The custom element instance to retrieve the definition for.\n */\nFASTElementDefinition.getForInstance = fastElementRegistry.getForInstance;\n","const bindingStartMarker = /fe-b\\$\\$start\\$\\$(\\d+)\\$\\$(.+)\\$\\$fe-b/;\nconst bindingEndMarker = /fe-b\\$\\$end\\$\\$(\\d+)\\$\\$(.+)\\$\\$fe-b/;\nconst repeatViewStartMarker = /fe-repeat\\$\\$start\\$\\$(\\d+)\\$\\$fe-repeat/;\nconst repeatViewEndMarker = /fe-repeat\\$\\$end\\$\\$(\\d+)\\$\\$fe-repeat/;\nconst elementBoundaryStartMarker = /^(?:.{0,1000})fe-eb\\$\\$start\\$\\$(.+?)\\$\\$fe-eb/;\nconst elementBoundaryEndMarker = /fe-eb\\$\\$end\\$\\$(.{0,1000})\\$\\$fe-eb(?:.{0,1000})$/;\nfunction isComment(node) {\n    return node && node.nodeType === Node.COMMENT_NODE;\n}\n/**\n * Markup utilities to aid in template hydration.\n * @internal\n */\nexport const HydrationMarkup = Object.freeze({\n    attributeMarkerName: \"data-fe-b\",\n    attributeBindingSeparator: \" \",\n    contentBindingStartMarker(index, uniqueId) {\n        return `fe-b$$start$$${index}$$${uniqueId}$$fe-b`;\n    },\n    contentBindingEndMarker(index, uniqueId) {\n        return `fe-b$$end$$${index}$$${uniqueId}$$fe-b`;\n    },\n    repeatStartMarker(index) {\n        return `fe-repeat$$start$$${index}$$fe-repeat`;\n    },\n    repeatEndMarker(index) {\n        return `fe-repeat$$end$$${index}$$fe-repeat`;\n    },\n    isContentBindingStartMarker(content) {\n        return bindingStartMarker.test(content);\n    },\n    isContentBindingEndMarker(content) {\n        return bindingEndMarker.test(content);\n    },\n    isRepeatViewStartMarker(content) {\n        return repeatViewStartMarker.test(content);\n    },\n    isRepeatViewEndMarker(content) {\n        return repeatViewEndMarker.test(content);\n    },\n    isElementBoundaryStartMarker(node) {\n        return isComment(node) && elementBoundaryStartMarker.test(node.data.trim());\n    },\n    isElementBoundaryEndMarker(node) {\n        return isComment(node) && elementBoundaryEndMarker.test(node.data);\n    },\n    /**\n     * Returns the indexes of the ViewBehaviorFactories affecting\n     * attributes for the element, or null if no factories were found.\n     */\n    parseAttributeBinding(node) {\n        const attr = node.getAttribute(this.attributeMarkerName);\n        return attr === null\n            ? attr\n            : attr.split(this.attributeBindingSeparator).map(i => parseInt(i));\n    },\n    /**\n     * Parses the ViewBehaviorFactory index from string data. Returns\n     * the binding index or null if the index cannot be retrieved.\n     */\n    parseContentBindingStartMarker(content) {\n        return parseIndexAndIdMarker(bindingStartMarker, content);\n    },\n    parseContentBindingEndMarker(content) {\n        return parseIndexAndIdMarker(bindingEndMarker, content);\n    },\n    /**\n     * Parses the index of a repeat directive from a content string.\n     */\n    parseRepeatStartMarker(content) {\n        return parseIntMarker(repeatViewStartMarker, content);\n    },\n    parseRepeatEndMarker(content) {\n        return parseIntMarker(repeatViewEndMarker, content);\n    },\n    /**\n     * Parses element Id from element boundary markers\n     */\n    parseElementBoundaryStartMarker(content) {\n        return parseStringMarker(elementBoundaryStartMarker, content.trim());\n    },\n    parseElementBoundaryEndMarker(content) {\n        return parseStringMarker(elementBoundaryEndMarker, content);\n    },\n});\nfunction parseIntMarker(regex, content) {\n    const match = regex.exec(content);\n    return match === null ? match : parseInt(match[1]);\n}\nfunction parseStringMarker(regex, content) {\n    const match = regex.exec(content);\n    return match === null ? match : match[1];\n}\nfunction parseIndexAndIdMarker(regex, content) {\n    const match = regex.exec(content);\n    return match === null ? match : [parseInt(match[1]), match[2]];\n}\n/**\n * @internal\n */\nexport const Hydratable = Symbol.for(\"fe-hydration\");\nexport function isHydratable(value) {\n    return value[Hydratable] === Hydratable;\n}\n","import { isFunction, isString } from \"../interfaces.js\";\nimport { Binding } from \"../binding/binding.js\";\nimport { FAST, makeSerializationNoop } from \"../platform.js\";\nimport { oneWay } from \"../binding/one-way.js\";\nimport { oneTime } from \"../binding/one-time.js\";\nimport { HTMLBindingDirective } from \"./html-binding-directive.js\";\nimport { Compiler } from \"./compiler.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { nextId } from \"./markup.js\";\n// Much thanks to LitHTML for working this out!\nconst lastAttributeNameRegex = \n/* eslint-disable-next-line no-control-regex, max-len */\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\nconst noFactories = Object.create(null);\n/**\n * Inlines a template into another template.\n * @public\n */\nexport class InlineTemplateDirective {\n    /**\n     * Creates an instance of InlineTemplateDirective.\n     * @param template - The template to inline.\n     */\n    constructor(html, factories = noFactories) {\n        this.html = html;\n        this.factories = factories;\n    }\n    /**\n     * Creates HTML to be used within a template.\n     * @param add - Can be used to add  behavior factories to a template.\n     */\n    createHTML(add) {\n        const factories = this.factories;\n        for (const key in factories) {\n            add(factories[key]);\n        }\n        return this.html;\n    }\n}\n/**\n * An empty template partial.\n */\nInlineTemplateDirective.empty = new InlineTemplateDirective(\"\");\nHTMLDirective.define(InlineTemplateDirective);\nfunction createHTML(value, prevString, add, definition = HTMLDirective.getForInstance(value)) {\n    if (definition.aspected) {\n        const match = lastAttributeNameRegex.exec(prevString);\n        if (match !== null) {\n            HTMLDirective.assignAspect(value, match[2]);\n        }\n    }\n    return value.createHTML(add);\n}\n/**\n * A template capable of creating HTMLView instances or rendering directly to DOM.\n * @public\n */\nexport class ViewTemplate {\n    /**\n     * Creates an instance of ViewTemplate.\n     * @param html - The html representing what this template will instantiate, including placeholders for directives.\n     * @param factories - The directives that will be connected to placeholders in the html.\n     * @param policy - The security policy to use when compiling this template.\n     */\n    constructor(html, factories = {}, policy) {\n        this.policy = policy;\n        this.result = null;\n        this.html = html;\n        this.factories = factories;\n    }\n    /**\n     * @internal\n     */\n    compile() {\n        if (this.result === null) {\n            this.result = Compiler.compile(this.html, this.factories, this.policy);\n        }\n        return this.result;\n    }\n    /**\n     * Creates an HTMLView instance based on this template definition.\n     * @param hostBindingTarget - The element that host behaviors will be bound to.\n     */\n    create(hostBindingTarget) {\n        return this.compile().createView(hostBindingTarget);\n    }\n    /**\n     * Returns a directive that can inline the template.\n     */\n    inline() {\n        return new InlineTemplateDirective(isString(this.html) ? this.html : this.html.innerHTML, this.factories);\n    }\n    /**\n     * Sets the DOMPolicy for this template.\n     * @param policy - The policy to associated with this template.\n     * @returns The modified template instance.\n     * @remarks\n     * The DOMPolicy can only be set once for a template and cannot be\n     * set after the template is compiled.\n     */\n    withPolicy(policy) {\n        if (this.result) {\n            throw FAST.error(1208 /* Message.cannotSetTemplatePolicyAfterCompilation */);\n        }\n        if (this.policy) {\n            throw FAST.error(1207 /* Message.onlySetTemplatePolicyOnce */);\n        }\n        this.policy = policy;\n        return this;\n    }\n    /**\n     * Creates an HTMLView from this template, binds it to the source, and then appends it to the host.\n     * @param source - The data source to bind the template to.\n     * @param host - The Element where the template will be rendered.\n     * @param hostBindingTarget - An HTML element to target the host bindings at if different from the\n     * host that the template is being attached to.\n     */\n    render(source, host, hostBindingTarget) {\n        const view = this.create(hostBindingTarget);\n        view.bind(source);\n        view.appendTo(host);\n        return view;\n    }\n    /**\n     * Creates a template based on a set of static strings and dynamic values.\n     * @param strings - The static strings to create the template with.\n     * @param values - The dynamic values to create the template with.\n     * @param policy - The DOMPolicy to associated with the template.\n     * @returns A ViewTemplate.\n     * @remarks\n     * This API should not be used directly under normal circumstances because constructing\n     * a template in this way, if not done properly, can open up the application to XSS\n     * attacks. When using this API, provide a strong DOMPolicy that can properly sanitize\n     * and also be sure to manually sanitize all static strings particularly if they can\n     * come from user input.\n     */\n    static create(strings, values, policy) {\n        let html = \"\";\n        const factories = Object.create(null);\n        const add = (factory) => {\n            var _a;\n            const id = (_a = factory.id) !== null && _a !== void 0 ? _a : (factory.id = nextId());\n            factories[id] = factory;\n            return id;\n        };\n        for (let i = 0, ii = strings.length - 1; i < ii; ++i) {\n            const currentString = strings[i];\n            let currentValue = values[i];\n            let definition;\n            html += currentString;\n            if (isFunction(currentValue)) {\n                currentValue = new HTMLBindingDirective(oneWay(currentValue));\n            }\n            else if (currentValue instanceof Binding) {\n                currentValue = new HTMLBindingDirective(currentValue);\n            }\n            else if (!(definition = HTMLDirective.getForInstance(currentValue))) {\n                const staticValue = currentValue;\n                currentValue = new HTMLBindingDirective(oneTime(() => staticValue));\n            }\n            html += createHTML(currentValue, currentString, add, definition);\n        }\n        return new ViewTemplate(html + strings[strings.length - 1], factories, policy);\n    }\n}\nmakeSerializationNoop(ViewTemplate);\n/**\n * Transforms a template literal string into a ViewTemplate.\n * @param strings - The string fragments that are interpolated with the values.\n * @param values - The values that are interpolated with the string fragments.\n * @remarks\n * The html helper supports interpolation of strings, numbers, binding expressions,\n * other template instances, and Directive instances.\n * @public\n */\nexport const html = ((strings, ...values) => {\n    if (Array.isArray(strings) && Array.isArray(strings.raw)) {\n        return ViewTemplate.create(strings, values);\n    }\n    throw FAST.error(1206 /* Message.directCallToHTMLTagNotAllowed */);\n});\nhtml.partial = (html) => {\n    return new InlineTemplateDirective(html);\n};\n","import { makeSerializationNoop } from \"../platform.js\";\nimport { Binding } from \"./binding.js\";\nclass OneTimeBinding extends Binding {\n    createObserver() {\n        return this;\n    }\n    bind(controller) {\n        return this.evaluate(controller.source, controller.context);\n    }\n}\nmakeSerializationNoop(OneTimeBinding);\n/**\n * Creates a one time binding\n * @param expression - The binding to refresh when signaled.\n * @param policy - The security policy to associate with th binding.\n * @returns A binding configuration.\n * @public\n */\nexport function oneTime(expression, policy) {\n    return new OneTimeBinding(expression, policy);\n}\n","import { isHydratable } from \"../components/hydration.js\";\nimport { DOM, DOMAspect } from \"../dom.js\";\nimport \"../interfaces.js\";\nimport { ExecutionContext, } from \"../observation/observable.js\";\nimport { FAST } from \"../platform.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { Markup } from \"./markup.js\";\nimport { HydrationStage } from \"./view.js\";\nfunction isContentTemplate(value) {\n    return value.create !== undefined;\n}\nfunction updateContent(target, aspect, value, controller) {\n    // If there's no actual value, then this equates to the\n    // empty string for the purposes of content bindings.\n    if (value === null || value === undefined) {\n        value = \"\";\n    }\n    // If the value has a \"create\" method, then it's a ContentTemplate.\n    if (isContentTemplate(value)) {\n        target.textContent = \"\";\n        let view = target.$fastView;\n        // If there's no previous view that we might be able to\n        // reuse then create a new view from the template.\n        if (view === void 0) {\n            if (isHydratable(controller) &&\n                isHydratable(value) &&\n                controller.bindingViewBoundaries[this.targetNodeId] !== undefined &&\n                controller.hydrationStage !== HydrationStage.hydrated) {\n                const viewNodes = controller.bindingViewBoundaries[this.targetNodeId];\n                view = value.hydrate(viewNodes.first, viewNodes.last);\n            }\n            else {\n                view = value.create();\n            }\n        }\n        else {\n            // If there is a previous view, but it wasn't created\n            // from the same template as the new value, then we\n            // need to remove the old view if it's still in the DOM\n            // and create a new view from the template.\n            if (target.$fastTemplate !== value) {\n                if (view.isComposed) {\n                    view.remove();\n                    view.unbind();\n                }\n                view = value.create();\n            }\n        }\n        // It's possible that the value is the same as the previous template\n        // and that there's actually no need to compose it.\n        if (!view.isComposed) {\n            view.isComposed = true;\n            view.bind(controller.source, controller.context);\n            view.insertBefore(target);\n            target.$fastView = view;\n            target.$fastTemplate = value;\n        }\n        else if (view.needsBindOnly) {\n            view.needsBindOnly = false;\n            view.bind(controller.source, controller.context);\n        }\n    }\n    else {\n        const view = target.$fastView;\n        // If there is a view and it's currently composed into\n        // the DOM, then we need to remove it.\n        if (view !== void 0 && view.isComposed) {\n            view.isComposed = false;\n            view.remove();\n            if (view.needsBindOnly) {\n                view.needsBindOnly = false;\n            }\n            else {\n                view.unbind();\n            }\n        }\n        target.textContent = value;\n    }\n}\nfunction updateTokenList(target, aspect, value) {\n    var _a;\n    const lookup = `${this.id}-t`;\n    const state = (_a = target[lookup]) !== null && _a !== void 0 ? _a : (target[lookup] = { v: 0, cv: Object.create(null) });\n    const classVersions = state.cv;\n    let version = state.v;\n    const tokenList = target[aspect];\n    // Add the classes, tracking the version at which they were added.\n    if (value !== null && value !== undefined && value.length) {\n        const names = value.split(/\\s+/);\n        for (let i = 0, ii = names.length; i < ii; ++i) {\n            const currentName = names[i];\n            if (currentName === \"\") {\n                continue;\n            }\n            classVersions[currentName] = version;\n            tokenList.add(currentName);\n        }\n    }\n    state.v = version + 1;\n    // If this is the first call to add classes, there's no need to remove old ones.\n    if (version === 0) {\n        return;\n    }\n    // Remove classes from the previous version.\n    version -= 1;\n    for (const name in classVersions) {\n        if (classVersions[name] === version) {\n            tokenList.remove(name);\n        }\n    }\n}\nconst sinkLookup = {\n    [DOMAspect.attribute]: DOM.setAttribute,\n    [DOMAspect.booleanAttribute]: DOM.setBooleanAttribute,\n    [DOMAspect.property]: (t, a, v) => (t[a] = v),\n    [DOMAspect.content]: updateContent,\n    [DOMAspect.tokenList]: updateTokenList,\n    [DOMAspect.event]: () => void 0,\n};\n/**\n * A directive that applies bindings.\n * @public\n */\nexport class HTMLBindingDirective {\n    /**\n     * Creates an instance of HTMLBindingDirective.\n     * @param dataBinding - The binding configuration to apply.\n     */\n    constructor(dataBinding) {\n        this.dataBinding = dataBinding;\n        this.updateTarget = null;\n        /**\n         * The type of aspect to target.\n         */\n        this.aspectType = DOMAspect.content;\n    }\n    /**\n     * Creates HTML to be used within a template.\n     * @param add - Can be used to add  behavior factories to a template.\n     */\n    createHTML(add) {\n        return Markup.interpolation(add(this));\n    }\n    /**\n     * Creates a behavior.\n     */\n    createBehavior() {\n        var _a;\n        if (this.updateTarget === null) {\n            const sink = sinkLookup[this.aspectType];\n            const policy = (_a = this.dataBinding.policy) !== null && _a !== void 0 ? _a : this.policy;\n            if (!sink) {\n                throw FAST.error(1205 /* Message.unsupportedBindingBehavior */);\n            }\n            this.data = `${this.id}-d`;\n            this.updateTarget = policy.protect(this.targetTagName, this.aspectType, this.targetAspect, sink);\n        }\n        return this;\n    }\n    /** @internal */\n    bind(controller) {\n        var _a;\n        const target = controller.targets[this.targetNodeId];\n        const isHydrating = isHydratable(controller) &&\n            controller.hydrationStage &&\n            controller.hydrationStage !== HydrationStage.hydrated;\n        switch (this.aspectType) {\n            case DOMAspect.event:\n                target[this.data] = controller;\n                target.addEventListener(this.targetAspect, this, this.dataBinding.options);\n                break;\n            case DOMAspect.content:\n                controller.onUnbind(this);\n            // intentional fall through\n            default:\n                const observer = (_a = target[this.data]) !== null && _a !== void 0 ? _a : (target[this.data] = this.dataBinding.createObserver(this, this));\n                observer.target = target;\n                observer.controller = controller;\n                if (isHydrating &&\n                    (this.aspectType === DOMAspect.attribute ||\n                        this.aspectType === DOMAspect.booleanAttribute)) {\n                    observer.bind(controller);\n                    // Skip updating target during bind for attributes\n                    break;\n                }\n                this.updateTarget(target, this.targetAspect, observer.bind(controller), controller);\n                break;\n        }\n    }\n    /** @internal */\n    unbind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        const view = target.$fastView;\n        if (view !== void 0 && view.isComposed) {\n            view.unbind();\n            view.needsBindOnly = true;\n        }\n    }\n    /** @internal */\n    handleEvent(event) {\n        const controller = event.currentTarget[this.data];\n        if (controller.isBound) {\n            ExecutionContext.setEvent(event);\n            const result = this.dataBinding.evaluate(controller.source, controller.context);\n            ExecutionContext.setEvent(null);\n            if (result !== true) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** @internal */\n    handleChange(binding, observer) {\n        const target = observer.target;\n        const controller = observer.controller;\n        this.updateTarget(target, this.targetAspect, observer.bind(controller), controller);\n    }\n}\nHTMLDirective.define(HTMLBindingDirective, { aspected: true });\n","var _a;\nimport { Hydratable } from \"../components/hydration.js\";\nimport { buildViewBindingTargets, createRangeForNodes, HydrationTargetElementError, targetFactory, } from \"../hydration/target-builder.js\";\nimport { ExecutionContext, Observable, SourceLifetime, } from \"../observation/observable.js\";\nimport { makeSerializationNoop } from \"../platform.js\";\nfunction removeNodeSequence(firstNode, lastNode) {\n    const parent = firstNode.parentNode;\n    let current = firstNode;\n    let next;\n    while (current !== lastNode) {\n        next = current.nextSibling;\n        if (!next) {\n            throw new Error(`Unmatched first/last child inside \"${lastNode.getRootNode().host.nodeName}\".`);\n        }\n        parent.removeChild(current);\n        current = next;\n    }\n    parent.removeChild(lastNode);\n}\nclass DefaultExecutionContext {\n    constructor() {\n        /**\n         * The index of the current item within a repeat context.\n         */\n        this.index = 0;\n        /**\n         * The length of the current collection within a repeat context.\n         */\n        this.length = 0;\n    }\n    /**\n     * The current event within an event handler.\n     */\n    get event() {\n        return ExecutionContext.getEvent();\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an even index.\n     */\n    get isEven() {\n        return this.index % 2 === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an odd index.\n     */\n    get isOdd() {\n        return this.index % 2 !== 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the first item in the collection.\n     */\n    get isFirst() {\n        return this.index === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is somewhere in the middle of the collection.\n     */\n    get isInMiddle() {\n        return !this.isFirst && !this.isLast;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the last item in the collection.\n     */\n    get isLast() {\n        return this.index === this.length - 1;\n    }\n    /**\n     * Returns the typed event detail of a custom event.\n     */\n    eventDetail() {\n        return this.event.detail;\n    }\n    /**\n     * Returns the typed event target of the event.\n     */\n    eventTarget() {\n        return this.event.target;\n    }\n}\n/**\n * The standard View implementation, which also implements ElementView and SyntheticView.\n * @public\n */\nexport class HTMLView extends DefaultExecutionContext {\n    /**\n     * Constructs an instance of HTMLView.\n     * @param fragment - The html fragment that contains the nodes for this view.\n     * @param behaviors - The behaviors to be applied to this view.\n     */\n    constructor(fragment, factories, targets) {\n        super();\n        this.fragment = fragment;\n        this.factories = factories;\n        this.targets = targets;\n        this.behaviors = null;\n        this.unbindables = [];\n        /**\n         * The data that the view is bound to.\n         */\n        this.source = null;\n        /**\n         * Indicates whether the controller is bound.\n         */\n        this.isBound = false;\n        /**\n         * Indicates how the source's lifetime relates to the controller's lifetime.\n         */\n        this.sourceLifetime = SourceLifetime.unknown;\n        /**\n         * The execution context the view is running within.\n         */\n        this.context = this;\n        this.firstChild = fragment.firstChild;\n        this.lastChild = fragment.lastChild;\n    }\n    /**\n     * Appends the view's DOM nodes to the referenced node.\n     * @param node - The parent node to append the view's DOM nodes to.\n     */\n    appendTo(node) {\n        node.appendChild(this.fragment);\n    }\n    /**\n     * Inserts the view's DOM nodes before the referenced node.\n     * @param node - The node to insert the view's DOM before.\n     */\n    insertBefore(node) {\n        if (this.fragment.hasChildNodes()) {\n            node.parentNode.insertBefore(this.fragment, node);\n        }\n        else {\n            const end = this.lastChild;\n            if (node.previousSibling === end)\n                return;\n            const parentNode = node.parentNode;\n            let current = this.firstChild;\n            let next;\n            while (current !== end) {\n                next = current.nextSibling;\n                parentNode.insertBefore(current, node);\n                current = next;\n            }\n            parentNode.insertBefore(end, node);\n        }\n    }\n    /**\n     * Removes the view's DOM nodes.\n     * The nodes are not disposed and the view can later be re-inserted.\n     */\n    remove() {\n        const fragment = this.fragment;\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while (current !== end) {\n            next = current.nextSibling;\n            fragment.appendChild(current);\n            current = next;\n        }\n        fragment.appendChild(end);\n    }\n    /**\n     * Removes the view and unbinds its behaviors, disposing of DOM nodes afterward.\n     * Once a view has been disposed, it cannot be inserted or bound again.\n     */\n    dispose() {\n        removeNodeSequence(this.firstChild, this.lastChild);\n        this.unbind();\n    }\n    onUnbind(behavior) {\n        this.unbindables.push(behavior);\n    }\n    /**\n     * Binds a view's behaviors to its binding source.\n     * @param source - The binding source for the view's binding behaviors.\n     * @param context - The execution context to run the behaviors within.\n     */\n    bind(source, context = this) {\n        if (this.source === source) {\n            return;\n        }\n        let behaviors = this.behaviors;\n        if (behaviors === null) {\n            this.source = source;\n            this.context = context;\n            this.behaviors = behaviors = new Array(this.factories.length);\n            const factories = this.factories;\n            for (let i = 0, ii = factories.length; i < ii; ++i) {\n                const behavior = factories[i].createBehavior();\n                behavior.bind(this);\n                behaviors[i] = behavior;\n            }\n        }\n        else {\n            if (this.source !== null) {\n                this.evaluateUnbindables();\n            }\n            this.isBound = false;\n            this.source = source;\n            this.context = context;\n            for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n                behaviors[i].bind(this);\n            }\n        }\n        this.isBound = true;\n    }\n    /**\n     * Unbinds a view's behaviors from its binding source.\n     */\n    unbind() {\n        if (!this.isBound || this.source === null) {\n            return;\n        }\n        this.evaluateUnbindables();\n        this.source = null;\n        this.context = this;\n        this.isBound = false;\n    }\n    evaluateUnbindables() {\n        const unbindables = this.unbindables;\n        for (let i = 0, ii = unbindables.length; i < ii; ++i) {\n            unbindables[i].unbind(this);\n        }\n        unbindables.length = 0;\n    }\n    /**\n     * Efficiently disposes of a contiguous range of synthetic view instances.\n     * @param views - A contiguous range of views to be disposed.\n     */\n    static disposeContiguousBatch(views) {\n        if (views.length === 0) {\n            return;\n        }\n        removeNodeSequence(views[0].firstChild, views[views.length - 1].lastChild);\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n            views[i].unbind();\n        }\n    }\n}\nmakeSerializationNoop(HTMLView);\nObservable.defineProperty(HTMLView.prototype, \"index\");\nObservable.defineProperty(HTMLView.prototype, \"length\");\nexport const HydrationStage = {\n    unhydrated: \"unhydrated\",\n    hydrating: \"hydrating\",\n    hydrated: \"hydrated\",\n};\n/** @public */\nexport class HydrationBindingError extends Error {\n    constructor(\n    /**\n     * The error message\n     */\n    message, \n    /**\n     * The factory that was unable to be bound\n     */\n    factory, \n    /**\n     * A DocumentFragment containing a clone of the\n     * view's Nodes.\n     */\n    fragment, \n    /**\n     * String representation of the HTML in the template that\n     * threw the binding error.\n     */\n    templateString) {\n        super(message);\n        this.factory = factory;\n        this.fragment = fragment;\n        this.templateString = templateString;\n    }\n}\nexport class HydrationView extends DefaultExecutionContext {\n    constructor(firstChild, lastChild, sourceTemplate, hostBindingTarget) {\n        super();\n        this.firstChild = firstChild;\n        this.lastChild = lastChild;\n        this.sourceTemplate = sourceTemplate;\n        this.hostBindingTarget = hostBindingTarget;\n        this[_a] = Hydratable;\n        this.context = this;\n        this.source = null;\n        this.isBound = false;\n        this.sourceLifetime = SourceLifetime.unknown;\n        this.unbindables = [];\n        this.fragment = null;\n        this.behaviors = null;\n        this._hydrationStage = HydrationStage.unhydrated;\n        this._bindingViewBoundaries = {};\n        this._targets = {};\n        this.factories = sourceTemplate.compile().factories;\n    }\n    get hydrationStage() {\n        return this._hydrationStage;\n    }\n    get targets() {\n        return this._targets;\n    }\n    get bindingViewBoundaries() {\n        return this._bindingViewBoundaries;\n    }\n    /**\n     * no-op. Hydrated views are don't need to be moved from a documentFragment\n     * to the target node.\n     */\n    insertBefore(node) {\n        // No-op in cases where this is called before the view is removed,\n        // because the nodes will already be in the document and just need hydrating.\n        if (this.fragment === null) {\n            return;\n        }\n        if (this.fragment.hasChildNodes()) {\n            node.parentNode.insertBefore(this.fragment, node);\n        }\n        else {\n            const end = this.lastChild;\n            if (node.previousSibling === end)\n                return;\n            const parentNode = node.parentNode;\n            let current = this.firstChild;\n            let next;\n            while (current !== end) {\n                next = current.nextSibling;\n                parentNode.insertBefore(current, node);\n                current = next;\n            }\n            parentNode.insertBefore(end, node);\n        }\n    }\n    /**\n     * Appends the view to a node. In cases where this is called before the\n     * view has been removed, the method will no-op.\n     * @param node - the node to append the view to.\n     */\n    appendTo(node) {\n        if (this.fragment !== null) {\n            node.appendChild(this.fragment);\n        }\n    }\n    remove() {\n        const fragment = this.fragment || (this.fragment = document.createDocumentFragment());\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while (current !== end) {\n            next = current.nextSibling;\n            if (!next) {\n                throw new Error(`Unmatched first/last child inside \"${end.getRootNode().host.nodeName}\".`);\n            }\n            fragment.appendChild(current);\n            current = next;\n        }\n        fragment.appendChild(end);\n    }\n    bind(source, context = this) {\n        var _b, _c;\n        if (this.hydrationStage !== HydrationStage.hydrated) {\n            this._hydrationStage = HydrationStage.hydrating;\n        }\n        if (this.source === source) {\n            return;\n        }\n        let behaviors = this.behaviors;\n        if (behaviors === null) {\n            this.source = source;\n            this.context = context;\n            try {\n                const { targets, boundaries } = buildViewBindingTargets(this.firstChild, this.lastChild, this.factories);\n                this._targets = targets;\n                this._bindingViewBoundaries = boundaries;\n            }\n            catch (error) {\n                if (error instanceof HydrationTargetElementError) {\n                    let templateString = this.sourceTemplate.html;\n                    if (typeof templateString !== \"string\") {\n                        templateString = templateString.innerHTML;\n                    }\n                    error.templateString = templateString;\n                }\n                throw error;\n            }\n            this.behaviors = behaviors = new Array(this.factories.length);\n            const factories = this.factories;\n            for (let i = 0, ii = factories.length; i < ii; ++i) {\n                const factory = factories[i];\n                if (factory.targetNodeId === \"h\" && this.hostBindingTarget) {\n                    targetFactory(factory, this.hostBindingTarget, this._targets);\n                }\n                // If the binding has been targeted or it is a host binding and the view has a hostBindingTarget\n                if (factory.targetNodeId in this.targets) {\n                    const behavior = factory.createBehavior();\n                    behavior.bind(this);\n                    behaviors[i] = behavior;\n                }\n                else {\n                    let templateString = this.sourceTemplate.html;\n                    if (typeof templateString !== \"string\") {\n                        templateString = templateString.innerHTML;\n                    }\n                    throw new HydrationBindingError(`HydrationView was unable to successfully target bindings inside \"${(_c = ((_b = this.firstChild) === null || _b === void 0 ? void 0 : _b.getRootNode()).host) === null || _c === void 0 ? void 0 : _c.nodeName}\".`, factory, createRangeForNodes(this.firstChild, this.lastChild).cloneContents(), templateString);\n                }\n            }\n        }\n        else {\n            if (this.source !== null) {\n                this.evaluateUnbindables();\n            }\n            this.isBound = false;\n            this.source = source;\n            this.context = context;\n            for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n                behaviors[i].bind(this);\n            }\n        }\n        this.isBound = true;\n        this._hydrationStage = HydrationStage.hydrated;\n    }\n    unbind() {\n        if (!this.isBound || this.source === null) {\n            return;\n        }\n        this.evaluateUnbindables();\n        this.source = null;\n        this.context = this;\n        this.isBound = false;\n    }\n    /**\n     * Removes the view and unbinds its behaviors, disposing of DOM nodes afterward.\n     * Once a view has been disposed, it cannot be inserted or bound again.\n     */\n    dispose() {\n        removeNodeSequence(this.firstChild, this.lastChild);\n        this.unbind();\n    }\n    onUnbind(behavior) {\n        this.unbindables.push(behavior);\n    }\n    evaluateUnbindables() {\n        const unbindables = this.unbindables;\n        for (let i = 0, ii = unbindables.length; i < ii; ++i) {\n            unbindables[i].unbind(this);\n        }\n        unbindables.length = 0;\n    }\n}\n_a = Hydratable;\nmakeSerializationNoop(HydrationView);\n","import { HydrationMarkup } from \"../components/hydration.js\";\nexport class HydrationTargetElementError extends Error {\n    constructor(\n    /**\n     * The error message\n     */\n    message, \n    /**\n     * The Compiled View Behavior Factories that belong to the view.\n     */\n    factories, \n    /**\n     * The node to target factory.\n     */\n    node) {\n        super(message);\n        this.factories = factories;\n        this.node = node;\n    }\n}\nfunction isComment(node) {\n    return node.nodeType === Node.COMMENT_NODE;\n}\nfunction isText(node) {\n    return node.nodeType === Node.TEXT_NODE;\n}\n/**\n * Returns a range object inclusive of all nodes including and between the\n * provided first and last node.\n * @param first - The first node\n * @param last - This last node\n * @returns\n */\nexport function createRangeForNodes(first, last) {\n    const range = document.createRange();\n    range.setStart(first, 0);\n    // The lastIndex should be inclusive of the end of the lastChild. Obtain offset based\n    // on usageNotes:  https://developer.mozilla.org/en-US/docs/Web/API/Range/setEnd#usage_notes\n    range.setEnd(last, isComment(last) || isText(last) ? last.data.length : last.childNodes.length);\n    return range;\n}\nfunction isShadowRoot(node) {\n    return node instanceof DocumentFragment && \"mode\" in node;\n}\n/**\n * Maps {@link CompiledViewBehaviorFactory} ids to the corresponding node targets for the view.\n * @param firstNode - The first node of the view.\n * @param lastNode -  The last node of the view.\n * @param factories - The Compiled View Behavior Factories that belong to the view.\n * @returns - A {@link ViewBehaviorTargets } object for the factories in the view.\n */\nexport function buildViewBindingTargets(firstNode, lastNode, factories) {\n    const range = createRangeForNodes(firstNode, lastNode);\n    const treeRoot = range.commonAncestorContainer;\n    const walker = document.createTreeWalker(treeRoot, NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_COMMENT + NodeFilter.SHOW_TEXT, {\n        acceptNode(node) {\n            return range.comparePoint(node, 0) === 0\n                ? NodeFilter.FILTER_ACCEPT\n                : NodeFilter.FILTER_REJECT;\n        },\n    });\n    const targets = {};\n    const boundaries = {};\n    let node = (walker.currentNode = firstNode);\n    while (node !== null) {\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE: {\n                targetElement(node, factories, targets);\n                break;\n            }\n            case Node.COMMENT_NODE: {\n                targetComment(node, walker, factories, targets, boundaries);\n                break;\n            }\n        }\n        node = walker.nextNode();\n    }\n    range.detach();\n    return { targets, boundaries };\n}\nfunction targetElement(node, factories, targets) {\n    // Check for attributes and map any factories.\n    const attrFactoryIds = HydrationMarkup.parseAttributeBinding(node);\n    if (attrFactoryIds !== null) {\n        for (const id of attrFactoryIds) {\n            if (!factories[id]) {\n                throw new HydrationTargetElementError(`HydrationView was unable to successfully target factory on ${node.nodeName} inside ${node.getRootNode().host.nodeName}. This likely indicates a template mismatch between SSR rendering and hydration.`, factories, node);\n            }\n            targetFactory(factories[id], node, targets);\n        }\n        node.removeAttribute(HydrationMarkup.attributeMarkerName);\n    }\n}\nfunction targetComment(node, walker, factories, targets, boundaries) {\n    if (HydrationMarkup.isElementBoundaryStartMarker(node)) {\n        skipToElementBoundaryEndMarker(node, walker);\n        return;\n    }\n    if (HydrationMarkup.isContentBindingStartMarker(node.data)) {\n        const parsed = HydrationMarkup.parseContentBindingStartMarker(node.data);\n        if (parsed === null) {\n            return;\n        }\n        const [index, id] = parsed;\n        const factory = factories[index];\n        const nodes = [];\n        let current = walker.nextSibling();\n        node.data = \"\";\n        const first = current;\n        // Search for the binding end marker that closes the binding.\n        while (current !== null) {\n            if (isComment(current)) {\n                const parsed = HydrationMarkup.parseContentBindingEndMarker(current.data);\n                if (parsed && parsed[1] === id) {\n                    break;\n                }\n            }\n            nodes.push(current);\n            current = walker.nextSibling();\n        }\n        if (current === null) {\n            const root = node.getRootNode();\n            throw new Error(`Error hydrating Comment node inside \"${isShadowRoot(root) ? root.host.nodeName : root.nodeName}\".`);\n        }\n        current.data = \"\";\n        if (nodes.length === 1 && isText(nodes[0])) {\n            targetFactory(factory, nodes[0], targets);\n        }\n        else {\n            // If current === first, it means there is no content in\n            // the view. This happens when a `when` directive evaluates false,\n            // or whenever a content binding returns null or undefined.\n            // In that case, there will never be any content\n            // to hydrate and Binding can simply create a HTMLView\n            // whenever it needs to.\n            if (current !== first && current.previousSibling !== null) {\n                boundaries[factory.targetNodeId] = {\n                    first,\n                    last: current.previousSibling,\n                };\n            }\n            // Binding evaluates to null / undefined or a template.\n            // If binding revaluates to string, it will replace content in target\n            // So we always insert a text node to ensure that\n            // text content binding will be written to this text node instead of comment\n            const dummyTextNode = current.parentNode.insertBefore(document.createTextNode(\"\"), current);\n            targetFactory(factory, dummyTextNode, targets);\n        }\n    }\n}\n/**\n * Moves TreeWalker to element boundary end marker\n * @param node - element boundary start marker node\n * @param walker - tree walker\n */\nfunction skipToElementBoundaryEndMarker(node, walker) {\n    const id = HydrationMarkup.parseElementBoundaryStartMarker(node.data);\n    let current = walker.nextSibling();\n    while (current !== null) {\n        if (isComment(current)) {\n            const parsed = HydrationMarkup.parseElementBoundaryEndMarker(current.data);\n            if (parsed && parsed === id) {\n                break;\n            }\n        }\n        current = walker.nextSibling();\n    }\n}\nexport function targetFactory(factory, node, targets) {\n    if (factory.targetNodeId === undefined) {\n        // Dev error, this shouldn't ever be thrown\n        throw new Error(\"Factory could not be target to the node\");\n    }\n    targets[factory.targetNodeId] = node;\n}\n","import { isFunction, isString } from \"../interfaces.js\";\nimport { FAST } from \"../platform.js\";\nimport { DOM } from \"../dom.js\";\nimport { oneTime } from \"../binding/one-time.js\";\nimport { oneWay } from \"../binding/one-way.js\";\nimport { nextId, Parser } from \"./markup.js\";\nimport { HTMLBindingDirective } from \"./html-binding-directive.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { HTMLView } from \"./view.js\";\nconst targetIdFrom = (parentId, nodeIndex) => `${parentId}.${nodeIndex}`;\nconst descriptorCache = {};\n// used to prevent creating lots of objects just to track node and index while compiling\nconst next = {\n    index: 0,\n    node: null,\n};\nfunction tryWarn(name) {\n    if (!name.startsWith(\"fast-\")) {\n        FAST.warn(1204 /* Message.hostBindingWithoutHost */, { name });\n    }\n}\nconst warningHost = new Proxy(document.createElement(\"div\"), {\n    get(target, property) {\n        tryWarn(property);\n        const value = Reflect.get(target, property);\n        return isFunction(value) ? value.bind(target) : value;\n    },\n    set(target, property, value) {\n        tryWarn(property);\n        return Reflect.set(target, property, value);\n    },\n});\nclass CompilationContext {\n    constructor(fragment, directives, policy) {\n        this.fragment = fragment;\n        this.directives = directives;\n        this.policy = policy;\n        this.proto = null;\n        this.nodeIds = new Set();\n        this.descriptors = {};\n        this.factories = [];\n    }\n    addFactory(factory, parentId, nodeId, targetIndex, tagName) {\n        var _a, _b;\n        if (!this.nodeIds.has(nodeId)) {\n            this.nodeIds.add(nodeId);\n            this.addTargetDescriptor(parentId, nodeId, targetIndex);\n        }\n        factory.id = (_a = factory.id) !== null && _a !== void 0 ? _a : nextId();\n        factory.targetNodeId = nodeId;\n        factory.targetTagName = tagName;\n        factory.policy = (_b = factory.policy) !== null && _b !== void 0 ? _b : this.policy;\n        this.factories.push(factory);\n    }\n    freeze() {\n        this.proto = Object.create(null, this.descriptors);\n        return this;\n    }\n    addTargetDescriptor(parentId, targetId, targetIndex) {\n        const descriptors = this.descriptors;\n        if (targetId === \"r\" || // root\n            targetId === \"h\" || // host\n            descriptors[targetId]) {\n            return;\n        }\n        if (!descriptors[parentId]) {\n            const index = parentId.lastIndexOf(\".\");\n            const grandparentId = parentId.substring(0, index);\n            const childIndex = parseInt(parentId.substring(index + 1));\n            this.addTargetDescriptor(grandparentId, parentId, childIndex);\n        }\n        let descriptor = descriptorCache[targetId];\n        if (!descriptor) {\n            const field = `_${targetId}`;\n            descriptorCache[targetId] = descriptor = {\n                get() {\n                    var _a;\n                    return ((_a = this[field]) !== null && _a !== void 0 ? _a : (this[field] = this[parentId].childNodes[targetIndex]));\n                },\n            };\n        }\n        descriptors[targetId] = descriptor;\n    }\n    createView(hostBindingTarget) {\n        const fragment = this.fragment.cloneNode(true);\n        const targets = Object.create(this.proto);\n        targets.r = fragment;\n        targets.h = hostBindingTarget !== null && hostBindingTarget !== void 0 ? hostBindingTarget : warningHost;\n        for (const id of this.nodeIds) {\n            targets[id]; // trigger locator\n        }\n        return new HTMLView(fragment, this.factories, targets);\n    }\n}\nfunction compileAttributes(context, parentId, node, nodeId, nodeIndex, includeBasicValues = false) {\n    const attributes = node.attributes;\n    const directives = context.directives;\n    for (let i = 0, ii = attributes.length; i < ii; ++i) {\n        const attr = attributes[i];\n        const attrValue = attr.value;\n        const parseResult = Parser.parse(attrValue, directives);\n        let result = null;\n        if (parseResult === null) {\n            if (includeBasicValues) {\n                result = new HTMLBindingDirective(oneTime(() => attrValue, context.policy));\n                HTMLDirective.assignAspect(result, attr.name);\n            }\n        }\n        else {\n            /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n            result = Compiler.aggregate(parseResult, context.policy);\n        }\n        if (result !== null) {\n            node.removeAttributeNode(attr);\n            i--;\n            ii--;\n            context.addFactory(result, parentId, nodeId, nodeIndex, node.tagName);\n        }\n    }\n}\nfunction compileContent(context, node, parentId, nodeId, nodeIndex) {\n    const parseResult = Parser.parse(node.textContent, context.directives);\n    if (parseResult === null) {\n        next.node = node.nextSibling;\n        next.index = nodeIndex + 1;\n        return next;\n    }\n    let currentNode;\n    let lastNode = (currentNode = node);\n    for (let i = 0, ii = parseResult.length; i < ii; ++i) {\n        const currentPart = parseResult[i];\n        if (i !== 0) {\n            nodeIndex++;\n            nodeId = targetIdFrom(parentId, nodeIndex);\n            currentNode = lastNode.parentNode.insertBefore(document.createTextNode(\"\"), lastNode.nextSibling);\n        }\n        if (isString(currentPart)) {\n            currentNode.textContent = currentPart;\n        }\n        else {\n            currentNode.textContent = \" \";\n            HTMLDirective.assignAspect(currentPart);\n            context.addFactory(currentPart, parentId, nodeId, nodeIndex, null);\n        }\n        lastNode = currentNode;\n    }\n    next.index = nodeIndex + 1;\n    next.node = lastNode.nextSibling;\n    return next;\n}\nfunction compileChildren(context, parent, parentId) {\n    let nodeIndex = 0;\n    let childNode = parent.firstChild;\n    while (childNode) {\n        /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n        const result = compileNode(context, parentId, childNode, nodeIndex);\n        childNode = result.node;\n        nodeIndex = result.index;\n    }\n}\nfunction compileNode(context, parentId, node, nodeIndex) {\n    const nodeId = targetIdFrom(parentId, nodeIndex);\n    switch (node.nodeType) {\n        case 1: // element node\n            compileAttributes(context, parentId, node, nodeId, nodeIndex);\n            compileChildren(context, node, nodeId);\n            break;\n        case 3: // text node\n            return compileContent(context, node, parentId, nodeId, nodeIndex);\n        case 8: // comment\n            const parts = Parser.parse(node.data, context.directives);\n            if (parts !== null) {\n                context.addFactory(\n                /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n                Compiler.aggregate(parts), parentId, nodeId, nodeIndex, null);\n            }\n            break;\n    }\n    next.index = nodeIndex + 1;\n    next.node = node.nextSibling;\n    return next;\n}\nfunction isMarker(node, directives) {\n    return (node &&\n        node.nodeType == 8 &&\n        Parser.parse(node.data, directives) !== null);\n}\nconst templateTag = \"TEMPLATE\";\n/**\n * Common APIs related to compilation.\n * @public\n */\nexport const Compiler = {\n    /**\n     * Compiles a template and associated directives into a compilation\n     * result which can be used to create views.\n     * @param html - The html string or template element to compile.\n     * @param factories - The behavior factories referenced by the template.\n     * @param policy - The security policy to compile the html with.\n     * @remarks\n     * The template that is provided for compilation is altered in-place\n     * and cannot be compiled again. If the original template must be preserved,\n     * it is recommended that you clone the original and pass the clone to this API.\n     * @public\n     */\n    compile(html, factories, policy = DOM.policy) {\n        let template;\n        if (isString(html)) {\n            template = document.createElement(templateTag);\n            template.innerHTML = policy.createHTML(html);\n            const fec = template.content.firstElementChild;\n            if (fec !== null && fec.tagName === templateTag) {\n                template = fec;\n            }\n        }\n        else {\n            template = html;\n        }\n        if (!template.content.firstChild && !template.content.lastChild) {\n            template.content.appendChild(document.createComment(\"\"));\n        }\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1111864\n        const fragment = document.adoptNode(template.content);\n        const context = new CompilationContext(fragment, factories, policy);\n        compileAttributes(context, \"\", template, /* host */ \"h\", 0, true);\n        if (\n        // If the first node in a fragment is a marker, that means it's an unstable first node,\n        // because something like a when, repeat, etc. could add nodes before the marker.\n        // To mitigate this, we insert a stable first node. However, if we insert a node,\n        // that will alter the result of the TreeWalker. So, we also need to offset the target index.\n        isMarker(fragment.firstChild, factories) ||\n            // Or if there is only one node and a directive, it means the template's content\n            // is *only* the directive. In that case, HTMLView.dispose() misses any nodes inserted by\n            // the directive. Inserting a new node ensures proper disposal of nodes added by the directive.\n            (fragment.childNodes.length === 1 && Object.keys(factories).length > 0)) {\n            fragment.insertBefore(document.createComment(\"\"), fragment.firstChild);\n        }\n        compileChildren(context, fragment, /* root */ \"r\");\n        next.node = null; // prevent leaks\n        return context.freeze();\n    },\n    /**\n     * Sets the default compilation strategy that will be used by the ViewTemplate whenever\n     * it needs to compile a view preprocessed with the html template function.\n     * @param strategy - The compilation strategy to use when compiling templates.\n     */\n    setDefaultStrategy(strategy) {\n        this.compile = strategy;\n    },\n    /**\n     * Aggregates an array of strings and directives into a single directive.\n     * @param parts - A heterogeneous array of static strings interspersed with\n     * directives.\n     * @param policy - The security policy to use with the aggregated bindings.\n     * @returns A single inline directive that aggregates the behavior of all the parts.\n     */\n    aggregate(parts, policy = DOM.policy) {\n        if (parts.length === 1) {\n            return parts[0];\n        }\n        let sourceAspect;\n        let isVolatile = false;\n        let bindingPolicy = void 0;\n        const partCount = parts.length;\n        const finalParts = parts.map((x) => {\n            if (isString(x)) {\n                return () => x;\n            }\n            sourceAspect = x.sourceAspect || sourceAspect;\n            isVolatile = isVolatile || x.dataBinding.isVolatile;\n            bindingPolicy = bindingPolicy || x.dataBinding.policy;\n            return x.dataBinding.evaluate;\n        });\n        const expression = (scope, context) => {\n            let output = \"\";\n            for (let i = 0; i < partCount; ++i) {\n                output += finalParts[i](scope, context);\n            }\n            return output;\n        };\n        const directive = new HTMLBindingDirective(oneWay(expression, bindingPolicy !== null && bindingPolicy !== void 0 ? bindingPolicy : policy, isVolatile));\n        HTMLDirective.assignAspect(directive, sourceAspect);\n        return directive;\n    },\n};\n","import { HydrationMarkup, isHydratable } from \"../components/hydration.js\";\nimport { ArrayObserver } from \"../observation/arrays.js\";\nimport { Observable } from \"../observation/observable.js\";\nimport { emptyArray } from \"../platform.js\";\nimport { normalizeBinding } from \"../binding/normalize.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { Markup } from \"./markup.js\";\nimport { HTMLView, HydrationStage } from \"./view.js\";\nconst defaultRepeatOptions = Object.freeze({\n    positioning: false,\n    recycle: true,\n});\nfunction bindWithoutPositioning(view, items, index, controller) {\n    view.context.parent = controller.source;\n    view.context.parentContext = controller.context;\n    view.bind(items[index]);\n}\nfunction bindWithPositioning(view, items, index, controller) {\n    view.context.parent = controller.source;\n    view.context.parentContext = controller.context;\n    view.context.length = items.length;\n    view.context.index = index;\n    view.bind(items[index]);\n}\nfunction isCommentNode(node) {\n    return node.nodeType === Node.COMMENT_NODE;\n}\nexport class HydrationRepeatError extends Error {\n    constructor(\n    /**\n     * The error message\n     */\n    message, propertyBag) {\n        super(message);\n        this.propertyBag = propertyBag;\n    }\n}\n/**\n * A behavior that renders a template for each item in an array.\n * @public\n */\nexport class RepeatBehavior {\n    /**\n     * Creates an instance of RepeatBehavior.\n     * @param location - The location in the DOM to render the repeat.\n     * @param dataBinding - The array to render.\n     * @param isItemsBindingVolatile - Indicates whether the items binding has volatile dependencies.\n     * @param templateBinding - The template to render for each item.\n     * @param isTemplateBindingVolatile - Indicates whether the template binding has volatile dependencies.\n     * @param options - Options used to turn on special repeat features.\n     */\n    constructor(directive) {\n        this.directive = directive;\n        this.items = null;\n        this.itemsObserver = null;\n        this.bindView = bindWithoutPositioning;\n        /** @internal */\n        this.views = [];\n        this.itemsBindingObserver = directive.dataBinding.createObserver(this, directive);\n        this.templateBindingObserver = directive.templateBinding.createObserver(this, directive);\n        if (directive.options.positioning) {\n            this.bindView = bindWithPositioning;\n        }\n    }\n    /**\n     * Bind this behavior.\n     * @param controller - The view controller that manages the lifecycle of this behavior.\n     */\n    bind(controller) {\n        this.location = controller.targets[this.directive.targetNodeId];\n        this.controller = controller;\n        this.items = this.itemsBindingObserver.bind(controller);\n        this.template = this.templateBindingObserver.bind(controller);\n        this.observeItems(true);\n        if (isHydratable(this.template) &&\n            isHydratable(controller) &&\n            controller.hydrationStage !== HydrationStage.hydrated) {\n            this.hydrateViews(this.template);\n        }\n        else {\n            this.refreshAllViews();\n        }\n        controller.onUnbind(this);\n    }\n    /**\n     * Unbinds this behavior.\n     */\n    unbind() {\n        if (this.itemsObserver !== null) {\n            this.itemsObserver.unsubscribe(this);\n        }\n        this.unbindAllViews();\n    }\n    /**\n     * Handles changes in the array, its items, and the repeat template.\n     * @param source - The source of the change.\n     * @param args - The details about what was changed.\n     */\n    handleChange(source, args) {\n        if (args === this.itemsBindingObserver) {\n            this.items = this.itemsBindingObserver.bind(this.controller);\n            this.observeItems();\n            this.refreshAllViews();\n        }\n        else if (args === this.templateBindingObserver) {\n            this.template = this.templateBindingObserver.bind(this.controller);\n            this.refreshAllViews(true);\n        }\n        else if (!args[0]) {\n            return;\n        }\n        else if (args[0].reset) {\n            this.refreshAllViews();\n        }\n        else {\n            this.updateViews(args);\n        }\n    }\n    observeItems(force = false) {\n        if (!this.items) {\n            this.items = emptyArray;\n            return;\n        }\n        const oldObserver = this.itemsObserver;\n        const newObserver = (this.itemsObserver = Observable.getNotifier(this.items));\n        const hasNewObserver = oldObserver !== newObserver;\n        if (hasNewObserver && oldObserver !== null) {\n            oldObserver.unsubscribe(this);\n        }\n        if (hasNewObserver || force) {\n            newObserver.subscribe(this);\n        }\n    }\n    updateViews(splices) {\n        const views = this.views;\n        const bindView = this.bindView;\n        const items = this.items;\n        const template = this.template;\n        const controller = this.controller;\n        const recycle = this.directive.options.recycle;\n        const leftoverViews = [];\n        let leftoverIndex = 0;\n        let availableViews = 0;\n        for (let i = 0, ii = splices.length; i < ii; ++i) {\n            const splice = splices[i];\n            const removed = splice.removed;\n            let removeIndex = 0;\n            let addIndex = splice.index;\n            const end = addIndex + splice.addedCount;\n            const removedViews = views.splice(splice.index, removed.length);\n            const totalAvailableViews = (availableViews =\n                leftoverViews.length + removedViews.length);\n            for (; addIndex < end; ++addIndex) {\n                const neighbor = views[addIndex];\n                const location = neighbor ? neighbor.firstChild : this.location;\n                let view;\n                if (recycle && availableViews > 0) {\n                    if (removeIndex <= totalAvailableViews && removedViews.length > 0) {\n                        view = removedViews[removeIndex];\n                        removeIndex++;\n                    }\n                    else {\n                        view = leftoverViews[leftoverIndex];\n                        leftoverIndex++;\n                    }\n                    availableViews--;\n                }\n                else {\n                    view = template.create();\n                }\n                views.splice(addIndex, 0, view);\n                bindView(view, items, addIndex, controller);\n                view.insertBefore(location);\n            }\n            if (removedViews[removeIndex]) {\n                leftoverViews.push(...removedViews.slice(removeIndex));\n            }\n        }\n        for (let i = leftoverIndex, ii = leftoverViews.length; i < ii; ++i) {\n            leftoverViews[i].dispose();\n        }\n        if (this.directive.options.positioning) {\n            for (let i = 0, viewsLength = views.length; i < viewsLength; ++i) {\n                const context = views[i].context;\n                context.length = viewsLength;\n                context.index = i;\n            }\n        }\n    }\n    refreshAllViews(templateChanged = false) {\n        const items = this.items;\n        const template = this.template;\n        const location = this.location;\n        const bindView = this.bindView;\n        const controller = this.controller;\n        let itemsLength = items.length;\n        let views = this.views;\n        let viewsLength = views.length;\n        if (itemsLength === 0 || templateChanged || !this.directive.options.recycle) {\n            // all views need to be removed\n            HTMLView.disposeContiguousBatch(views);\n            viewsLength = 0;\n        }\n        if (viewsLength === 0) {\n            // all views need to be created\n            this.views = views = new Array(itemsLength);\n            for (let i = 0; i < itemsLength; ++i) {\n                const view = template.create();\n                bindView(view, items, i, controller);\n                views[i] = view;\n                view.insertBefore(location);\n            }\n        }\n        else {\n            // attempt to reuse existing views with new data\n            let i = 0;\n            for (; i < itemsLength; ++i) {\n                if (i < viewsLength) {\n                    const view = views[i];\n                    if (!view) {\n                        const serializer = new XMLSerializer();\n                        throw new HydrationRepeatError(`View is null or undefined inside \"${this.location.getRootNode().host.nodeName}\".`, {\n                            index: i,\n                            hydrationStage: this.controller\n                                .hydrationStage,\n                            itemsLength,\n                            viewsState: views.map(v => (v ? \"hydrated\" : \"empty\")),\n                            viewTemplateString: serializer.serializeToString(template.create().fragment),\n                            rootNodeContent: serializer.serializeToString(this.location.getRootNode()),\n                        });\n                    }\n                    bindView(view, items, i, controller);\n                }\n                else {\n                    const view = template.create();\n                    bindView(view, items, i, controller);\n                    views.push(view);\n                    view.insertBefore(location);\n                }\n            }\n            const removed = views.splice(i, viewsLength - i);\n            for (i = 0, itemsLength = removed.length; i < itemsLength; ++i) {\n                removed[i].dispose();\n            }\n        }\n    }\n    unbindAllViews() {\n        const views = this.views;\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n            const view = views[i];\n            if (!view) {\n                const serializer = new XMLSerializer();\n                throw new HydrationRepeatError(`View is null or undefined inside \"${this.location.getRootNode().host.nodeName}\".`, {\n                    index: i,\n                    hydrationStage: this.controller.hydrationStage,\n                    viewsState: views.map(v => (v ? \"hydrated\" : \"empty\")),\n                    rootNodeContent: serializer.serializeToString(this.location.getRootNode()),\n                });\n            }\n            view.unbind();\n        }\n    }\n    hydrateViews(template) {\n        if (!this.items) {\n            return;\n        }\n        this.views = new Array(this.items.length);\n        let current = this.location.previousSibling;\n        while (current !== null) {\n            if (!isCommentNode(current)) {\n                current = current.previousSibling;\n                continue;\n            }\n            const index = HydrationMarkup.parseRepeatEndMarker(current.data);\n            if (index === null) {\n                current = current.previousSibling;\n                continue;\n            }\n            current.data = \"\";\n            // end of repeat is the previousSibling of end comment\n            const end = current.previousSibling;\n            if (!end) {\n                throw new Error(`Error when hydrating inside \"${this.location.getRootNode().host.nodeName}\": end should never be null.`);\n            }\n            // find start marker\n            let start = end;\n            // How many unmatched end markers we've encountered\n            let unmatchedEndMarkers = 0;\n            while (start !== null) {\n                if (isCommentNode(start)) {\n                    if (HydrationMarkup.isRepeatViewEndMarker(start.data)) {\n                        unmatchedEndMarkers++;\n                    }\n                    else if (HydrationMarkup.isRepeatViewStartMarker(start.data)) {\n                        if (unmatchedEndMarkers) {\n                            unmatchedEndMarkers--;\n                        }\n                        else {\n                            if (HydrationMarkup.parseRepeatStartMarker(start.data) !==\n                                index) {\n                                throw new Error(`Error when hydrating inside \"${this.location.getRootNode().host\n                                    .nodeName}\": Mismatched start and end markers.`);\n                            }\n                            start.data = \"\";\n                            current = start.previousSibling;\n                            // start of repeat content is the nextSibling of start comment\n                            start = start.nextSibling;\n                            const view = template.hydrate(start, end);\n                            this.views[index] = view;\n                            this.bindView(view, this.items, index, this.controller);\n                            break;\n                        }\n                    }\n                }\n                start = start.previousSibling;\n            }\n            if (!start) {\n                throw new Error(`Error when hydrating inside \"${this.location.getRootNode().host.nodeName}\": start should never be null.`);\n            }\n        }\n    }\n}\n/**\n * A directive that configures list rendering.\n * @public\n */\nexport class RepeatDirective {\n    /**\n     * Creates an instance of RepeatDirective.\n     * @param dataBinding - The binding that provides the array to render.\n     * @param templateBinding - The template binding used to obtain a template to render for each item in the array.\n     * @param options - Options used to turn on special repeat features.\n     */\n    constructor(dataBinding, templateBinding, options) {\n        this.dataBinding = dataBinding;\n        this.templateBinding = templateBinding;\n        this.options = options;\n        ArrayObserver.enable();\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     */\n    createHTML(add) {\n        return Markup.comment(add(this));\n    }\n    /**\n     * Creates a behavior for the provided target node.\n     * @param target - The node instance to create the behavior for.\n     */\n    createBehavior() {\n        return new RepeatBehavior(this);\n    }\n}\nHTMLDirective.define(RepeatDirective);\n/**\n * A directive that enables list rendering.\n * @param items - The array to render.\n * @param template - The template or a template binding used obtain a template\n * to render for each item in the array.\n * @param options - Options used to turn on special repeat features.\n * @public\n */\nexport function repeat(items, template, options = defaultRepeatOptions) {\n    const dataBinding = normalizeBinding(items);\n    const templateBinding = normalizeBinding(template);\n    return new RepeatDirective(dataBinding, templateBinding, Object.assign(Object.assign({}, defaultRepeatOptions), options));\n}\n","import { emptyArray } from \"../platform.js\";\nimport { SubscriberSet } from \"./notifier.js\";\nimport { Observable } from \"./observable.js\";\nimport { Updates } from \"./update-queue.js\";\n/**\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   (index, removed, addedCount)\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n * @public\n */\nexport class Splice {\n    /**\n     * Creates a splice.\n     * @param index - The index that the splice occurs at.\n     * @param removed - The items that were removed.\n     * @param addedCount - The  number of items that were added.\n     */\n    constructor(index, removed, addedCount) {\n        this.index = index;\n        this.removed = removed;\n        this.addedCount = addedCount;\n    }\n    /**\n     * Adjusts the splice index based on the provided array.\n     * @param array - The array to adjust to.\n     * @returns The same splice, mutated based on the reference array.\n     */\n    adjustTo(array) {\n        let index = this.index;\n        const arrayLength = array.length;\n        if (index > arrayLength) {\n            index = arrayLength - this.addedCount;\n        }\n        else if (index < 0) {\n            index = arrayLength + this.removed.length + index - this.addedCount;\n        }\n        this.index = index < 0 ? 0 : index;\n        return this;\n    }\n}\n/**\n * Indicates what level of feature support the splice\n * strategy provides.\n * @public\n */\nexport const SpliceStrategySupport = Object.freeze({\n    /**\n     * Only supports resets.\n     */\n    reset: 1,\n    /**\n     * Supports tracking splices and resets.\n     */\n    splice: 2,\n    /**\n     * Supports tracking splices and resets, while applying some form\n     * of optimization, such as merging, to the splices.\n     */\n    optimized: 3,\n});\nconst reset = new Splice(0, emptyArray, 0);\nreset.reset = true;\nconst resetSplices = [reset];\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' to '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    // \"Deletion\" columns\n    const rowCount = oldEnd - oldStart + 1;\n    const columnCount = currentEnd - currentStart + 1;\n    const distances = new Array(rowCount);\n    let north;\n    let west;\n    // \"Addition\" rows. Initialize null column.\n    for (let i = 0; i < rowCount; ++i) {\n        distances[i] = new Array(columnCount);\n        distances[i][0] = i;\n    }\n    // Initialize null row\n    for (let j = 0; j < columnCount; ++j) {\n        distances[0][j] = j;\n    }\n    for (let i = 1; i < rowCount; ++i) {\n        for (let j = 1; j < columnCount; ++j) {\n            if (current[currentStart + j - 1] === old[oldStart + i - 1]) {\n                distances[i][j] = distances[i - 1][j - 1];\n            }\n            else {\n                north = distances[i - 1][j] + 1;\n                west = distances[i][j - 1] + 1;\n                distances[i][j] = north < west ? north : west;\n            }\n        }\n    }\n    return distances;\n}\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n    let i = distances.length - 1;\n    let j = distances[0].length - 1;\n    let current = distances[i][j];\n    const edits = [];\n    while (i > 0 || j > 0) {\n        if (i === 0) {\n            edits.push(2 /* Edit.add */);\n            j--;\n            continue;\n        }\n        if (j === 0) {\n            edits.push(3 /* Edit.delete */);\n            i--;\n            continue;\n        }\n        const northWest = distances[i - 1][j - 1];\n        const west = distances[i - 1][j];\n        const north = distances[i][j - 1];\n        let min;\n        if (west < north) {\n            min = west < northWest ? west : northWest;\n        }\n        else {\n            min = north < northWest ? north : northWest;\n        }\n        if (min === northWest) {\n            if (northWest === current) {\n                edits.push(0 /* Edit.leave */);\n            }\n            else {\n                edits.push(1 /* Edit.update */);\n                current = northWest;\n            }\n            i--;\n            j--;\n        }\n        else if (min === west) {\n            edits.push(3 /* Edit.delete */);\n            i--;\n            current = west;\n        }\n        else {\n            edits.push(2 /* Edit.add */);\n            j--;\n            current = north;\n        }\n    }\n    return edits.reverse();\n}\nfunction sharedPrefix(current, old, searchLength) {\n    for (let i = 0; i < searchLength; ++i) {\n        if (current[i] !== old[i]) {\n            return i;\n        }\n    }\n    return searchLength;\n}\nfunction sharedSuffix(current, old, searchLength) {\n    let index1 = current.length;\n    let index2 = old.length;\n    let count = 0;\n    while (count < searchLength && current[--index1] === old[--index2]) {\n        count++;\n    }\n    return count;\n}\nfunction intersect(start1, end1, start2, end2) {\n    // Disjoint\n    if (end1 < start2 || end2 < start1) {\n        return -1;\n    }\n    // Adjacent\n    if (end1 === start2 || end2 === start1) {\n        return 0;\n    }\n    // Non-zero intersect, span1 first\n    if (start1 < start2) {\n        if (end1 < end2) {\n            return end1 - start2; // Overlap\n        }\n        return end2 - start2; // Contained\n    }\n    // Non-zero intersect, span2 first\n    if (end2 < end1) {\n        return end2 - start1; // Overlap\n    }\n    return end1 - start1; // Contained\n}\n/**\n * @remarks\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n */\nfunction calc(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    let prefixCount = 0;\n    let suffixCount = 0;\n    const minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart === 0 && oldStart === 0) {\n        prefixCount = sharedPrefix(current, old, minLength);\n    }\n    if (currentEnd === current.length && oldEnd === old.length) {\n        suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n    }\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n    if (currentEnd - currentStart === 0 && oldEnd - oldStart === 0) {\n        return emptyArray;\n    }\n    if (currentStart === currentEnd) {\n        const splice = new Splice(currentStart, [], 0);\n        while (oldStart < oldEnd) {\n            splice.removed.push(old[oldStart++]);\n        }\n        return [splice];\n    }\n    else if (oldStart === oldEnd) {\n        return [new Splice(currentStart, [], currentEnd - currentStart)];\n    }\n    const ops = spliceOperationsFromEditDistances(calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));\n    const splices = [];\n    let splice = void 0;\n    let index = currentStart;\n    let oldIndex = oldStart;\n    for (let i = 0; i < ops.length; ++i) {\n        switch (ops[i]) {\n            case 0 /* Edit.leave */:\n                if (splice !== void 0) {\n                    splices.push(splice);\n                    splice = void 0;\n                }\n                index++;\n                oldIndex++;\n                break;\n            case 1 /* Edit.update */:\n                if (splice === void 0) {\n                    splice = new Splice(index, [], 0);\n                }\n                splice.addedCount++;\n                index++;\n                splice.removed.push(old[oldIndex]);\n                oldIndex++;\n                break;\n            case 2 /* Edit.add */:\n                if (splice === void 0) {\n                    splice = new Splice(index, [], 0);\n                }\n                splice.addedCount++;\n                index++;\n                break;\n            case 3 /* Edit.delete */:\n                if (splice === void 0) {\n                    splice = new Splice(index, [], 0);\n                }\n                splice.removed.push(old[oldIndex]);\n                oldIndex++;\n                break;\n            // no default\n        }\n    }\n    if (splice !== void 0) {\n        splices.push(splice);\n    }\n    return splices;\n}\nfunction merge(splice, splices) {\n    let inserted = false;\n    let insertionOffset = 0;\n    for (let i = 0; i < splices.length; i++) {\n        const current = splices[i];\n        current.index += insertionOffset;\n        if (inserted) {\n            continue;\n        }\n        const intersectCount = intersect(splice.index, splice.index + splice.removed.length, current.index, current.index + current.addedCount);\n        if (intersectCount >= 0) {\n            // Merge the two splices\n            splices.splice(i, 1);\n            i--;\n            insertionOffset -= current.addedCount - current.removed.length;\n            splice.addedCount += current.addedCount - intersectCount;\n            const deleteCount = splice.removed.length + current.removed.length - intersectCount;\n            if (!splice.addedCount && !deleteCount) {\n                // merged splice is a noop. discard.\n                inserted = true;\n            }\n            else {\n                let currentRemoved = current.removed;\n                if (splice.index < current.index) {\n                    // some prefix of splice.removed is prepended to current.removed.\n                    const prepend = splice.removed.slice(0, current.index - splice.index);\n                    prepend.push(...currentRemoved);\n                    currentRemoved = prepend;\n                }\n                if (splice.index + splice.removed.length >\n                    current.index + current.addedCount) {\n                    // some suffix of splice.removed is appended to current.removed.\n                    const append = splice.removed.slice(current.index + current.addedCount - splice.index);\n                    currentRemoved.push(...append);\n                }\n                splice.removed = currentRemoved;\n                if (current.index < splice.index) {\n                    splice.index = current.index;\n                }\n            }\n        }\n        else if (splice.index < current.index) {\n            // Insert splice here.\n            inserted = true;\n            splices.splice(i, 0, splice);\n            i++;\n            const offset = splice.addedCount - splice.removed.length;\n            current.index += offset;\n            insertionOffset += offset;\n        }\n    }\n    if (!inserted) {\n        splices.push(splice);\n    }\n}\nfunction project(array, changes) {\n    let splices = [];\n    const initialSplices = [];\n    for (let i = 0, ii = changes.length; i < ii; i++) {\n        merge(changes[i], initialSplices);\n    }\n    for (let i = 0, ii = initialSplices.length; i < ii; ++i) {\n        const splice = initialSplices[i];\n        if (splice.addedCount === 1 && splice.removed.length === 1) {\n            if (splice.removed[0] !== array[splice.index]) {\n                splices.push(splice);\n            }\n            continue;\n        }\n        splices = splices.concat(calc(array, splice.index, splice.index + splice.addedCount, splice.removed, 0, splice.removed.length));\n    }\n    return splices;\n}\n/**\n * A SpliceStrategy that attempts to merge all splices into the minimal set of\n * splices needed to represent the change from the old array to the new array.\n * @public\n */\nlet defaultSpliceStrategy = Object.freeze({\n    support: SpliceStrategySupport.optimized,\n    normalize(previous, current, changes) {\n        if (previous === void 0) {\n            if (changes === void 0) {\n                return emptyArray;\n            }\n            return project(current, changes);\n        }\n        return resetSplices;\n    },\n    pop(array, observer, pop, args) {\n        const notEmpty = array.length > 0;\n        const result = pop.apply(array, args);\n        if (notEmpty) {\n            observer.addSplice(new Splice(array.length, [result], 0));\n        }\n        return result;\n    },\n    push(array, observer, push, args) {\n        const result = push.apply(array, args);\n        observer.addSplice(new Splice(array.length - args.length, [], args.length).adjustTo(array));\n        return result;\n    },\n    reverse(array, observer, reverse, args) {\n        const result = reverse.apply(array, args);\n        observer.reset(array);\n        return result;\n    },\n    shift(array, observer, shift, args) {\n        const notEmpty = array.length > 0;\n        const result = shift.apply(array, args);\n        if (notEmpty) {\n            observer.addSplice(new Splice(0, [result], 0));\n        }\n        return result;\n    },\n    sort(array, observer, sort, args) {\n        const result = sort.apply(array, args);\n        observer.reset(array);\n        return result;\n    },\n    splice(array, observer, splice, args) {\n        const result = splice.apply(array, args);\n        observer.addSplice(new Splice(+args[0], result, args.length > 2 ? args.length - 2 : 0).adjustTo(array));\n        return result;\n    },\n    unshift(array, observer, unshift, args) {\n        const result = unshift.apply(array, args);\n        observer.addSplice(new Splice(0, [], args.length).adjustTo(array));\n        return result;\n    },\n});\n/**\n * Functionality related to tracking changes in arrays.\n * @public\n */\nexport const SpliceStrategy = Object.freeze({\n    /**\n     * A set of changes that represent a full array reset.\n     */\n    reset: resetSplices,\n    /**\n     * Sets the default strategy to use for array observers.\n     * @param strategy - The splice strategy to use.\n     */\n    setDefaultStrategy(strategy) {\n        defaultSpliceStrategy = strategy;\n    },\n});\nfunction setNonEnumerable(target, property, value) {\n    Reflect.defineProperty(target, property, {\n        value,\n        enumerable: false,\n    });\n}\nclass DefaultArrayObserver extends SubscriberSet {\n    constructor(subject) {\n        super(subject);\n        this.oldCollection = void 0;\n        this.splices = void 0;\n        this.needsQueue = true;\n        this._strategy = null;\n        this._lengthObserver = void 0;\n        this.call = this.flush;\n        setNonEnumerable(subject, \"$fastController\", this);\n    }\n    get strategy() {\n        return this._strategy;\n    }\n    set strategy(value) {\n        this._strategy = value;\n    }\n    get lengthObserver() {\n        let observer = this._lengthObserver;\n        if (observer === void 0) {\n            const array = this.subject;\n            this._lengthObserver = observer = {\n                length: array.length,\n                handleChange() {\n                    if (this.length !== array.length) {\n                        this.length = array.length;\n                        Observable.notify(observer, \"length\");\n                    }\n                },\n            };\n            this.subscribe(observer);\n        }\n        return observer;\n    }\n    subscribe(subscriber) {\n        this.flush();\n        super.subscribe(subscriber);\n    }\n    addSplice(splice) {\n        if (this.splices === void 0) {\n            this.splices = [splice];\n        }\n        else {\n            this.splices.push(splice);\n        }\n        this.enqueue();\n    }\n    reset(oldCollection) {\n        this.oldCollection = oldCollection;\n        this.enqueue();\n    }\n    flush() {\n        var _a;\n        const splices = this.splices;\n        const oldCollection = this.oldCollection;\n        if (splices === void 0 && oldCollection === void 0) {\n            return;\n        }\n        this.needsQueue = true;\n        this.splices = void 0;\n        this.oldCollection = void 0;\n        this.notify(((_a = this._strategy) !== null && _a !== void 0 ? _a : defaultSpliceStrategy).normalize(oldCollection, this.subject, splices));\n    }\n    enqueue() {\n        if (this.needsQueue) {\n            this.needsQueue = false;\n            Updates.enqueue(this);\n        }\n    }\n}\nlet enabled = false;\n/**\n * An observer for arrays.\n * @public\n */\nexport const ArrayObserver = Object.freeze({\n    /**\n     * Enables the array observation mechanism.\n     * @remarks\n     * Array observation is enabled automatically when using the\n     * {@link RepeatDirective}, so calling this API manually is\n     * not typically necessary.\n     */\n    enable() {\n        if (enabled) {\n            return;\n        }\n        enabled = true;\n        Observable.setArrayObserverFactory((collection) => new DefaultArrayObserver(collection));\n        const proto = Array.prototype;\n        if (!proto.$fastPatch) {\n            setNonEnumerable(proto, \"$fastPatch\", 1);\n            [\n                proto.pop,\n                proto.push,\n                proto.reverse,\n                proto.shift,\n                proto.sort,\n                proto.splice,\n                proto.unshift,\n            ].forEach(method => {\n                proto[method.name] = function (...args) {\n                    var _a;\n                    const o = this.$fastController;\n                    return o === void 0\n                        ? method.apply(this, args)\n                        : ((_a = o.strategy) !== null && _a !== void 0 ? _a : defaultSpliceStrategy)[method.name](this, o, method, args);\n                };\n            });\n        }\n    },\n});\n/**\n * Enables observing the length of an array.\n * @param array - The array to observe the length of.\n * @returns The length of the array.\n * @public\n */\nexport function lengthOf(array) {\n    if (!array) {\n        return 0;\n    }\n    let arrayObserver = array.$fastController;\n    if (arrayObserver === void 0) {\n        ArrayObserver.enable();\n        arrayObserver = Observable.getNotifier(array);\n    }\n    Observable.track(arrayObserver.lengthObserver, \"length\");\n    return array.length;\n}\n","import { isFunction } from \"../interfaces.js\";\nimport { Binding } from \"./binding.js\";\nimport { oneWay } from \"./one-way.js\";\nimport { oneTime } from \"./one-time.js\";\n/**\n * Normalizes the input value into a binding.\n * @param value - The value to create the default binding for.\n * @returns A binding configuration for the provided value.\n * @public\n */\nexport function normalizeBinding(value) {\n    return isFunction(value)\n        ? oneWay(value)\n        : value instanceof Binding\n            ? value\n            : oneTime(() => value);\n}\n","import { isString } from \"../interfaces.js\";\nimport { HTMLDirective } from \"./html-directive.js\";\nimport { NodeObservationDirective } from \"./node-observation.js\";\nconst slotEvent = \"slotchange\";\n/**\n * The runtime behavior for slotted node observation.\n * @public\n */\nexport class SlottedDirective extends NodeObservationDirective {\n    /**\n     * Begins observation of the nodes.\n     * @param target - The target to observe.\n     */\n    observe(target) {\n        target.addEventListener(slotEvent, this);\n    }\n    /**\n     * Disconnects observation of the nodes.\n     * @param target - The target to unobserve.\n     */\n    disconnect(target) {\n        target.removeEventListener(slotEvent, this);\n    }\n    /**\n     * Retrieves the raw nodes that should be assigned to the source property.\n     * @param target - The target to get the node to.\n     */\n    getNodes(target) {\n        return target.assignedNodes(this.options);\n    }\n    /** @internal */\n    handleEvent(event) {\n        const target = event.currentTarget;\n        this.updateTarget(this.getSource(target), this.computeNodes(target));\n    }\n}\nHTMLDirective.define(SlottedDirective);\n/**\n * A directive that observes the `assignedNodes()` of a slot and updates a property\n * whenever they change.\n * @param propertyOrOptions - The options used to configure slotted node observation.\n * @public\n */\nexport function slotted(propertyOrOptions) {\n    if (isString(propertyOrOptions)) {\n        propertyOrOptions = { property: propertyOrOptions };\n    }\n    return new SlottedDirective(propertyOrOptions);\n}\n","import { isFunction } from \"../interfaces.js\";\nconst noTemplate = () => null;\nfunction normalizeBinding(value) {\n    return value === undefined ? noTemplate : isFunction(value) ? value : () => value;\n}\n/**\n * A directive that enables basic conditional rendering in a template.\n * @param condition - The condition to test for rendering.\n * @param templateOrTemplateBinding - The template or a binding that gets\n * the template to render when the condition is true.\n * @param elseTemplateOrTemplateBinding - Optional template or binding that that\n * gets the template to render when the conditional is false.\n * @public\n */\nexport function when(condition, templateOrTemplateBinding, elseTemplateOrTemplateBinding) {\n    const dataBinding = isFunction(condition) ? condition : () => condition;\n    const templateBinding = normalizeBinding(templateOrTemplateBinding);\n    const elseBinding = normalizeBinding(elseTemplateOrTemplateBinding);\n    return (source, context) => dataBinding(source, context)\n        ? templateBinding(source, context)\n        : elseBinding(source, context);\n}\n","import {Observable as $hgUW1$Observable} from \"@microsoft/fast-element\";\n\n\nclass $e23529bbb092cbf2$export$7254cc27399e90bd {\n    constructor(value = null){\n        /** \n     * Propriété privée pour stocker l'historique des valeurs d'état, limitée aux 10 dernières entrées.\n    */ this._history = [];\n        /** \n     * Propriété privée pour stocker la valeur actuelle de l'état, initialisée à `null`.\n    */ this._value = null;\n        /** \n     * Propriété privée pour notifier les observateurs des changements d'état, initialisée avec `Observable.getNotifier`.\n    */ this._notifier = (0, $hgUW1$Observable).getNotifier(this);\n        this._value = value;\n    }\n    /** \n   * Getter pour la valeur actuelle de l'état. Utilise `Observable.track` pour suivre les changements.\n  */ get value() {\n        (0, $hgUW1$Observable).track(this, \"value\");\n        return this._value;\n    }\n    /**\n   * Setter pour mettre à jour la valeur de l'état. Ajoute la valeur actuelle à l'historique et notifie\n   * les observateurs du changement.\n   * @param {T} value - Nouvelle valeur de l'état.\n  */ set value(value) {\n        this._value = value;\n        this._history = [\n            this._value,\n            ...this._history.reverse()\n        ].reduce((results, value)=>{\n            if (results.length > 10) results.push(value);\n            return results;\n        }, []).reverse();\n        (0, $hgUW1$Observable).notify(this, \"value\");\n    }\n    /**\n   * Méthode statique pour initialiser un nouvel objet `State` avec une valeur initiale facultative.\n   * @param {T} [value=null] - Valeur initiale de l'état.\n   * @returns Une nouvelle instance de `State` avec la valeur spécifiée.\n  */ static init(value = null) {\n        return new $e23529bbb092cbf2$export$7254cc27399e90bd(value);\n    }\n    /**\n   * Renvoie un tableau avec l'état actuel et une fonction pour mettre à jour l'état.\n   * @returns Un tableau contenant l'état actuel et une fonction de mise à jour.\n  */ get mutator() {\n        return [\n            this,\n            (value)=>{\n                this.value = value;\n            }\n        ];\n    }\n    /** \n   * Abonne une fonction de rappel qui sera appelée à chaque changement de valeur de l'état.\n   * @param {function} callback - Fonction à appeler lors d'un changement de valeur.\n  */ subscribe(callback) {\n        this._notifier.subscribe({\n            handleChange: (state, key)=>{\n                callback(state[key]);\n            }\n        });\n    }\n    /**\n   * Convertit l'état en une valeur primitive pour les objets, ou en Proxy pour les objets complexes.\n   * @returns La valeur primitive ou un Proxy pour les objets complexes.\n  */ [Symbol.toPrimitive]() {\n        return typeof this.value != \"object\" ? this.value : new Proxy(this.value, {\n            get (target, key) {\n                return target[key] ? target[key] : undefined;\n            }\n        });\n    }\n}\n\n\n\nfunction $75bc972ccc621f94$export$e6a0daad8304de(value = null) {\n    return (0, $e23529bbb092cbf2$export$7254cc27399e90bd).init(value).mutator;\n}\n\n\n\n\nexport {$e23529bbb092cbf2$export$7254cc27399e90bd as State, $75bc972ccc621f94$export$e6a0daad8304de as createState};\n//# sourceMappingURL=module.js.map\n","export { State } from './models/state.js';\nexport { createState } from './createState.js';","import { Notifier, Observable } from \"@microsoft/fast-element\";\n\n/** \n * La classe `State` gère et suit les valeurs d'état avec des capacités d'historique et d'abonnement.\n */\nexport class State<T = any>{\n\n  /** \n   * Propriété privée pour stocker l'historique des valeurs d'état, limitée aux 10 dernières entrées.\n  */\n  private _history : T[] = [];\n\n  /** \n   * Propriété privée pour stocker la valeur actuelle de l'état, initialisée à `null`.\n  */\n  private _value:T = null;\n\n  /** \n   * Propriété privée pour notifier les observateurs des changements d'état, initialisée avec `Observable.getNotifier`.\n  */\n  private _notifier:Notifier = Observable.getNotifier( this );\n\n  constructor( value = null ){\n    this._value = value;\n  }\n\n\n  /** \n   * Getter pour la valeur actuelle de l'état. Utilise `Observable.track` pour suivre les changements.\n  */\n  get value() {\n    Observable.track(this, 'value');\n    return this._value;\n  };\n\n  /**\n   * Setter pour mettre à jour la valeur de l'état. Ajoute la valeur actuelle à l'historique et notifie\n   * les observateurs du changement.\n   * @param {T} value - Nouvelle valeur de l'état.\n  */\n  set value(value: T) {\n    this._value = value;\n\n    this._history = [ this._value , ...this._history.reverse() ].reduce(( results , value ) => {\n      if(results.length > 10){\n        results.push( value );\n      };\n      return results;\n    } , []).reverse();\n\n    Observable.notify(this, 'value');\n  }\n\n  /**\n   * Méthode statique pour initialiser un nouvel objet `State` avec une valeur initiale facultative.\n   * @param {T} [value=null] - Valeur initiale de l'état.\n   * @returns Une nouvelle instance de `State` avec la valeur spécifiée.\n  */\n  static init<T = any>( value : T = null ){\n    return new State<T>( value );\n  }\n\n  /**\n   * Renvoie un tableau avec l'état actuel et une fonction pour mettre à jour l'état.\n   * @returns Un tableau contenant l'état actuel et une fonction de mise à jour.\n  */\n  get mutator():[ State<T> & T , ( newValue:T ) => void ]{\n    return [ this as any , ( value:T ) => {\n      this.value = value;\n    } ]\n  }\n\n  /** \n   * Abonne une fonction de rappel qui sera appelée à chaque changement de valeur de l'état.\n   * @param {function} callback - Fonction à appeler lors d'un changement de valeur.\n  */\n  subscribe( callback:(newValue: any) => void ){\n    this._notifier.subscribe( { handleChange : ( state , key ) => {\n      callback( state[key] );\n    } } );\n  };\n\n  /**\n   * Convertit l'état en une valeur primitive pour les objets, ou en Proxy pour les objets complexes.\n   * @returns La valeur primitive ou un Proxy pour les objets complexes.\n  */\n  [Symbol.toPrimitive](){\n    return typeof this.value != \"object\" ? this.value : new Proxy( this.value , {\n      get( target , key ){\n        return target[key] ? target[key] : undefined;\n      }\n    } )\n  }\n\n}","import { State } from \"./models/state.js\";\n\n/**\n * La fonction createState crée un état avec une valeur initiale et renvoie son mutateur.\n * @param {T} [value=null] - Le paramètre `value` dans la fonction `createState` est la valeur initiale\n * que vous souhaitez définir pour l'état. Il est facultatif et la valeur par défaut est « null » si\n * aucune valeur n'est fournie lors de l'appel de la fonction.\n * @returns La fonction `createState` renvoie la fonction `mutator` à partir de l'objet `State`\n * initialisé avec la `valeur` fournie.\n * ## Exemple \n * ```typescript\n * let [ counter , setCounter ] = createState<number>(0);\n * \n * counter.subscribe(( newValue ) => {\n *  \n *  console.log({newValue})\n * \n * })\n * ```\n */\nexport function createState< T = any >( value:T = null ):State< T >[\"mutator\"]{\n\n  return State.init( value ).mutator;\n\n}","import {createState as $hgUW1$createState} from \"@lithium-framework/state\";\n\n\nclass $89fec59bbef2bb37$export$98c71376181af907 extends Map {\n    /**\n   * Initialise une nouvelle instance de la classe `_storage` avec des enregistrements initiaux facultatifs et un validateur optionnel.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   * @returns {Storage<RECORD>} Une nouvelle instance de la classe `_storage` initialisée avec les enregistrements et le validateur fournis.\n   * @example\n   * ```typescript\n   * const records = { count: 0, name: \"John\" };\n   * const storage = _storage.init(records);\n   * ```\n   */ static init(records, validator) {\n        return new $89fec59bbef2bb37$export$98c71376181af907(records, validator);\n    }\n    /**\n   * Constructeur qui initialise la classe `_storage` avec des enregistrements optionnels et un validateur.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   */ constructor(records, validator){\n        super();\n        this._validator = null;\n        if (validator) this._validator = validator;\n        // Si des enregistrements sont fournis, les ajouter au _storage\n        if (records) Object.keys(records).forEach((key)=>{\n            this.set(key, (0, $hgUW1$createState)(records[key]));\n        });\n    }\n    /**\n   * Récupère la valeur du stockage en fonction d'une clé spécifiée.\n   * Si un validateur est défini, il valide la nouvelle valeur avant de l'appliquer.\n   * @template T - Le type de la valeur de l'état.\n   * @param {StorageKeys<RECORD>} key - La clé utilisée pour accéder à un enregistrement spécifique en stockage.\n   * @returns {State<T>[\"mutator\"]} La fonction `mutator` associée à la clé spécifiée de l'objet `State`.\n   * @example\n   * ```typescript\n   * const storage = _storage.init({ count: 0 });\n   * const [count, setCount] = storage.get(\"count\");\n   * setCount(10); // met à jour la valeur si la validation réussit\n   * ```\n   */ get(key) {\n        if (!this._validator) return super.get(key);\n        else {\n            let [state, setter] = super.get(key);\n            return [\n                state,\n                (newValue)=>{\n                    let previousValue = state.value;\n                    let result = this._validator(key, previousValue, newValue);\n                    if (result instanceof Promise) result.then(()=>setter(newValue)).catch((error)=>console.error(error));\n                    else if (result == true) setter(newValue);\n                }\n            ];\n        }\n    }\n}\n\n\nfunction $0718d8712747089f$export$d184a47a971dd4b9(records = {}, stateValidator) {\n    // Création d'un proxy contenant le stockage\n    return new Proxy((0, $89fec59bbef2bb37$export$98c71376181af907).init(records, stateValidator), {\n        /**\n     * Intercepte les opérations d'accès aux propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état ou de la méthode accédée.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {any} La méthode ou la valeur de l'état correspondant à la clé.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * console.log(storage.count[0].value); // affiche 0\n     * storage.count ; // met à jour la valeur de count à 5\n     * ```\n    */ get (target, key, receiver) {\n            // Retourne les méthodes du stockage\n            if (target[key]) {\n                if (typeof target[key] == \"function\") return target[key].bind(target);\n                else return target[key];\n            } else if (target.has(key)) return target.get(key);\n            else return undefined;\n        },\n        /**\n     * Intercepte les opérations de mise à jour des propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état à mettre à jour.\n     * @param {any} newValue - La nouvelle valeur à assigner à l'état.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {boolean} Un indicateur de succès de la mise à jour.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * storage.count ; // met à jour la valeur de count à 5\n     * console.log(storage.count[0].value); // affiche 5\n     * ```\n    */ set (target, key, newValue, receiver) {\n            if (target.has(key)) {\n                // Mise à jour du state contenant la valeur\n                target.get(key)[1](newValue);\n                return true;\n            } else return undefined;\n        }\n    });\n}\n\n\n\n\nexport {$0718d8712747089f$export$d184a47a971dd4b9 as createStorage};\n//# sourceMappingURL=module.js.map\n","export { createStorage } from './create-storage.js';\nexport type { Storage , StorageKeys , StorageValues , StateValidator } from './models/storage.js'","import { _storage, Storage, StateValidator } from './models/storage.js';\n\n/**\n * La fonction `createStorage` crée un objet proxy pour gérer le stockage avec des méthodes d'accès et de mise à jour des données.\n * @template RECORD - Le type de l'enregistrement de stockage.\n * @param {Partial<RECORD>} [records={}] - Un objet partiel de type `RECORD`, contenant des données initiales pour le stockage. \n * @param {StateValidator} [stateValidator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n * @returns {Storage<RECORD>} Un objet Proxy qui entoure l'objet de stockage créé en appelant `_storage.init` avec les enregistrements fournis.\n * @example\n * ```typescript\n * const initialData = { counter: 0, name: \"Alice\" };\n * const validator: StateValidator<number> = (key, previousValue, newValue) => newValue >= 0;\n * const storage = createStorage(initialData, validator);\n * \n * let [ counter , setCounter ] = storage.get('counter');\n * setCounter( 10 ); // met à jour la valeur si la validation réussit\n * console.log(+counter); // affiche 10\n * ```\n */\nexport function createStorage<RECORD extends Record<string, any>>(records: Partial<RECORD> = {}, stateValidator?: StateValidator): Storage<RECORD> {\n\n  // Création d'un proxy contenant le stockage\n  return new Proxy(_storage.init<RECORD>(records as RECORD, stateValidator), {\n\n    /**\n     * Intercepte les opérations d'accès aux propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état ou de la méthode accédée.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {any} La méthode ou la valeur de l'état correspondant à la clé.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * console.log(storage.count[0].value); // affiche 0\n     * storage.count ; // met à jour la valeur de count à 5\n     * ```\n    */\n    get(target, key: string & any, receiver) {\n      // Retourne les méthodes du stockage\n      if (target[key]) {\n        if (typeof target[key] == \"function\") return (target[key] as any).bind(target);\n        // Retourne les variables du stockage\n        else return target[key];\n      }\n      // Si la clé n'est pas dans le stockage\n      // Vérification de la présence de la clé dans le map du stockage\n      // Si présence de celle-ci, elle est retournée\n      else if (target.has(key)) return target.get(key);\n      // Sinon la clé n'existe pas et retourne undefined\n      else return undefined;\n    },\n\n    /**\n     * Intercepte les opérations de mise à jour des propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état à mettre à jour.\n     * @param {any} newValue - La nouvelle valeur à assigner à l'état.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {boolean} Un indicateur de succès de la mise à jour.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * storage.count ; // met à jour la valeur de count à 5\n     * console.log(storage.count[0].value); // affiche 5\n     * ```\n    */\n    set(target, key: string & any, newValue, receiver) {\n      if (target.has(key)) {\n        // Mise à jour du state contenant la valeur\n        target.get(key)[1](newValue);\n        return true;\n      }\n      // Sinon return undefined\n      else return undefined;\n    }\n  }) as any;\n\n}\n","import { State, createState } from '@lithium-framework/state';\n\n/**\n * Représente la fonction appelée lors du changement d'un état.\n * Cette fonction permet de valider la nouvelle valeur avant de l'appliquer à l'état.\n * La nouvelle valeur est stockée dans le state correspondant en fonction du succès ou de l'échec de l'opération.\n *\n * @template T - Le type de la valeur de l'état.\n * @param {string} key - La clé de l'état en cours de modification.\n * @param {T} previousValue - La valeur précédente de l'état avant la modification.\n * @param {T} newValue - La nouvelle valeur proposée pour l'état.\n * @returns {Promise<any> | boolean} - Une promesse ou une valeur booléenne indiquant le succès ou l'échec de la modification.\n * @example\n * ```typescript\n * const validator: StateValidator<number> = (key, previousValue, newValue) => {\n *   if (newValue >= 0) return true;\n *   return false;\n * };\n * ```\n */\nexport type StateValidator<T = any> = (key: string, previousValue: T, newValue: T) => Promise<any> | boolean;\n\n/** \n * Type représentant les clés des valeurs d'un enregistrement.\n * @template RECORD - Le type de l'enregistrement.\n */\nexport type StorageKeys<RECORD> = keyof RECORD;\n\n/** \n * Type représentant les mutateurs des valeurs d'un enregistrement.\n * @template RECORD - Le type de l'enregistrement.\n */\nexport type StorageValues<RECORD> = State<RECORD[StorageKeys<RECORD>]>[\"mutator\"];\n\n/** \n * La classe `_storage` étend `Map` pour stocker les valeurs d'état et fournit des méthodes\n * d'initialisation et d'accès aux mutateurs par clé.\n * @template RECORD - Le type de l'enregistrement stocké.\n */\nexport class _storage<RECORD extends Record<string, any>> extends Map<StorageKeys<RECORD>, StorageValues<RECORD>> {\n\n  private _validator: StateValidator = null;\n\n  /**\n   * Initialise une nouvelle instance de la classe `_storage` avec des enregistrements initiaux facultatifs et un validateur optionnel.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   * @returns {Storage<RECORD>} Une nouvelle instance de la classe `_storage` initialisée avec les enregistrements et le validateur fournis.\n   * @example\n   * ```typescript\n   * const records = { count: 0, name: \"John\" };\n   * const storage = _storage.init(records);\n   * ```\n   */\n  static init<RECORD extends Record<string, any>>(records?: RECORD, validator?: StateValidator): Storage<RECORD> {\n    return new _storage<RECORD>(records, validator) as Storage<RECORD>;\n  }\n\n  /**\n   * Constructeur qui initialise la classe `_storage` avec des enregistrements optionnels et un validateur.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   */\n  constructor(records?: RECORD, validator?: StateValidator) {\n    super();\n\n    if (validator) this._validator = validator;\n\n    // Si des enregistrements sont fournis, les ajouter au _storage\n    if (records) {\n      Object.keys(records).forEach((key) => {\n        this.set(key, createState(records[key]));\n      });\n    }\n  }\n\n  /**\n   * Récupère la valeur du stockage en fonction d'une clé spécifiée.\n   * Si un validateur est défini, il valide la nouvelle valeur avant de l'appliquer.\n   * @template T - Le type de la valeur de l'état.\n   * @param {StorageKeys<RECORD>} key - La clé utilisée pour accéder à un enregistrement spécifique en stockage.\n   * @returns {State<T>[\"mutator\"]} La fonction `mutator` associée à la clé spécifiée de l'objet `State`.\n   * @example\n   * ```typescript\n   * const storage = _storage.init({ count: 0 });\n   * const [count, setCount] = storage.get(\"count\");\n   * setCount(10); // met à jour la valeur si la validation réussit\n   * ```\n   */\n  get<T = any>(key: StorageKeys<RECORD>): State<T>[\"mutator\"] {\n    if (!this._validator) return super.get(key)!;\n\n    else {\n      let [state, setter] = super.get(key)!;\n      return [state, (newValue: T) => {\n        let previousValue = state.value;\n        let result = this._validator(key as string, previousValue, newValue);\n\n        if (result instanceof Promise) {\n          result\n            .then(() => setter(newValue as any))\n            .catch((error) => console.error(error));\n        } else if (result == true) {\n          setter(newValue as any);\n        }\n      }];\n    }\n  }\n}\n\n/** \n * Type `Storage` qui étend partiellement `_storage`.\n * @template RECORD - Le type de l'enregistrement.\n */\nexport type Storage<RECORD extends Record<string, any>> = _storage<RECORD> & { [key in StorageKeys<RECORD>]: StorageValues<RECORD> };\n","import $hgUW1$getrandomvalues from \"get-random-values\";\n\n// ===============================================\n// https://www.npmjs.com/package/get-random-values\n// ===============================================\n\nclass $149c1bd638913645$export$74e446f6456d826d extends String {\n    /**\n   * Obtient l'identifiant de composant en extrayant la première partie de l'UUID.\n   * @returns L'identifiant de composant.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.componentId); // '123456789012'\n   * ```\n  */ get componentId() {\n        return this.split(\"-\")[0];\n    }\n    /**\n   * Obtient la première section de l'UUID après division par '-'.\n   * @returns La première section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section1); // '1234'\n   * ```\n  */ get section1() {\n        return this.split(\"-\")[1];\n    }\n    /**\n   * Obtient la deuxième section de l'UUID après division par '-'.\n   * @returns La deuxième section de l'UUID.\n   * @example\n   * ```typescipt\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section2); // '5678'\n   * ```\n  */ get section2() {\n        return this.split(\"-\")[2];\n    }\n    /**\n   * Obtient la troisième section de l'UUID après division par '-'.\n   * @returns La troisième section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section3); // '90ab'\n   * ```\n  */ get section3() {\n        return this.split(\"-\")[3];\n    }\n    /**\n   * Obtient l'identifiant de collection en extrayant la cinquième partie de l'UUID.\n   * @returns L'identifiant de collection.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.collectionId); // 'abcdefabcdef'\n   * ```\n  */ get collectionId() {\n        return this.split(\"-\")[4];\n    }\n    /**\n   * Obtient l'identifiant parent en concaténant les sections 1, 2 et 3.\n   * @returns L'identifiant parent.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.parentId); // '1234567890ab'\n   * ```\n  */ get parentId() {\n        return [\n            this.section1,\n            this.section2,\n            this.section3\n        ].join(\"\");\n    }\n    /**\n   * Étend l'UUID hiérarchique avec des options personnalisées.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  const extendedUUID = uuid.extend({ parentId: '098765432109', collectionId: 'abcdefabcdef' });\n   *  console.log(extendedUUID); // Un nouvel _HUID avec les sections mises à jour.\n   * ```\n  */ extend(options) {\n        return $149c1bd638913645$export$31b40729666a4ae0.hv1({\n            parentId: this.componentId,\n            collectionId: this.collectionId\n        });\n    }\n}\nclass $149c1bd638913645$export$31b40729666a4ae0 {\n    /**\n   * Obtient une valeur par défaut pour l'identifiant de composant.\n   * @returns '000000000000' en tant que ComponentId.\n  */ static get componentId() {\n        return \"000000000000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la première section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment1() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la deuxième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment2() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la troisième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment3() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour l'identifiant de collection.\n   * @returns '000000000000' en tant que CollectionId.\n  */ static get collectionId() {\n        return \"000000000000\";\n    }\n    /**\n   * Obtient un UUID NIL (null) par défaut.\n   * @returns L'UUID NIL sous forme de chaîne.\n  */ static get NIL() {\n        return new $149c1bd638913645$export$74e446f6456d826d(`${$149c1bd638913645$export$31b40729666a4ae0.componentId}-${$149c1bd638913645$export$31b40729666a4ae0.segment1}-${$149c1bd638913645$export$31b40729666a4ae0.segment2}-${$149c1bd638913645$export$31b40729666a4ae0.segment3}-${$149c1bd638913645$export$31b40729666a4ae0.collectionId}`);\n    }\n    /**\n   * Encode une chaîne de longueur fixe en remplaçant certains caractères par des valeurs hexadécimales aléatoires.\n   * @param chaine - Une chaîne de longueur fixe.\n   * @returns Une chaîne de longueur fixe avec des valeurs hexadécimales aléatoires.\n   * @example\n   * ```typescript\n   *  const encoded = uuid.encode('123456789012');\n   *  console.log(encoded); // '1a2b3c4d5e6f'\n   * ```\n  */ static encode(chaine) {\n        return chaine.replace(/[018]/g, (c)=>{\n            return (c ^ (0, $hgUW1$getrandomvalues)(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n        });\n    }\n    /**\n   * Génère un UUID de version 4 en utilisant des valeurs aléatoires.\n   * @returns Un UUID de version 4 sous forme de chaîne.\n   * @example\n   * ```typescript\n   *  const uuidV4 = uuid.v4();\n   *  console.log(uuidV4); // Un UUID de version 4.\n   * ```\n  */ static v4() {\n        return $149c1bd638913645$export$31b40729666a4ae0.NIL.replace(/[018]/g, (c)=>{\n            return (c ^ (0, $hgUW1$getrandomvalues)(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n        });\n    }\n    /**\n   * Génère un UUID hiérarchique en fonction des options fournies.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const hierarchicalUUID = uuid.hv1({ parentId: '123456789012', collectionId: 'abcdefabcdef' });\n   *  console.log(hierarchicalUUID); // Un nouvel UUID hiérarchique (_HUID).\n   * ```\n  */ static hv1(options) {\n        if (!options) options = {\n            parentId: null,\n            collectionId: null\n        };\n        let componentId = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.componentId);\n        let segment1 = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.segment1);\n        let segment2 = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.segment2);\n        let segment3 = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.segment3);\n        let collectionId = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.collectionId);\n        if (options.parentId && options.parentId.length == 12) {\n            segment1 = options.parentId.slice(0, 4);\n            segment2 = options.parentId.slice(4, 8);\n            segment3 = options.parentId.slice(8, 12);\n        } else console.error(\"parentId.length exeded 12 char length.\");\n        if (options.collectionId) collectionId = options.collectionId;\n        return new $149c1bd638913645$export$74e446f6456d826d(`${componentId}-${segment1}-${segment2}-${segment3}-${collectionId}`);\n    }\n}\n\n\nexport {$149c1bd638913645$export$74e446f6456d826d as _HUID, $149c1bd638913645$export$31b40729666a4ae0 as uuid};\n//# sourceMappingURL=module.js.map\n","// ===============================================\n// https://www.npmjs.com/package/get-random-values\n// ===============================================\nimport { default as getRandomValues } from 'get-random-values';\n\nexport type FixedLengthString<Length extends number> = string & { __fixedLength: Length };\nexport type ComponentId = FixedLengthString<12>;\nexport type Segment = FixedLengthString<4>;\nexport type ParentSegementId = `${Segment}-${Segment}-${Segment}`;\nexport type CollectionId = FixedLengthString<12>;\nexport type HUID = `${ComponentId}-${ParentSegementId}-${CollectionId}`;\n\n/** \n * Interface pour les options de l'UUID hiérarchique.\n */\nexport interface HierarchicalUUIDOptions {\n  /** \n   * Identifiant parent (optionnel). \n   */\n  parentId?: FixedLengthString<12>;\n\n  /**\n   * Identifiant de collection (optionnel).\n   */\n  collectionId?: FixedLengthString<12>;\n}\n\n/** \n * Classe _HUID pour manipuler les UUID hiérarchiques.\n*/\nexport class _HUID extends String{\n\n  /**\n   * Obtient l'identifiant de composant en extrayant la première partie de l'UUID.\n   * @returns L'identifiant de composant.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.componentId); // '123456789012'\n   * ```\n  */\n  get componentId(){ return this.split('-')[0] as ComponentId; }\n\n  /**\n   * Obtient la première section de l'UUID après division par '-'.\n   * @returns La première section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section1); // '1234'\n   * ```\n  */\n  get section1(){ return this.split('-')[1] as Segment; }\n\n  /**\n   * Obtient la deuxième section de l'UUID après division par '-'.\n   * @returns La deuxième section de l'UUID.\n   * @example\n   * ```typescipt\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section2); // '5678'\n   * ```\n  */\n  get section2(){ return this.split('-')[2] as Segment; }\n\n  /**\n   * Obtient la troisième section de l'UUID après division par '-'.\n   * @returns La troisième section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section3); // '90ab'\n   * ```\n  */\n  get section3(){ return this.split('-')[3] as Segment; }\n\n  /**\n   * Obtient l'identifiant de collection en extrayant la cinquième partie de l'UUID.\n   * @returns L'identifiant de collection.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.collectionId); // 'abcdefabcdef'\n   * ```\n  */\n  get collectionId(){ return this.split('-')[4] as CollectionId; }\n\n  /**\n   * Obtient l'identifiant parent en concaténant les sections 1, 2 et 3.\n   * @returns L'identifiant parent.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.parentId); // '1234567890ab'\n   * ```\n  */\n  get parentId(){ return [this.section1,this.section2,this.section3].join('') as FixedLengthString<12>; }\n\n  /**\n   * Étend l'UUID hiérarchique avec des options personnalisées.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  const extendedUUID = uuid.extend({ parentId: '098765432109', collectionId: 'abcdefabcdef' });\n   *  console.log(extendedUUID); // Un nouvel _HUID avec les sections mises à jour.\n   * ```\n  */\n  extend(options?:HierarchicalUUIDOptions){\n\n    return uuid.hv1({\n      parentId : this.componentId,\n      collectionId : this.collectionId,\n    })\n\n  }\n\n}\n\n/** \n * Classe pour générer des UUID.\n*/\nexport class uuid{\n\n  /**\n   * Obtient une valeur par défaut pour l'identifiant de composant.\n   * @returns '000000000000' en tant que ComponentId.\n  */\n  static get componentId(){ return '000000000000' as ComponentId; }\n\n  /**\n   * Obtient une valeur par défaut pour la première section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment1(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour la deuxième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment2(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour la troisième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment3(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour l'identifiant de collection.\n   * @returns '000000000000' en tant que CollectionId.\n  */\n  static get collectionId(){ return '000000000000' as CollectionId; }\n\n  /**\n   * Obtient un UUID NIL (null) par défaut.\n   * @returns L'UUID NIL sous forme de chaîne.\n  */\n  static get NIL(){ return new _HUID(`${uuid.componentId}-${uuid.segment1}-${uuid.segment2}-${uuid.segment3}-${uuid.collectionId}`); }\n\n  /**\n   * Encode une chaîne de longueur fixe en remplaçant certains caractères par des valeurs hexadécimales aléatoires.\n   * @param chaine - Une chaîne de longueur fixe.\n   * @returns Une chaîne de longueur fixe avec des valeurs hexadécimales aléatoires.\n   * @example\n   * ```typescript\n   *  const encoded = uuid.encode('123456789012');\n   *  console.log(encoded); // '1a2b3c4d5e6f'\n   * ```\n  */\n  static encode< N extends number = 4 | 12 >( chaine:FixedLengthString<N> ){\n    return chaine.replace(/[018]/g, (c:any) =>\n    {\n      return (c ^ getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    }) as FixedLengthString<N> | FixedLengthString<N>\n  }\n\n  /**\n   * Génère un UUID de version 4 en utilisant des valeurs aléatoires.\n   * @returns Un UUID de version 4 sous forme de chaîne.\n   * @example\n   * ```typescript\n   *  const uuidV4 = uuid.v4();\n   *  console.log(uuidV4); // Un UUID de version 4.\n   * ```\n  */\n  static v4(  ) {\n\n    return uuid.NIL.replace(/[018]/g, (c:any) =>\n      {\n        return (c ^ getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n      }\n    ) as `${string}-${string}-${string}-${string}-${string}`;\n\n  }\n\n  /**\n   * Génère un UUID hiérarchique en fonction des options fournies.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const hierarchicalUUID = uuid.hv1({ parentId: '123456789012', collectionId: 'abcdefabcdef' });\n   *  console.log(hierarchicalUUID); // Un nouvel UUID hiérarchique (_HUID).\n   * ```\n  */\n  static hv1( options?:HierarchicalUUIDOptions ) {\n\n    if(!options)options = {\n      parentId : null,\n      collectionId : null\n    };\n\n    let componentId = uuid.encode( uuid.componentId );\n    let segment1 = uuid.encode( uuid.segment1 );\n    let segment2 = uuid.encode( uuid.segment2 );\n    let segment3 = uuid.encode( uuid.segment3 );\n    let collectionId = uuid.encode( uuid.collectionId );\n\n    if(options.parentId && options.parentId.length == 12){\n      segment1 = options.parentId.slice(0,4) as FixedLengthString<4>;\n      segment2 = options.parentId.slice(4,8) as FixedLengthString<4>;\n      segment3 = options.parentId.slice(8,12) as FixedLengthString<4>;\n    }\n    else console.error( 'parentId.length exeded 12 char length.' )\n\n    if(options.collectionId)collectionId = options.collectionId;\n\n    return new _HUID(`${ componentId }-${ segment1 }-${ segment2 }-${ segment3 }-${ collectionId }`);\n\n  }\n\n}","/* eslint-disable no-var, operator-linebreak */\n\nvar window = require('global/window');\nvar nodeCrypto = require('crypto');\n\n/**\n * @template {ArrayBufferView | null} T\n * @param {T} buf\n * @returns {T}\n */\nfunction getRandomValues(buf) {\n  if (window.crypto && window.crypto.getRandomValues) {\n    return window.crypto.getRandomValues(buf);\n  }\n  if (typeof window.msCrypto === 'object' && typeof window.msCrypto.getRandomValues === 'function') {\n    return window.msCrypto.getRandomValues(buf);\n  }\n  if (nodeCrypto.randomBytes) {\n    if (!(buf instanceof Uint8Array)) {\n      throw new TypeError('expected Uint8Array');\n    }\n    if (buf.length > 65536) {\n      var e = new Error();\n      // @ts-expect-error\n      e.code = 22;\n      e.message = 'Failed to execute \\'getRandomValues\\' on \\'Crypto\\': The ' +\n        'ArrayBufferView\\'s byte length (' + buf.length + ') exceeds the ' +\n        'number of bytes of entropy available via this API (65536).';\n      e.name = 'QuotaExceededError';\n      throw e;\n    }\n    var bytes = nodeCrypto.randomBytes(buf.length);\n    buf.set(bytes);\n    return buf;\n  }\n  else {\n    throw new Error('No secure random number generator available.');\n  }\n}\n\nmodule.exports = getRandomValues;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","import { PfWebComponent } from \"../models/PfWebComponent\";\r\n\r\nexport function HandleBooleanAttribute( this : PfWebComponent , name : string , newValue : string| null ):boolean{\r\n\r\n  if( !this.attributes[name as unknown as number] )return false;\r\n  else if(!newValue|| newValue != \"false\")return true;\r\n  else return false;\r\n\r\n}","import { PfWebComponent } from \"../models/PfWebComponent\";\r\n\r\nexport function cretateOnSlotChangeHandler( this : PfWebComponent , slotName: null | string = null , callback?:( node : HTMLElement | null ) => void ){\r\n\r\n  return ( target:PfWebComponent ) => {\r\n    let childrens = target.childNodes;\r\n\r\n    let [children] = [...(target.childNodes as unknown as HTMLElement[])].map(( element ) => {\r\n\r\n      if(element instanceof PfWebComponent == false)return null;\r\n\r\n      /// ## Aucun slot\r\n      if( !slotName && element?.getAttribute('slot') == null )return element;\r\n      /// ## Avec slot + correspondance\r\n      else if( slotName && element?.getAttribute('slot') == slotName )return element;\r\n      /// ### Sinon return null\r\n      else return null;\r\n    }).filter( x => x )\r\n\r\n    if( callback )callback( children );\r\n\r\n  }\r\n\r\n}"],"names":["$553e78d6498b7d22$var$kernelMode","$553e78d6498b7d22$export$f2080b9a9a32b8d3","$f4e8f5ffc787333e$var$DefaultStyleStrategy","$b0fa72c1c098d988$var$elementControllerStrategy","$2fd506a82ad7eba4$var$win","$parcel$global","globalThis","$parcel$interopDefault","a","__esModule","default","$parcel$modules","$parcel$inits","parcelRequire","$5c96a02c592fcff1$export$29e00dfd3077644b","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","id","exports","init","module","call","err","Error","code","register","SuppressedError","$1BF7I","$553e78d6498b7d22$var$kernelAttr","document","currentScript","getAttribute","scripts","getElementsByTagName","e","freeze","updateQueue","observable","contextEvent","elementRegistry","postfix","Math","random","toString","substring","$553e78d6498b7d22$export$f6e2535fb5126e54","object","$553e78d6498b7d22$export$844ec244b1367d54","$553e78d6498b7d22$export$8793edee2d425525","self","window","result","Function","$e1d30cf6f8cb997c$var$propConfig","configurable","enumerable","writable","FAST","assign","value","create","$e1d30cf6f8cb997c$export$360e186c37756536","getById","storage","initialize","found","error","warn","addMessages","$e1d30cf6f8cb997c$export$d3ae4127996a91af","$e1d30cf6f8cb997c$export$a31396a98752ddb5","typeToDefinition","Map","definition","has","type","set","getByType","get","getForInstance","constructor","$e1d30cf6f8cb997c$export$df500aa24c905daf","metadataLookup","WeakMap","metadata","currentTarget","getPrototypeOf","slice","$e1d30cf6f8cb997c$export$997c5e5ecebc1b61","prototype","toJSON","$73a7523c4c03f465$export$26ef613a0934aa5f","tasks","pendingErrors","rAF","requestAnimationFrame","updateAsync","throwFirstError","shift","process","index","tryRunTask","task","push","setTimeout","scan","newLength","enqueue","callable","next","Promise","setMode","isAsync","$0f21edcca411263f$export$f35d03caf9a2ecdf","subject","initialSubscriber","sub1","sub2","spillover","subscriber","indexOf","subscribe","unsubscribe","splice","notify","args","handleChange","ii","$0f21edcca411263f$export$af6e57f0938b1389","subscribers","subjectSubscribers","propertyName","_a","_b","propertyToWatch","propertyToUnwatch","$536bd8e250404810$export$9a9eae009eb8780f","unknown","coupled","$536bd8e250404810$export$77cea355fa80b5f4","watcher","queueUpdate","volatileRegex","notifierLookup","createArrayObserver","array","getNotifier","source","$fastController","Array","isArray","getAccessors","DefaultObservableAccessor","name","field","callback","getValue","watch","setValue","newValue","oldValue","ExpressionNotifierImplementation","expression","isVolatileBinding","needsRefresh","needsQueue","first","last","propertySource","notifier","bind","controller","observe","context","isBound","requiresUnbind","onUnbind","sourceLifetime","unbind","dispose","previousWatcher","disconnect","current","prev","prevValue","records","setArrayObserverFactory","factory","track","trackVolatile","nameOrAccessor","binding","test","$536bd8e250404810$export$e338fff42eed603a","descriptor","apply","$536bd8e250404810$var$contextEvent","event","$536bd8e250404810$export$f7c638676c8af91d","getEvent","eventDetail","detail","eventTarget","setEvent","$71bae6719b9971f3$export$b0076a1a9e24da9","none","attribute","booleanAttribute","property","content","tokenList","$71bae6719b9971f3$var$createHTML","html","$71bae6719b9971f3$var$fastTrustedType","trustedTypes","createPolicy","createHTML","$71bae6719b9971f3$var$defaultPolicy","protect","tagName","aspect","aspectName","sink","$71bae6719b9971f3$var$fastPolicy","$71bae6719b9971f3$export$cb0933279c36a66b","policy","setPolicy","setAttribute","element","attributeName","removeAttribute","setBooleanAttribute","$b70b8231869890d4$var$booleanMode","$b70b8231869890d4$var$reflectMode","$b70b8231869890d4$export$8b80b92e472f3c0a","locate","$b70b8231869890d4$export$2aee1c8d7bab360b","toView","fromView","$b70b8231869890d4$export$722ab06c0d846d74","Owner","toLowerCase","mode","converter","guards","Set","fieldName","callbackName","hasCallback","tryReflectToAttribute","onAttributeChangedCallback","add","delete","latestValue","collect","attributeLists","attributes","list","j","jj","config","$b70b8231869890d4$export$7aabe8b3a840d2fd","configOrTarget","prop","decorator","$target","$prop","$d4cc7f2a173492b7$export$f4f50f872cf9bd86","evaluate","isVolatile","$c8f825d8de076482$var$marker","$c8f825d8de076482$var$interpolationStart","$c8f825d8de076482$var$interpolationEnd","$c8f825d8de076482$var$interpolationEndLength","$c8f825d8de076482$var$id","$c8f825d8de076482$export$79a1817568da084b","$c8f825d8de076482$export$b925b7ba50a6200f","interpolation","comment","$c8f825d8de076482$export$7acfa6ed01010e37","parse","factories","parts","split","literal","factoryId","$92a0f71e83c36791$var$registry","$92a0f71e83c36791$export$3b3d5ef3c555d599","define","options","assignAspect","directive","aspectType","sourceAspect","targetAspect","$92a0f71e83c36791$export$683728dd3b823b8d","createBehavior","$bb9d557ea06bd03b$var$selectElements","nodeType","$bb9d557ea06bd03b$export$7a5d735b2ab6389d","selector","matches","$bb9d557ea06bd03b$export$755ec928f38200a4","_id","_controllerProperty","targets","targetNodeId","updateTarget","computeNodes","getSource","nodes","getNodes","filter","$3703afe7bef39fc6$export$8e0d942365449f1b","observerProperty","Symbol","handleEvent","mutations","observer","childList","MutationObserver","from","querySelectorAll","childNodes","$3703afe7bef39fc6$export$bacb5cc5a11aef16","propertyOrOptions","$f0534c3e114f3b42$var$OneWayBinding","createObserver","$f0534c3e114f3b42$export$d013c21e6c7cf47e","$ee0b2e61034c1ee7$var$registry","$ee0b2e61034c1ee7$export$c6882ecf5b9a1390","$f4e8f5ffc787333e$export$5cb32fda821782e2","styles","WeakSet","_strategy","behaviors","map","x","reduce","curr","concat","strategy","withStrategy","addStylesTo","removeStylesFrom","isAttachedTo","withBehaviors","Strategy","$f4e8f5ffc787333e$var$reduceStyles","setDefaultStrategy","normalize","$f3b5c5f9f33c0465$var$handleChange","style","setProperty","supportsAdoptedStyleSheets","adoptedStyleSheets","CSSStyleSheet","$f3b5c5f9f33c0465$export$a4f733160e5c8f6c","dataBinding","createCSS","addedCallback","$cssBindings","attr","forEach","v","k","connectedCallback","removedCallback","_","$86e25679ac61f8ba$var$marker","$86e25679ac61f8ba$var$varId","$86e25679ac61f8ba$var$nextCSSVariable","$86e25679ac61f8ba$var$collectStyles","strings","values","cssString","behavior","trim","$86e25679ac61f8ba$export$dbf350e5966cf602","elementStyles","$86e25679ac61f8ba$var$CSSPartial","css","stylesheets","accumulated","addStyles","removeStyles","partial","$4627c40b03a7fc46$export$f68c7a96500f2aea","record","observedNodes","unobserve","size","unbindables","isConnected","addBehaviorFactory","_c","_d","compiled","targetTagName","addTarget","addBehavior","nodeId","unbindable","disconnectedCallback","$e811c4e4610d6062$var$defaultShadowOptions","$e811c4e4610d6062$var$defaultElementOptions","$e811c4e4610d6062$var$fastElementBaseTypes","$e811c4e4610d6062$var$fastElementRegistry","$e811c4e4610d6062$export$dbb8b6d358bc70ba","nameOrConfig","platformDefined","template","registry","customElements","proto","observedAttributes","propertyLookup","attributeLookup","shadowOptions","elementOptions","isDefined","compose","nameOrDef","registerBaseType","$2c7cec50df6e87c7$var$bindingStartMarker","$2c7cec50df6e87c7$var$bindingEndMarker","$2c7cec50df6e87c7$var$repeatViewStartMarker","$2c7cec50df6e87c7$var$repeatViewEndMarker","$2c7cec50df6e87c7$var$elementBoundaryStartMarker","$2c7cec50df6e87c7$var$elementBoundaryEndMarker","$2c7cec50df6e87c7$var$isComment","node","Node","COMMENT_NODE","$2c7cec50df6e87c7$export$d9a04faa81df4f36","attributeMarkerName","attributeBindingSeparator","contentBindingStartMarker","uniqueId","contentBindingEndMarker","repeatStartMarker","repeatEndMarker","isContentBindingStartMarker","isContentBindingEndMarker","isRepeatViewStartMarker","isRepeatViewEndMarker","isElementBoundaryStartMarker","data","isElementBoundaryEndMarker","parseAttributeBinding","parseInt","parseContentBindingStartMarker","$2c7cec50df6e87c7$var$parseIndexAndIdMarker","parseContentBindingEndMarker","parseRepeatStartMarker","$2c7cec50df6e87c7$var$parseIntMarker","parseRepeatEndMarker","parseElementBoundaryStartMarker","$2c7cec50df6e87c7$var$parseStringMarker","parseElementBoundaryEndMarker","regex","match","exec","$2c7cec50df6e87c7$export$7393b5ded7a91eb8","for","$2c7cec50df6e87c7$export$9934e196b2f5d5b7","$b0fa72c1c098d988$var$defaultEventOptions","bubbles","composed","cancelable","$b0fa72c1c098d988$var$isConnectedPropertyName","$b0fa72c1c098d988$var$shadowRoots","$b0fa72c1c098d988$var$getShadowRoot","shadowRoot","$b0fa72c1c098d988$export$c72c0f72b4b26c7e","boundObservables","needsInitialization","hasExistingShadowRoot","_template","stage","guardBehaviorConnection","behaviorsConnected","_mainStyles","view","attachShadow","accessors","resolveTemplate","renderTemplate","mainStyles","resolveStyles","targetBehaviors","count","removeBehavior","force","HTMLElement","append","sourceBehaviors","removeChild","connect","bindObservables","connectBehaviors","propertyNames","keys","disconnectBehaviors","attrDef","emit","dispatchEvent","CustomEvent","host","child","firstChild","render","forCustomElement","setStrategy","$b0fa72c1c098d988$var$normalizeStyleTarget","getRootNode","$b0fa72c1c098d988$export$ff9a4b215f625f9a","styleSheetCache","sheets","sheet","replaceSync","$b0fa72c1c098d988$var$addAdoptedStyleSheets","$b0fa72c1c098d988$var$removeAdoptedStyleSheets","$b0fa72c1c098d988$var$id","$b0fa72c1c098d988$var$nextStyleId","$b0fa72c1c098d988$var$usableStyleTarget","body","styleClass","createElement","innerHTML","className","$b0fa72c1c098d988$var$deferHydrationAttribute","$b0fa72c1c098d988$var$needsHydrationAttribute","$b0fa72c1c098d988$export$263e00ec4c78a647","hydrationObserverHandler","hydrationObserver","undefined","needsHydration","hasAttribute","attributeFilter","lastChild","nextSibling","previousSibling","hydrate","install","$c96f3fac790afe8c$var$createFASTElement","BaseType","$emit","attributeChangedCallback","$c96f3fac790afe8c$var$define","$c96f3fac790afe8c$export$904ba5187827962e","$c96f3fac790afe8c$export$da64fc29f17f9d0e","$61c950affd928ccc$var$OneTimeBinding","$545669a1f403c4ef$export$431d786e0fa03e5f","message","$545669a1f403c4ef$var$isComment","$545669a1f403c4ef$var$isText","TEXT_NODE","$545669a1f403c4ef$export$33c30cbe164cb415","range","createRange","setStart","setEnd","$545669a1f403c4ef$export$814fd3cda928c189","$c4b29108f07d34df$var$removeNodeSequence","firstNode","lastNode","parent","parentNode","nodeName","$c4b29108f07d34df$var$DefaultExecutionContext","isEven","isOdd","isFirst","isInMiddle","isLast","$c4b29108f07d34df$export$1b0b7079c4551d79","fragment","appendTo","appendChild","insertBefore","hasChildNodes","end","remove","evaluateUnbindables","disposeContiguousBatch","views","$c4b29108f07d34df$export$a8d753d276b93290","unhydrated","hydrating","hydrated","$c4b29108f07d34df$export$ba65c3a861c05521","templateString","sourceTemplate","hostBindingTarget","_hydrationStage","_bindingViewBoundaries","_targets","compile","hydrationStage","bindingViewBoundaries","createDocumentFragment","boundaries","treeRoot","commonAncestorContainer","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","acceptNode","comparePoint","FILTER_ACCEPT","FILTER_REJECT","currentNode","ELEMENT_NODE","$545669a1f403c4ef$var$targetElement","attrFactoryIds","$545669a1f403c4ef$var$targetComment","$545669a1f403c4ef$var$skipToElementBoundaryEndMarker","parsed","root","$545669a1f403c4ef$var$isShadowRoot","DocumentFragment","createTextNode","nextNode","detach","cloneContents","$a4c6739fd636375e$var$sinkLookup","t","textContent","$fastView","viewNodes","$fastTemplate","isComposed","needsBindOnly","lookup","state","cv","classVersions","version","names","currentName","$a4c6739fd636375e$export$c590b280af2e6950","isHydrating","addEventListener","preventDefault","aspected","$27553d59dc84703f$var$targetIdFrom","parentId","nodeIndex","$27553d59dc84703f$var$descriptorCache","$27553d59dc84703f$var$next","$27553d59dc84703f$var$tryWarn","startsWith","$27553d59dc84703f$var$warningHost","Proxy","$27553d59dc84703f$var$CompilationContext","directives","nodeIds","descriptors","addFactory","targetIndex","addTargetDescriptor","targetId","lastIndexOf","grandparentId","childIndex","createView","cloneNode","h","$27553d59dc84703f$var$compileAttributes","includeBasicValues","attrValue","parseResult","$27553d59dc84703f$export$3a6335acfcf707c9","aggregate","removeAttributeNode","$27553d59dc84703f$var$templateTag","fec","firstElementChild","createComment","adoptNode","$27553d59dc84703f$var$compileChildren","childNode","$27553d59dc84703f$var$compileNode","$27553d59dc84703f$var$compileContent","currentPart","bindingPolicy","partCount","finalParts","scope","output","$9c750268536c24e0$var$lastAttributeNameRegex","$9c750268536c24e0$var$noFactories","$9c750268536c24e0$export$f5439a5bc3830f91","empty","$9c750268536c24e0$export$98f7e629c251afe6","inline","withPolicy","currentString","currentValue","staticValue","$9c750268536c24e0$var$createHTML","prevString","$9c750268536c24e0$export$c0bb0b647f701bb5","raw","$3c437a811fef0672$export$ceb3ee475cfd64d1","removed","addedCount","adjustTo","arrayLength","$3c437a811fef0672$export$2bfb3010befe266c","reset","optimized","$3c437a811fef0672$var$reset","$3c437a811fef0672$var$resetSplices","$3c437a811fef0672$var$defaultSpliceStrategy","support","previous","changes","$3c437a811fef0672$var$project","splices","initialSplices","$3c437a811fef0672$var$merge","inserted","insertionOffset","start1","end1","start2","end2","intersectCount","deleteCount","currentRemoved","prepend","offset","$3c437a811fef0672$var$calc","currentStart","currentEnd","old","oldStart","oldEnd","prefixCount","suffixCount","minLength","min","$3c437a811fef0672$var$sharedPrefix","searchLength","$3c437a811fef0672$var$sharedSuffix","index1","index2","ops","$3c437a811fef0672$var$spliceOperationsFromEditDistances","distances","edits","northWest","west","north","reverse","$3c437a811fef0672$var$calcEditDistances","rowCount","columnCount","oldIndex","pop","notEmpty","addSplice","sort","unshift","$3c437a811fef0672$var$setNonEnumerable","$3c437a811fef0672$var$DefaultArrayObserver","oldCollection","_lengthObserver","flush","lengthObserver","$3c437a811fef0672$var$enabled","$3c437a811fef0672$export$ddffcc348cf2aba1","enable","collection","$fastPatch","method","o","$c8c3610357d62a92$export$6cdc818096b8be3c","$35c5c2bf2e163710$var$defaultRepeatOptions","positioning","recycle","$35c5c2bf2e163710$var$bindWithoutPositioning","items","parentContext","$35c5c2bf2e163710$var$bindWithPositioning","$35c5c2bf2e163710$var$isCommentNode","$35c5c2bf2e163710$export$be1769e3b8cade2","propertyBag","$35c5c2bf2e163710$export$9320ef0c85148109","itemsObserver","bindView","itemsBindingObserver","templateBindingObserver","templateBinding","location","observeItems","hydrateViews","refreshAllViews","unbindAllViews","updateViews","oldObserver","newObserver","hasNewObserver","leftoverViews","leftoverIndex","availableViews","removeIndex","addIndex","removedViews","totalAvailableViews","neighbor","viewsLength","templateChanged","itemsLength","serializer","XMLSerializer","viewsState","viewTemplateString","serializeToString","rootNodeContent","start","unmatchedEndMarkers","$35c5c2bf2e163710$export$3e91f6eae87714ce","$35c5c2bf2e163710$export$76d90c956114f2c2","$0e98bee1b5009bfe$var$slotEvent","$0e98bee1b5009bfe$export$321a4334e9cbbbe2","removeEventListener","assignedNodes","$0e98bee1b5009bfe$export$e2355138873b532d","$74d218dd1da63c7a$var$noTemplate","$74d218dd1da63c7a$var$normalizeBinding","$74d218dd1da63c7a$export$a55877ca9db47377","condition","templateOrTemplateBinding","elseTemplateOrTemplateBinding","elseBinding","$bbcc8d9121aace42$export$7254cc27399e90bd","_history","_value","_notifier","results","mutator","toPrimitive","$bbcc8d9121aace42$export$e6a0daad8304de","$ed877747710b53cd$var$$89fec59bbef2bb37$export$98c71376181af907","validator","_validator","setter","previousValue","then","catch","console","$ed877747710b53cd$export$d184a47a971dd4b9","stateValidator","receiver","$21d7e6efcf443e5e$exports","$2fd506a82ad7eba4$exports","$kjyEk","buf","crypto","getRandomValues","msCrypto","randomBytes","Uint8Array","TypeError","bytes","$c0e7b3090ccc4e49$export$74e446f6456d826d","String","componentId","section1","section2","section3","collectionId","join","extend","$c0e7b3090ccc4e49$export$31b40729666a4ae0","hv1","segment1","segment2","segment3","NIL","encode","chaine","replace","v4","$1365a7571d71f20d$var$$parcel$exportWildcard","dest","hasOwnProperty","$1365a7571d71f20d$var$$parcel$export","n","s","$1365a7571d71f20d$var$$535bb7ac3b1a1d6d$exports","$1365a7571d71f20d$var$$b1b98f19caab25c2$exports","$1365a7571d71f20d$export$683a0e8baad8b9c3","$1365a7571d71f20d$var$$a1f8df21dd3b8ee9$exports","$1365a7571d71f20d$export$ca000e230c0caa3e","y","privateName","states","handleStateChange","propertyKey","$1365a7571d71f20d$var$$f24f9f18a7b99a68$exports","$1365a7571d71f20d$export$af73ab700e00763e","effects","effects_register","effect","execute","dependency","effects_without_depedencies","dependencies","effects_with_depedencies","useEffect","includes","log","$1365a7571d71f20d$export$dc573d8a6576cdb3","$1365a7571d71f20d$var$$5193209399721411$exports","$1365a7571d71f20d$var$$21522158c10703ef$exports","$1365a7571d71f20d$export$ca3487b83ec6860a","$1365a7571d71f20d$export$5761d9f85430a54b","$1365a7571d71f20d$export$eaa89ade56b7c0c1","fn","parentElement","use","$1365a7571d71f20d$var$$f6651d38d609160e$exports","$1365a7571d71f20d$export$7d1e3a5e95ceca43","$1365a7571d71f20d$export$1ef8aea9a6de98d","$1365a7571d71f20d$export$eff4d24c3ff7876e","$1365a7571d71f20d$var$$c66c6ea353620255$exports","$1365a7571d71f20d$export$28205fa712822499","$1365a7571d71f20d$export$792c882b75ca2192","$1365a7571d71f20d$export$60241385465d0a34","_state","_callback","$1365a7571d71f20d$var$$6e530dd7df9f7fe5$exports","$1365a7571d71f20d$export$81053cd05d55c9d8","$1365a7571d71f20d$export$18211b6e76035cfa","$1365a7571d71f20d$export$1d567c320f4763bc","$1365a7571d71f20d$var$$15db1e855f042fe6$exports","$1365a7571d71f20d$export$f36d8f10294685f8","$1365a7571d71f20d$export$51c6edf8ee19b71a","$1365a7571d71f20d$export$a40009bd2c363351","loading","$1365a7571d71f20d$var$$fde9406d76ec24a9$exports","$1365a7571d71f20d$export$dcc5cf24d8fb3b41","$1365a7571d71f20d$export$2b76b04f92326cd","$1365a7571d71f20d$export$b176171395436676","initialObject","observabe","createProxy","$data","observers","propKey","store","notifyObservers","operation","arrayMethods","$1365a7571d71f20d$var$$c5a7ff2cef84a00c$exports","$1365a7571d71f20d$var$$46dc60c1cf1be4f3$export$855330f8a2a9f2e8","effect_name","$1365a7571d71f20d$var$$facec54f608d45db$export$ad300186e7a01246","useState","$1365a7571d71f20d$var$$7d8e02f1fed4bf94$export$366cf43304d85757","$1365a7571d71f20d$export$c0bb0b647f701bb5","$1365a7571d71f20d$export$7f8b9f308979d41d","bindState","bindConsumable","bindEffect","$1365a7571d71f20d$var$$407cc31aa7cd1215$exports","$1365a7571d71f20d$var$$899e8805cec15bdd$exports","$1365a7571d71f20d$export$1053a9be1bcefef9","$1365a7571d71f20d$var$$ea70625fa1b5e3d6$exports","$1365a7571d71f20d$export$b3890eb0ae9dca99","$1365a7571d71f20d$var$$ea70625fa1b5e3d6$var$observeChilds","container","mutationsList","mutation","addedNodes","subtree","$b68a6531175bc8e1$export$27d4b096c6b2c10d","$59edd190d21ff10d$export$5144c47e5f9a9878","slotName","children","$694e9d39e9dac0a0$export$4968fc43a1249d4e","handleBooleanAttribute","cretateOnSlotChangeHandler","$5OQrz","$ab497cf0bca85b9e$export$b94310965bed44e6","customElement","home","$ab497cf0bca85b9e$export$6e2c8f0811a474ce","section","$ab497cf0bca85b9e$export$a06f1c675e846f6f","footer","$ab497cf0bca85b9e$export$2b77a92f1a5ad772","PfModalBox","Effects","EffectRegistery","DecoratorAttributeConfiguration","attrState","Observable","IWebComponent","WebComponent","ViewExecutionContext","IEffect","Record","when","repeat","elements","slotted","ViewTemplate","HTMLDirective","HTMLBindingDirective","HTMLView","Binding","Subscriber","BindingDirective","ExpressionObserver","AsyncAppendBindig","AsyncAppendDirective","T","asyncAppend","StatelessAttachedAttributeDirective","IElementRef","createRef","RefDirective","ref","State","createState","StateBindig","StateDirective","Properties","StyleBindig","StyleDirective","UntilBindig","UntilDirective","until","createObservableObject","ObservableArray","ObservableObject","ObservableProxy","createStorage","uuid","Key","Value","volatile","_html","HTMLTemplateTag","FASTElement","States","this","ViewContext","observeChilds","MutationObserverInit","Notifier","Storage","StorageKeys","StorageValues","StateValidator","_storage","Partial","RECORD","FixedLengthString","__fixedLength","Length","ComponentId","Segment","ParentSegementId","CollectionId","HUID","HierarchicalUUIDOptions","_HUID","N"],"version":3,"file":"index.64c3be7d.js.map"}