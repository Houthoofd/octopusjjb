{"mappings":"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","sources":["<anon>","server/src/index.ts","server/src/routes/index.ts","server/src/routes/users.ts","server/src/routes/api.ts","server/src/routes/connexion.ts","server/src/packages/db/client.ts","server/src/packages/db/mysqlconnector.ts","server/src/routes/cours.ts","server/src/routes/inscriptions.ts"],"sourcesContent":["var $671Y0$express = require(\"express\");\nvar $671Y0$cookieparser = require(\"cookie-parser\");\nvar $671Y0$morgan = require(\"morgan\");\nvar $671Y0$cors = require(\"cors\");\nvar $671Y0$path = require(\"path\");\nvar $671Y0$mysql = require(\"mysql\");\n\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n\n\n\n\n\n\nconst $3e911f1d9b930b56$var$router = (0, ($parcel$interopDefault($671Y0$express))).Router();\n$3e911f1d9b930b56$var$router.get(\"/\", function(req, res, next) {\n    res.send({\n        layer: \"users\",\n        version: 1\n    });\n});\nvar $3e911f1d9b930b56$export$2e2bcd8739ae039 = $3e911f1d9b930b56$var$router;\n\n\n\nconst $7230b92b54c5d39a$var$router = (0, ($parcel$interopDefault($671Y0$express))).Router();\n$7230b92b54c5d39a$var$router.get(\"/\", function(req, res, next) {\n    res.send({\n        layer: \"api\",\n        version: 1\n    });\n});\nvar $7230b92b54c5d39a$export$2e2bcd8739ae039 = $7230b92b54c5d39a$var$router;\n\n\n\n\nclass $bdcbdcffcba7de45$export$2e2bcd8739ae039 {\n    connection;\n    constructor(){\n        // Configuration de la connexion à la base de données MySQL\n        this.connection = (0, ($parcel$interopDefault($671Y0$mysql))).createConnection({\n            host: \"localhost\",\n            user: \"root\",\n            password: \"\",\n            database: \"octopus_jjb\"\n        });\n        // Établir la connexion à la base de données\n        this.connection.connect((err)=>{\n            if (err) {\n                console.error(\"Erreur de connexion \\xe0 la base de donn\\xe9es : \" + err.stack);\n                return;\n            }\n            console.log(\"Connect\\xe9 \\xe0 la base de donn\\xe9es MySQL avec l'ID : \" + this.connection.threadId);\n        });\n    }\n    query(sql, values, callback) {\n        // Exécuter la requête SQL avec les valeurs échappées\n        this.connection.query(sql, values, (error, results, fields)=>{\n            callback(error, results, fields);\n        });\n    }\n    close() {\n        // Fermer la connexion à la base de données\n        this.connection.end((err)=>{\n            if (err) {\n                console.error(\"Erreur lors de la fermeture de la connexion : \" + err.stack);\n                return;\n            }\n            console.log(\"Connexion \\xe0 la base de donn\\xe9es MySQL ferm\\xe9e\");\n        });\n    }\n}\n\n\nclass $35b9bc73e24b0c0b$export$1f2bb630327ac4b6 {\n    VerificationUtilisateur(sql, values) {\n        return new Promise((resolve, reject)=>{\n            const mysqlConnector = new (0, $bdcbdcffcba7de45$export$2e2bcd8739ae039)();\n            console.log(\"\\xe9x\\xe9cution du query\");\n            console.log(sql, values);\n            mysqlConnector.query(sql, values, (error, results)=>{\n                if (error) {\n                    console.error(\"Erreur lors de l'ex\\xe9cution de la requ\\xeate : \" + error.message);\n                    reject(error);\n                } else {\n                    console.log(\"R\\xe9sultats de la requ\\xeate :\", results);\n                    resolve(results);\n                }\n                // Fermez la connexion ici après avoir traité les résultats\n                mysqlConnector.close();\n            });\n        });\n    }\n    Insert(sql, values) {\n        return new Promise((resolve, reject)=>{\n            const mysqlConnector = new (0, $bdcbdcffcba7de45$export$2e2bcd8739ae039)();\n            console.log(\"\\xe9x\\xe9cution du query Insert\");\n            mysqlConnector.query(sql, values, (error, results)=>{\n                if (error) {\n                    console.error(\"Erreur lors de l'ex\\xe9cution de la requ\\xeate : \" + error.message);\n                    reject(error);\n                } else {\n                    console.log(\"R\\xe9sultats de la requ\\xeate :\", results);\n                    resolve(results);\n                }\n                // Fermez la connexion ici après avoir traité les résultats\n                mysqlConnector.close();\n            });\n        });\n    }\n    query(sql, values) {\n        return new Promise((resolve, reject)=>{\n            const mysqlConnector = new (0, $bdcbdcffcba7de45$export$2e2bcd8739ae039)();\n            console.log(\"\\xe9x\\xe9cution du query\");\n            mysqlConnector.query(sql, values, (error, results)=>{\n                if (error) {\n                    console.error(\"Erreur lors de l'ex\\xe9cution de la requ\\xeate : \" + error.message);\n                    reject(error);\n                } else {\n                    console.log(\"R\\xe9sultats de la requ\\xeate :\", results);\n                    resolve(results);\n                }\n                // Fermez la connexion ici après avoir traité les résultats\n                mysqlConnector.close();\n            });\n        });\n    }\n}\n\n\nconst $45bae5e9149d8ccc$var$router = (0, ($parcel$interopDefault($671Y0$express))).Router();\n// Endpoint pour la vérification de l'utilisateur\n$45bae5e9149d8ccc$var$router.post(\"/\", (req, res)=>{\n    const { email: email, password: password } = req.body; // Récupération des données du corps de la requête\n    // Requête SQL paramétrée pour éviter les injections SQL\n    const query = \"SELECT * FROM utilisateurs WHERE email = ? AND password = ?\";\n    const values = [\n        email,\n        password\n    ];\n    const client = new (0, $35b9bc73e24b0c0b$export$1f2bb630327ac4b6)();\n    client.query(query, values).then((results)=>{\n        if (results.length > 0) res.json(results);\n        else res.status(401).send(\"Utilisateur non trouv\\xe9 ou mot de passe incorrect\");\n    }).catch((err)=>{\n        console.error(\"Erreur lors de la v\\xe9rification de l'utilisateur\", err);\n        res.status(500).send(\"Erreur lors de la v\\xe9rification de l'utilisateur\");\n    });\n});\nvar $45bae5e9149d8ccc$export$2e2bcd8739ae039 = $45bae5e9149d8ccc$var$router;\n\n\n\n\nconst $ce907584f85a90ec$var$router = (0, ($parcel$interopDefault($671Y0$express))).Router();\n// Endpoint pour la vérification de l'utilisateur\n$ce907584f85a90ec$var$router.get(\"/\", (req, res)=>{\n    // Requête SQL paramétrée pour éviter les injections SQL\n    const query = \"SELECT * FROM cours WHERE date_cours >= CURDATE() LIMIT 12\";\n    const client = new (0, $35b9bc73e24b0c0b$export$1f2bb630327ac4b6)();\n    client.query(query).then((results)=>{\n        if (results.length > 0) res.json(results);\n        else res.status(401).send(\"Cours non trouv\\xe9s\");\n    }).catch((err)=>{\n        console.error(\"Erreur lors du chargement des cours\", err);\n        res.status(500).send(\"Erreur lors du chargement des cours\");\n    });\n});\nvar $ce907584f85a90ec$export$2e2bcd8739ae039 = $ce907584f85a90ec$var$router;\n\n\n\nconst $969e9f4020ce4141$var$router = (0, ($parcel$interopDefault($671Y0$express))).Router();\n// Endpoint pour la vérification de l'utilisateur\n$969e9f4020ce4141$var$router.post(\"/\", (req, res)=>{\n    res.send({\n        message: \"ljflzeg\"\n    });\n//   const { first_name } = req.body;\n//   if (!first_name) {\n//     return res.status(400).send('Le prénom est requis');\n//   }\n//   const query = 'SELECT * FROM utilisateurs WHERE first_name = ?';\n//   const client = new SQLClient();\n//   client.query(query, [first_name])\n//     .then(results => {\n//       if (results.length > 0) {\n//         res.json(results);\n//       } else {\n//         res.status(404).send('Utilisateur non trouvé');\n//       }\n//     })\n//     .catch(err => {\n//       console.error('Erreur lors du chargement des utilisateurs', err);\n//       res.status(500).send('Erreur lors du chargement des utilisateurs');\n//     });\n});\nvar $969e9f4020ce4141$export$2e2bcd8739ae039 = $969e9f4020ce4141$var$router;\n\n\nconst $94fb801dfba666e2$var$router = (0, ($parcel$interopDefault($671Y0$express))).Router();\n// Routes principales\n$94fb801dfba666e2$var$router.use(\"/users\", (0, $3e911f1d9b930b56$export$2e2bcd8739ae039));\n$94fb801dfba666e2$var$router.use(\"/api\", (0, $7230b92b54c5d39a$export$2e2bcd8739ae039));\n$94fb801dfba666e2$var$router.use(\"/connexion\", (0, $45bae5e9149d8ccc$export$2e2bcd8739ae039));\n$94fb801dfba666e2$var$router.use(\"/cours\", (0, $ce907584f85a90ec$export$2e2bcd8739ae039));\n$94fb801dfba666e2$var$router.use(\"/inscriptions\", (0, $969e9f4020ce4141$export$2e2bcd8739ae039));\nvar $94fb801dfba666e2$export$2e2bcd8739ae039 = $94fb801dfba666e2$var$router;\n\n\nconst $9f6bdcec0f69c5d4$var$__server_dirname = process.cwd ? process.cwd() : process.env.PWD;\nconst $9f6bdcec0f69c5d4$var$app = (0, ($parcel$interopDefault($671Y0$express)))();\n$9f6bdcec0f69c5d4$var$app.use((0, ($parcel$interopDefault($671Y0$morgan)))(\"dev\"));\n$9f6bdcec0f69c5d4$var$app.use((0, ($parcel$interopDefault($671Y0$express))).json());\n$9f6bdcec0f69c5d4$var$app.use((0, ($parcel$interopDefault($671Y0$express))).urlencoded({\n    extended: false\n}));\n$9f6bdcec0f69c5d4$var$app.use((0, ($parcel$interopDefault($671Y0$cookieparser)))());\n$9f6bdcec0f69c5d4$var$app.use((0, ($parcel$interopDefault($671Y0$express))).static((0, ($parcel$interopDefault($671Y0$path))).join($9f6bdcec0f69c5d4$var$__server_dirname, \"/server/public\")));\n$9f6bdcec0f69c5d4$var$app.use((0, ($parcel$interopDefault($671Y0$cors)))());\n$9f6bdcec0f69c5d4$var$app.use(\"/\", (0, $94fb801dfba666e2$export$2e2bcd8739ae039));\n$9f6bdcec0f69c5d4$var$app.listen(3000);\n\n\n//# sourceMappingURL=index.js.map\n","import express from 'express';\r\nimport cookieParser from 'cookie-parser';\r\nimport logger from 'morgan';\r\nimport cors from 'cors';\r\nimport path from 'path';\r\n\r\nimport { default as indexRouter } from './routes';\r\n\r\nconst __server_dirname = process.cwd ? process.cwd() : process.env.PWD as string;\r\n\r\nconst app = express();\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use( express.static(path.join(__server_dirname, '/server/public')) );\r\n\r\napp.use(cors());\r\n\r\napp.use('/', indexRouter);\r\n\r\napp.listen(3000)","import path from 'path';\nimport express from 'express';\n\nconst router = express.Router();\n\nimport { default as usersRouter } from './users';\nimport { default as apiRouter } from './api';\nimport { default as connexionRouter } from './connexion';\nimport { default as coursRouter } from './cours';\nimport { default as inscriptionsCoursRouter } from './inscriptions';\n\n// Routes principales\nrouter.use('/users', usersRouter);\nrouter.use('/api', apiRouter);\nrouter.use('/connexion', connexionRouter);\nrouter.use('/cours', coursRouter);\nrouter.use('/inscriptions', inscriptionsCoursRouter);\n\nexport default router;\n","import express from 'express';\nconst router = express.Router();\n\nrouter.get('/', function(req, res, next) {\n  res.send({ layer : 'users' , version : 1 });\n});\n\nexport default router;\n","import express from 'express';\r\nconst router = express.Router();\r\n\r\nrouter.get('/', function(req, res, next) {\r\n  res.send({ layer : 'api' , version : 1 });\r\n});\r\n\r\nexport default router;","import express from 'express';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nimport {Client as SQLClient} from '../packages/db/client';\r\n\r\nconst router = express.Router();\r\n\r\n\r\n// Endpoint pour la vérification de l'utilisateur\r\nrouter.post('/', (req, res) => {\r\n  const { email, password } = req.body; // Récupération des données du corps de la requête\r\n\r\n  // Requête SQL paramétrée pour éviter les injections SQL\r\n  const query = 'SELECT * FROM utilisateurs WHERE email = ? AND password = ?';\r\n  const values = [email, password];\r\n\r\n  const client = new SQLClient();\r\n\r\n  client.query(query, values)\r\n    .then(results => {\r\n      if (results.length > 0) {\r\n        res.json(results)\r\n      } else {\r\n        res.status(401).send('Utilisateur non trouvé ou mot de passe incorrect');\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.error('Erreur lors de la vérification de l\\'utilisateur', err);\r\n      res.status(500).send('Erreur lors de la vérification de l\\'utilisateur');\r\n    });\r\n});\r\n\r\nexport default router;","import MysqlConnector from './mysqlconnector';\r\n\r\n\r\nexport class Client{\r\n\r\n    VerificationUtilisateur(sql: string, values: any[]): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            const mysqlConnector = new MysqlConnector();\r\n            console.log(\"éxécution du query\");\r\n            console.log(sql,values);\r\n            mysqlConnector.query(sql, values, (error, results) => {\r\n                if (error) {\r\n                    console.error('Erreur lors de l\\'exécution de la requête : ' + error.message);\r\n                    reject(error);\r\n                } else {\r\n                    console.log('Résultats de la requête :', results);\r\n                    resolve(results);\r\n                }\r\n    \r\n                // Fermez la connexion ici après avoir traité les résultats\r\n                mysqlConnector.close();\r\n            });\r\n        });\r\n    }\r\n\r\n    Insert(sql: string, values: any[]): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            const mysqlConnector = new MysqlConnector();\r\n            console.log(\"éxécution du query Insert\");\r\n            mysqlConnector.query(sql, values, (error, results) => {\r\n                if (error) {\r\n                    console.error('Erreur lors de l\\'exécution de la requête : ' + error.message);\r\n                    reject(error);\r\n                } else {\r\n                    console.log('Résultats de la requête :', results);\r\n                    resolve(results);\r\n                }\r\n    \r\n                // Fermez la connexion ici après avoir traité les résultats\r\n                mysqlConnector.close();\r\n            });\r\n        });\r\n    }\r\n\r\n    query(sql: string, values?: any[]): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            const mysqlConnector = new MysqlConnector();\r\n            console.log(\"éxécution du query\");\r\n            mysqlConnector.query(sql, values as any, (error, results) => {\r\n                if (error) {\r\n                    console.error('Erreur lors de l\\'exécution de la requête : ' + error.message);\r\n                    reject(error);\r\n                } else {\r\n                    console.log('Résultats de la requête :', results);\r\n                    resolve(results);\r\n                }\r\n    \r\n                // Fermez la connexion ici après avoir traité les résultats\r\n                mysqlConnector.close();\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n","import mysql from 'mysql';\r\n\r\nexport default class MysqlConnector {\r\n  private connection: mysql.Connection;\r\n\r\n  constructor() {\r\n      // Configuration de la connexion à la base de données MySQL\r\n      this.connection = mysql.createConnection({\r\n          host: 'localhost',\r\n          user: 'root',\r\n          password: '',\r\n          database: 'octopus_jjb'\r\n      });\r\n\r\n      // Établir la connexion à la base de données\r\n      this.connection.connect((err) => {\r\n          if (err) {\r\n              console.error('Erreur de connexion à la base de données : ' + err.stack);\r\n              return;\r\n          }\r\n          console.log('Connecté à la base de données MySQL avec l\\'ID : ' + this.connection.threadId);\r\n      });\r\n  }\r\n\r\n  public query(sql: string, values: any[], callback: (error: mysql.MysqlError | null, results?: any, fields?: mysql.FieldInfo[]) => void): void {\r\n    // Exécuter la requête SQL avec les valeurs échappées\r\n    this.connection.query(sql, values, (error, results, fields) => {\r\n        callback(error, results, fields);\r\n    });\r\n}\r\n\r\n  public close(): void {\r\n      // Fermer la connexion à la base de données\r\n      this.connection.end((err) => {\r\n          if (err) {\r\n              console.error('Erreur lors de la fermeture de la connexion : ' + err.stack);\r\n              return;\r\n          }\r\n          console.log('Connexion à la base de données MySQL fermée');\r\n      });\r\n  }\r\n}","import express from 'express';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nimport {Client as SQLClient} from '../packages/db/client';\r\n\r\nconst router = express.Router();\r\n\r\n\r\n// Endpoint pour la vérification de l'utilisateur\r\nrouter.get('/', (req, res) => {\r\n\r\n  // Requête SQL paramétrée pour éviter les injections SQL\r\n  const query = 'SELECT * FROM cours WHERE date_cours >= CURDATE() LIMIT 12';\r\n\r\n  const client = new SQLClient();\r\n\r\n  client.query(query)\r\n    .then(results => {\r\n      if (results.length > 0) {\r\n        res.json(results)\r\n      } else {\r\n        res.status(401).send('Cours non trouvés');\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.error('Erreur lors du chargement des cours', err);\r\n      res.status(500).send('Erreur lors du chargement des cours');\r\n    });\r\n});\r\n\r\nexport default router;","import express from 'express';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nimport {Client as SQLClient} from '../packages/db/client';\r\n\r\nconst router = express.Router();\r\n\r\n\r\n// Endpoint pour la vérification de l'utilisateur\r\nrouter.post('/', (req, res) => {\r\n    res.send({message: \"ljflzeg\"})\r\n//   const { first_name } = req.body;\r\n\r\n//   if (!first_name) {\r\n//     return res.status(400).send('Le prénom est requis');\r\n//   }\r\n\r\n//   const query = 'SELECT * FROM utilisateurs WHERE first_name = ?';\r\n\r\n//   const client = new SQLClient();\r\n\r\n//   client.query(query, [first_name])\r\n//     .then(results => {\r\n//       if (results.length > 0) {\r\n//         res.json(results);\r\n//       } else {\r\n//         res.status(404).send('Utilisateur non trouvé');\r\n//       }\r\n//     })\r\n//     .catch(err => {\r\n//       console.error('Erreur lors du chargement des utilisateurs', err);\r\n//       res.status(500).send('Erreur lors du chargement des utilisateurs');\r\n//     });\r\n});\r\n\r\nexport default router;"],"names":["$671Y0$express","require","$671Y0$cookieparser","$671Y0$morgan","$671Y0$cors","$671Y0$path","$671Y0$mysql","$parcel$interopDefault","a","__esModule","default","$3e911f1d9b930b56$var$router","Router","get","req","res","next","send","layer","version","$7230b92b54c5d39a$var$router","$bdcbdcffcba7de45$export$2e2bcd8739ae039","connection","constructor","createConnection","host","user","password","database","connect","err","console","error","stack","log","threadId","query","sql","values","callback","results","fields","close","end","$35b9bc73e24b0c0b$export$1f2bb630327ac4b6","VerificationUtilisateur","Promise","resolve","reject","mysqlConnector","message","Insert","$45bae5e9149d8ccc$var$router","post","email","body","client","then","length","json","status","catch","$ce907584f85a90ec$var$router","$969e9f4020ce4141$var$router","$94fb801dfba666e2$var$router","use","$9f6bdcec0f69c5d4$var$__server_dirname","process","cwd","env","PWD","$9f6bdcec0f69c5d4$var$app","urlencoded","extended","static","join","listen"],"version":3,"file":"index.js.map","sourceRoot":"../../"}