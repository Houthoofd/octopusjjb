'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _prep = require('./internal/prep');

var _prep2 = _interopRequireDefault(_prep);

var _get = require('./get');

var _get2 = _interopRequireDefault(_get);

var _keyArray = require('./keyArray');

var _keyArray2 = _interopRequireDefault(_keyArray);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

exports.default = (0, _prep2.default)({
    name: 'entriesReverse',
    // $FlowFixMe - using * as flow cannot recognise Symbol.iterator as being @@iterator (see https://github.com/facebook/flow/issues/1163)
    all: function all() {
        return function (value) {
            var _ref;

            var keys = (0, _keyArray2.default)()(value);
            var counter = keys.length - 1;
            return _ref = {}, _defineProperty(_ref, Symbol.iterator, function () {
                return this;
            }), _defineProperty(_ref, 'next', function next() {
                return keys.hasOwnProperty(counter) ? {
                    value: [keys[counter], (0, _get2.default)(keys[counter--])(value)],
                    done: false
                } : {
                    done: true
                };
            }), _ref;
        };
    }
});