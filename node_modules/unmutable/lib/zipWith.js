'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _prep = require('./internal/prep');

var _prep2 = _interopRequireDefault(_prep);

var _get = require('./get');

var _get2 = _interopRequireDefault(_get);

var _map = require('./map');

var _map2 = _interopRequireDefault(_map);

var _pipeWith = require('./util/pipeWith');

var _pipeWith2 = _interopRequireDefault(_pipeWith);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var hasNext = function hasNext(collections, index) {
    return collections.every(function (ii) {
        return ii.length > index;
    });
};

exports.default = (0, _prep2.default)({
    name: 'zipWith',
    immutable: 'zipWith',
    array: function array(zipper) {
        for (var _len = arguments.length, collections = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            collections[_key - 1] = arguments[_key];
        }

        return function (value) {
            collections = [value].concat(_toConsumableArray(collections));
            var zipped = [];
            for (var index = 0; hasNext(collections, index); index++) {
                (0, _pipeWith2.default)(collections, (0, _map2.default)((0, _get2.default)(index)), function (values) {
                    return zipper.apply(undefined, _toConsumableArray(values));
                }, function (ii) {
                    return zipped.push(ii);
                });
            }
            return zipped;
        };
    }
});