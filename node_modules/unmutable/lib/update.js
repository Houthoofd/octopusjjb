'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _overload;

var _prep = require('./internal/prep');

var _prep2 = _interopRequireDefault(_prep);

var _get = require('./get');

var _get2 = _interopRequireDefault(_get);

var _overload2 = require('./util/overload');

var _overload3 = _interopRequireDefault(_overload2);

var _set = require('./set');

var _set2 = _interopRequireDefault(_set);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

exports.default = (0, _prep2.default)({
    name: 'update',
    immutable: 'update',
    all: (0, _overload3.default)((_overload = {}, _defineProperty(_overload, "1", function _() {
        return function (updater) {
            return function (value) {
                return updater(value);
            };
        };
    }), _defineProperty(_overload, "2", function _(fn) {
        return function (key, updater) {
            return fn(key, updater);
        };
    }), _defineProperty(_overload, "3", function _(fn) {
        return function (key, notSetValue, updater) {
            return fn(key, updater, notSetValue);
        };
    }), _overload), function (key, updater) {
        var notSetValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
        return function (value) {
            return (0, _set2.default)(key, updater((0, _get2.default)(key, notSetValue)(value)))(value);
        };
    })
});