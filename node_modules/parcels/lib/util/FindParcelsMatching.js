'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _toArray2 = require('babel-runtime/helpers/toArray');

var _toArray3 = _interopRequireDefault(_toArray2);

var _Matcher = require('../modifiers/Matcher');

var _flatMap = require('unmutable/lib/flatMap');

var _flatMap2 = _interopRequireDefault(_flatMap);

var _shallowEquals = require('unmutable/lib/shallowEquals');

var _shallowEquals2 = _interopRequireDefault(_shallowEquals);

var _take = require('unmutable/lib/take');

var _take2 = _interopRequireDefault(_take);

var _pipeWith = require('unmutable/lib/util/pipeWith');

var _pipeWith2 = _interopRequireDefault(_pipeWith);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (startParcel, match) {
    var matchParts = (0, _Matcher.split)(match);
    var path = startParcel.path();

    var baseMatches = (0, _pipeWith2.default)(matchParts, (0, _take2.default)(path.length), (0, _shallowEquals2.default)(path));

    if (!baseMatches) {
        return [];
    }

    var get = function get(parcel, matchParts) {
        var _matchParts = (0, _toArray3.default)(matchParts),
            matchPart = _matchParts[0],
            remainingMatchParts = _matchParts.slice(1);

        if (!matchPart) {
            return [parcel];
        }
        if (!parcel.isParent()) {
            return [];
        }
        if ((0, _Matcher.containsWildcard)(matchPart)) {
            return (0, _pipeWith2.default)(parcel.toArray(function (pp) {
                return get(pp, remainingMatchParts);
            }), (0, _flatMap2.default)(function (ii) {
                return ii;
            }));
        }
        if (!parcel.has(matchPart)) {
            return [];
        }
        return get(parcel.get(matchPart), remainingMatchParts);
    };

    return get(startParcel, matchParts.slice(path.length));
};