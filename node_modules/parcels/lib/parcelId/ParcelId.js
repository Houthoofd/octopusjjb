'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.stringifyPath = exports.escapeKey = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _doIf = require('unmutable/lib/doIf');

var _doIf2 = _interopRequireDefault(_doIf);

var _last = require('unmutable/lib/last');

var _last2 = _interopRequireDefault(_last);

var _push = require('unmutable/lib/push');

var _push2 = _interopRequireDefault(_push);

var _rest = require('unmutable/lib/rest');

var _rest2 = _interopRequireDefault(_rest);

var _update = require('unmutable/lib/update');

var _update2 = _interopRequireDefault(_update);

var _updateIn = require('unmutable/lib/updateIn');

var _updateIn2 = _interopRequireDefault(_updateIn);

var _pipeWith = require('unmutable/lib/util/pipeWith');

var _pipeWith2 = _interopRequireDefault(_pipeWith);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var escapeKey = exports.escapeKey = function escapeKey(key) {
    return key.replace(/([^\w])/g, "%$1");
};
var stringifyPath = exports.stringifyPath = function stringifyPath(path) {
    return path.map(escapeKey).join(".");
};

var DEFAULT_PARCELID_DATA = {
    id: ["^"],
    path: ["^"],
    typedPath: ["^"]
};

var ParcelId = function ParcelId() {
    var _this = this;

    var parcelIdData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_PARCELID_DATA;
    (0, _classCallCheck3.default)(this, ParcelId);

    this._create = function (data) {
        return new ParcelId(data);
    };

    this.key = function () {
        return (0, _last2.default)()(_this._path);
    };

    this.id = function () {
        return _this._id.join(".");
    };

    this.path = function () {
        return (0, _rest2.default)()(_this._path);
    };

    this.typedPathString = function () {
        return _this._typedPath.join(".");
    };

    this.push = function (key, isElement) {
        var escapeAndPush = isElement ? (0, _push2.default)(key) : (0, _push2.default)(escapeKey(key));

        return (0, _pipeWith2.default)(_this.toJS(), (0, _update2.default)('id', escapeAndPush), (0, _update2.default)('path', (0, _push2.default)(key)), (0, _update2.default)('typedPath', escapeAndPush), _this._create);
    };

    this.pushModifier = function (modifierTypeId) {
        return (0, _pipeWith2.default)(_this.toJS(), (0, _update2.default)('id', (0, _push2.default)('~' + modifierTypeId)), _this._create);
    };

    this.toJS = function () {
        return {
            id: _this._id,
            path: _this._path,
            typedPath: _this._typedPath
        };
    };

    this.setTypeCode = function (typeCode) {
        return (0, _pipeWith2.default)(_this.toJS(), (0, _updateIn2.default)(['typedPath', -1], (0, _doIf2.default)(function (ii) {
            return ii.replace(/%:/g, "").indexOf(":") === -1;
        }, function (ii) {
            return ii + ':' + typeCode;
        })), _this._create);
    };

    this._id = parcelIdData.id;
    this._path = parcelIdData.path;
    this._typedPath = parcelIdData.typedPath;
};

exports.default = ParcelId;