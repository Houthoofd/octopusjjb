'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _Types = require('../types/Types');

var _Types2 = _interopRequireDefault(_Types);

var _MethodCreator = require('./MethodCreator');

var _MethodCreator2 = _interopRequireDefault(_MethodCreator);

var _ActionCreators = require('../change/ActionCreators');

var _ActionCreators2 = _interopRequireDefault(_ActionCreators);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _MethodCreator2.default)("Indexed", function (_this) {
    return {

        // change methods

        delete: function _delete(key) {
            (0, _Types2.default)('delete() expects param "key" to be', 'keyIndex')(key);
            _this.dispatch(_ActionCreators2.default.delete(key));
        },

        insertAfter: function insertAfter(key, value) {
            (0, _Types2.default)('insertAfter() expects param "key" to be', 'keyIndex')(key);
            _this.dispatch(_ActionCreators2.default.insertAfter(key, value));
        },

        insertBefore: function insertBefore(key, value) {
            (0, _Types2.default)('insertBefore() expects param "key" to be', 'keyIndex')(key);
            _this.dispatch(_ActionCreators2.default.insertBefore(key, value));
        },

        push: function push(value) {
            _this.dispatch(_ActionCreators2.default.push(value));
        },

        pop: function pop() {
            _this.dispatch(_ActionCreators2.default.pop());
        },

        shift: function shift() {
            _this.dispatch(_ActionCreators2.default.shift());
        },

        swap: function swap(keyA, keyB) {
            (0, _Types2.default)('swap() expects param "keyA" to be', 'keyIndex')(keyA);
            (0, _Types2.default)('swap() expects param "keyB" to be', 'keyIndex')(keyB);
            _this.dispatch(_ActionCreators2.default.swap(keyA, keyB));
        },

        swapNext: function swapNext(key) {
            (0, _Types2.default)('swapNext() expects param "key" to be', 'keyIndex')(key);
            _this.dispatch(_ActionCreators2.default.swapNext(key));
        },

        swapPrev: function swapPrev(key) {
            (0, _Types2.default)('swapPrev() expects param "key" to be', 'keyIndex')(key);
            _this.dispatch(_ActionCreators2.default.swapPrev(key));
        },

        unshift: function unshift(value) {
            _this.dispatch(_ActionCreators2.default.unshift(value));
        }
    };
});