'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _ParcelId = require('../parcelId/ParcelId');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ParcelRegistry = function ParcelRegistry() {
    var _this = this;

    (0, _classCallCheck3.default)(this, ParcelRegistry);
    this._registry = {};

    this.get = function (id) {
        return _this._registry[id];
    };

    this.set = function (id, reference) {
        _this._registry[id] = reference;
    };
};

var DispatchRegistry = function DispatchRegistry() {
    var _this2 = this;

    (0, _classCallCheck3.default)(this, DispatchRegistry);
    this._dispatchedPaths = {};

    this.hasPathDispatched = function (path) {
        return !!_this2._dispatchedPaths[(0, _ParcelId.stringifyPath)(path)];
    };

    this.markPathAsDispatched = function (path) {
        _this2._dispatchedPaths[(0, _ParcelId.stringifyPath)(path)] = true;
    };
};

var LocationShareRegistry = function LocationShareRegistry() {
    var _this3 = this;

    (0, _classCallCheck3.default)(this, LocationShareRegistry);
    this._locationShareData = {};

    this.get = function (path) {
        return _this3._locationShareData[(0, _ParcelId.stringifyPath)(path)] || {};
    };

    this.set = function (path, partialData) {
        _this3._locationShareData[(0, _ParcelId.stringifyPath)(path)] = (0, _extends3.default)({}, _this3.get(path), partialData);
    };
};

var Treeshare = function Treeshare(_ref) {
    var _this4 = this;

    var debugRender = _ref.debugRender;
    (0, _classCallCheck3.default)(this, Treeshare);
    this._debugRender = false;
    this.registry = new ParcelRegistry();
    this.dispatch = new DispatchRegistry();
    this.locationShare = new LocationShareRegistry();

    this.getDebugRender = function () {
        return _this4._debugRender;
    };

    this._debugRender = debugRender;
};

exports.default = Treeshare;