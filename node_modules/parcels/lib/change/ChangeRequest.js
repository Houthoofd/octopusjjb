'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _Reducer = require('../change/Reducer');

var _Reducer2 = _interopRequireDefault(_Reducer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ChangeRequest = function ChangeRequest() {
    var _this = this;

    var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    (0, _classCallCheck3.default)(this, ChangeRequest);
    this._actions = [];
    this._meta = {};
    this._originId = null;
    this._originPath = null;

    this._create = function (_ref) {
        var actions = _ref.actions,
            baseParcel = _ref.baseParcel,
            meta = _ref.meta,
            originId = _ref.originId,
            originPath = _ref.originPath;

        var changeRequest = new ChangeRequest();
        changeRequest._actions = actions || _this._actions;
        changeRequest._baseParcel = baseParcel || _this._baseParcel;
        changeRequest._meta = meta || _this._meta;
        changeRequest._originId = originId || _this._originId;
        changeRequest._originPath = originPath || _this._originPath;
        return changeRequest;
    };

    this._unget = function (key) {
        return _this._create({
            actions: _this._actions.map(function (ii) {
                return ii._unget(key);
            })
        });
    };

    this.setBaseParcel = function (baseParcel) {
        return _this._create({
            baseParcel: baseParcel
        });
    };

    this.data = function () {
        if (!_this._baseParcel) {
            throw new Error('ChangeRequest data() cannot be called before calling setBaseParcel()');
        }

        var parcelDataFromRegistry = _this._baseParcel._treeshare.registry.get(_this._baseParcel._id.id()).raw();

        return (0, _Reducer2.default)(parcelDataFromRegistry, _this._actions);
    };

    this.value = function () {
        return _this.data().value;
    };

    this.meta = function () {
        return _this.data().meta;
    };

    this.actions = function () {
        return _this._actions;
    };

    this.updateActions = function (updater) {
        return _this._create({
            actions: updater(_this._actions)
        });
    };

    this.merge = function (other) {
        return _this.updateActions(function (ii) {
            return ii.concat(other.actions());
        }).setChangeRequestMeta(other.changeRequestMeta());
    };

    this.changeRequestMeta = function () {
        return _this._meta;
    };

    this.setChangeRequestMeta = function (partialMeta) {
        return _this._create({
            meta: (0, _extends3.default)({}, _this._meta, partialMeta)
        });
    };

    this.originId = function () {
        return _this._originId;
    };

    this.originPath = function () {
        return _this._originPath;
    };

    this.toJS = function () {
        return {
            actions: _this._actions,
            meta: _this._meta,
            originId: _this._originId,
            originPath: _this._originPath
        };
    };

    this._actions = this._actions.concat(action);
};

exports.default = ChangeRequest;